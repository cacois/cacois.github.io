<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.4" created="2015-12-15 02:05" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Codehenge</title>
	<link>http://codehenge.net/blog</link>
	<description>Who built it...and why?&#009;&#009;A blog about software, programming, and technology.</description>
	<pubDate>Tue, 15 Dec 2015 02:05:47 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://codehenge.net/blog</wp:base_site_url>
	<wp:base_blog_url>http://codehenge.net/blog</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[cacois]]></wp:author_login><wp:author_email><![CDATA[cacois@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[cacois]]></wp:author_display_name><wp:author_first_name><![CDATA[Constantine]]></wp:author_first_name><wp:author_last_name><![CDATA[Cois]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename><![CDATA[image-analysis]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Image Analysis]]></wp:cat_name><wp:category_description><![CDATA[Dedicated to a topic dear to me: Computational Image Analysis. I hold a special interest in medical image analysis, as my dissertation was focused in this area, but continue to explore all types of computational imaging and analysis techniques as a matter of course.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename><![CDATA[open-source]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Open Source]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename><![CDATA[programming]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Programming]]></wp:cat_name><wp:category_description><![CDATA[A category dedicated to programming topics and software pursuits.  ]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename><![CDATA[research]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Research]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename><![CDATA[technology]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Technology]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename><![CDATA[virtualization]]></wp:category_nicename><wp:category_parent><![CDATA[]]></wp:category_parent><wp:cat_name><![CDATA[Virtualization]]></wp:cat_name><wp:category_description><![CDATA[A category dedicated to virtualization technology, spanning both hardware and related development APIs.  Virtualization platforms of specific interest include VMWare, Xen, and Virtualbox.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename><![CDATA[android]]></wp:category_nicename><wp:category_parent><![CDATA[programming]]></wp:category_parent><wp:cat_name><![CDATA[Android]]></wp:cat_name><wp:category_description><![CDATA[A category dedicated to android app development.]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>47</wp:term_id><wp:category_nicename><![CDATA[node-js-programming]]></wp:category_nicename><wp:category_parent><![CDATA[programming]]></wp:category_parent><wp:cat_name><![CDATA[Node.js]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug><![CDATA[adb]]></wp:tag_slug><wp:tag_name><![CDATA[adb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug><![CDATA[android]]></wp:tag_slug><wp:tag_name><![CDATA[Android]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug><![CDATA[announcement]]></wp:tag_slug><wp:tag_name><![CDATA[announcement]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug><![CDATA[asynchronous]]></wp:tag_slug><wp:tag_name><![CDATA[asynchronous]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug><![CDATA[automate]]></wp:tag_slug><wp:tag_name><![CDATA[automate]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug><![CDATA[automated]]></wp:tag_slug><wp:tag_name><![CDATA[automated]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug><![CDATA[automation]]></wp:tag_slug><wp:tag_name><![CDATA[automation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug><![CDATA[book]]></wp:tag_slug><wp:tag_name><![CDATA[book]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug><![CDATA[book-review]]></wp:tag_slug><wp:tag_name><![CDATA[book review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug><![CDATA[chservice]]></wp:tag_slug><wp:tag_name><![CDATA[CHService]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug><![CDATA[cloud]]></wp:tag_slug><wp:tag_name><![CDATA[cloud]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug><![CDATA[configuration]]></wp:tag_slug><wp:tag_name><![CDATA[configuration]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug><![CDATA[development]]></wp:tag_slug><wp:tag_name><![CDATA[development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug><![CDATA[devops]]></wp:tag_slug><wp:tag_name><![CDATA[devops]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug><![CDATA[example]]></wp:tag_slug><wp:tag_name><![CDATA[example]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug><![CDATA[express]]></wp:tag_slug><wp:tag_name><![CDATA[express]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug><![CDATA[github]]></wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug><![CDATA[google]]></wp:tag_slug><wp:tag_name><![CDATA[google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug><![CDATA[guide]]></wp:tag_slug><wp:tag_name><![CDATA[guide]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug><![CDATA[hacking]]></wp:tag_slug><wp:tag_name><![CDATA[hacking]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug><![CDATA[html]]></wp:tag_slug><wp:tag_name><![CDATA[html]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug><![CDATA[image-analysis-2]]></wp:tag_slug><wp:tag_name><![CDATA[image analysis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug><![CDATA[imaging]]></wp:tag_slug><wp:tag_name><![CDATA[imaging]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug><![CDATA[java]]></wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug><![CDATA[javacript]]></wp:tag_slug><wp:tag_name><![CDATA[javacript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug><![CDATA[javascript]]></wp:tag_slug><wp:tag_name><![CDATA[javascript]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug><![CDATA[listview]]></wp:tag_slug><wp:tag_name><![CDATA[listview]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug><![CDATA[mobile]]></wp:tag_slug><wp:tag_name><![CDATA[Mobile]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug><![CDATA[mongodb]]></wp:tag_slug><wp:tag_name><![CDATA[mongodb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug><![CDATA[node]]></wp:tag_slug><wp:tag_name><![CDATA[node]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug><![CDATA[node-js]]></wp:tag_slug><wp:tag_name><![CDATA[node.js]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug><![CDATA[nodejs]]></wp:tag_slug><wp:tag_name><![CDATA[nodejs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug><![CDATA[nosql]]></wp:tag_slug><wp:tag_name><![CDATA[nosql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug><![CDATA[open-source]]></wp:tag_slug><wp:tag_name><![CDATA[Open Source]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug><![CDATA[presentation]]></wp:tag_slug><wp:tag_name><![CDATA[presentation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug><![CDATA[programming]]></wp:tag_slug><wp:tag_name><![CDATA[Programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug><![CDATA[python]]></wp:tag_slug><wp:tag_name><![CDATA[python]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug><![CDATA[redis]]></wp:tag_slug><wp:tag_name><![CDATA[redis]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug><![CDATA[research-2]]></wp:tag_slug><wp:tag_name><![CDATA[research]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug><![CDATA[review]]></wp:tag_slug><wp:tag_name><![CDATA[review]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug><![CDATA[science]]></wp:tag_slug><wp:tag_name><![CDATA[science]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug><![CDATA[social]]></wp:tag_slug><wp:tag_name><![CDATA[social]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug><![CDATA[socket-io]]></wp:tag_slug><wp:tag_name><![CDATA[socket.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug><![CDATA[socketio]]></wp:tag_slug><wp:tag_name><![CDATA[socketio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug><![CDATA[software]]></wp:tag_slug><wp:tag_name><![CDATA[Software]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug><![CDATA[software-development]]></wp:tag_slug><wp:tag_name><![CDATA[software-development]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug><![CDATA[talk]]></wp:tag_slug><wp:tag_name><![CDATA[talk]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug><![CDATA[talks]]></wp:tag_slug><wp:tag_name><![CDATA[talks]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug><![CDATA[tutorial]]></wp:tag_slug><wp:tag_name><![CDATA[tutorial]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug><![CDATA[twitter]]></wp:tag_slug><wp:tag_name><![CDATA[twitter]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug><![CDATA[vagrant]]></wp:tag_slug><wp:tag_name><![CDATA[vagrant]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug><![CDATA[virtualbox]]></wp:tag_slug><wp:tag_name><![CDATA[virtualbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug><![CDATA[virtualization-2]]></wp:tag_slug><wp:tag_name><![CDATA[virtualization]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug><![CDATA[web]]></wp:tag_slug><wp:tag_name><![CDATA[web]]></wp:tag_name></wp:tag>

	<generator>https://wordpress.org/?v=4.4</generator>

	<item>
		<title>Segmentation of the Aortic Arch</title>
		<link>http://codehenge.net/blog/2010/11/dont-take-your-users-to-school/aa_and_segment/</link>
		<pubDate>Mon, 15 Nov 2010 00:14:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2010/11/AA_and_segment.png</guid>
		<description></description>
		<content:encoded><![CDATA[A cardiac CT image (left) and an overlaid segmentation of the aortic arch (right)]]></content:encoded>
		<excerpt:encoded><![CDATA[Segmentation of the Aortic Arch]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2010-11-14 19:14:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-11-15 00:14:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[aa_and_segment]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>22</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2010/11/AA_and_segment.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/AA_and_segment.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"403";s:6:"height";s:3:"300";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:26:"2010/11/AA_and_segment.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"AA_and_segment-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"AA_and_segment-300x223.png";s:5:"width";s:3:"300";s:6:"height";s:3:"223";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[2D Segmentation of the Aortic Arch]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3D CT Image with the aortic arch segmented</title>
		<link>http://codehenge.net/blog/2010/11/dont-take-your-users-to-school/ct_aaa_overlay/</link>
		<pubDate>Mon, 15 Nov 2010 00:20:47 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2010/11/CT_AAA_overlay.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[3D CT Image with the aortic arch segmented]]></content:encoded>
		<excerpt:encoded><![CDATA[3D CT Image with the aortic arch segmented]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date><![CDATA[2010-11-14 19:20:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-11-15 00:20:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ct_aaa_overlay]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>22</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2010/11/CT_AAA_overlay.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/CT_AAA_overlay.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"600";s:6:"height";s:3:"600";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:26:"2010/11/CT_AAA_overlay.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"CT_AAA_overlay-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"CT_AAA_overlay-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Example Parameter Optimization Space</title>
		<link>http://codehenge.net/blog/2010/11/dont-take-your-users-to-school/example_dsc_curve_bone/</link>
		<pubDate>Mon, 15 Nov 2010 00:32:35 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2010/11/example_DSC_curve_bone.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Example Parameter Optimization Space]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date><![CDATA[2010-11-14 19:32:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-11-15 00:32:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example_dsc_curve_bone]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>22</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2010/11/example_DSC_curve_bone.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/example_DSC_curve_bone.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1200";s:6:"height";s:3:"900";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:34:"2010/11/example_DSC_curve_bone.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"example_DSC_curve_bone-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:34:"example_DSC_curve_bone-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:5:"large";a:3:{s:4:"file";s:35:"example_DSC_curve_bone-1024x768.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-17 at 10.23.12 PM</title>
		<link>http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/screen-shot-2011-04-17-at-10-23-12-pm/</link>
		<pubDate>Mon, 18 Apr 2011 02:24:20 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date><![CDATA[2011-04-17 22:24:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-04-18 02:24:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-04-17-at-10-23-12-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>26</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"559";s:6:"height";s:2:"70";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-17-at-10.23.12-PM-150x70.png";s:5:"width";s:3:"150";s:6:"height";s:2:"70";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-17-at-10.23.12-PM-300x37.png";s:5:"width";s:3:"300";s:6:"height";s:2:"37";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-29 at 11.37.30 PM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-04-29-at-11-37-30-pm/</link>
		<pubDate>Sat, 30 Apr 2011 03:37:50 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date><![CDATA[2011-04-29 23:37:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-04-30 03:37:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-04-29-at-11-37-30-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"441";s:6:"height";s:2:"28";s:14:"hwstring_small";s:22:"height='8' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-29-at-11.37.30-PM-150x28.png";s:5:"width";s:3:"150";s:6:"height";s:2:"28";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-29-at-11.37.30-PM-300x19.png";s:5:"width";s:3:"300";s:6:"height";s:2:"19";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-04-30 at 10.17.01 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-04-30-at-10-17-01-am/</link>
		<pubDate>Sat, 30 Apr 2011 14:17:41 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-30-at-10.17.01-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date><![CDATA[2011-04-30 10:17:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-04-30 14:17:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-04-30-at-10-17-01-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-30-at-10.17.01-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-04-30-at-10.17.01-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"522";s:6:"height";s:2:"31";s:14:"hwstring_small";s:22:"height='7' width='128'";s:4:"file";s:49:"2011/04/Screen-shot-2011-04-30-at-10.17.01-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-30-at-10.17.01-AM-150x31.png";s:5:"width";s:3:"150";s:6:"height";s:2:"31";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-04-30-at-10.17.01-AM-300x17.png";s:5:"width";s:3:"300";s:6:"height";s:2:"17";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.18.51 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-18-51-am/</link>
		<pubDate>Sun, 01 May 2011 13:19:24 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:19:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:19:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-18-51-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"570";s:6:"height";s:2:"75";s:14:"hwstring_small";s:23:"height='16' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.18.51-AM-150x75.png";s:5:"width";s:3:"150";s:6:"height";s:2:"75";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.18.51-AM-300x39.png";s:5:"width";s:3:"300";s:6:"height";s:2:"39";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.21.00 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-21-00-am/</link>
		<pubDate>Sun, 01 May 2011 13:21:37 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.21.00-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:21:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:21:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-21-00-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.21.00-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.21.00-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1429";s:6:"height";s:3:"919";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.21.00-AM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-01-at-9.21.00-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-01-at-9.21.00-AM-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}s:5:"large";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-01-at-9.21.00-AM-1024x658.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"658";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.22.57 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-22-57-am/</link>
		<pubDate>Sun, 01 May 2011 13:23:29 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.22.57-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:23:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:23:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-22-57-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.22.57-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.22.57-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1429";s:6:"height";s:3:"916";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.22.57-AM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-01-at-9.22.57-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-01-at-9.22.57-AM-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}s:5:"large";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-01-at-9.22.57-AM-1024x656.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"656";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.22.57 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-22-57-am-2/</link>
		<pubDate>Sun, 01 May 2011 13:24:21 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.22.57-AM1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:24:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:24:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-22-57-am-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.22.57-AM1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.22.57-AM1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1429";s:6:"height";s:3:"916";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:49:"2011/05/Screen-shot-2011-05-01-at-9.22.57-AM1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-01-at-9.22.57-AM1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-01-at-9.22.57-AM1-300x192.png";s:5:"width";s:3:"300";s:6:"height";s:3:"192";}s:5:"large";a:3:{s:4:"file";s:50:"Screen-shot-2011-05-01-at-9.22.57-AM1-1024x656.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"656";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.25.59 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-25-59-am/</link>
		<pubDate>Sun, 01 May 2011 13:26:36 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:26:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:26:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-25-59-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"289";s:6:"height";s:3:"161";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-01-at-9.25.59-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.28.40 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-28-40-am/</link>
		<pubDate>Sun, 01 May 2011 13:29:09 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:29:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:29:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-28-40-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"480";s:6:"height";s:2:"45";s:14:"hwstring_small";s:23:"height='12' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.28.40-AM-150x45.png";s:5:"width";s:3:"150";s:6:"height";s:2:"45";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.28.40-AM-300x28.png";s:5:"width";s:3:"300";s:6:"height";s:2:"28";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.31.22 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-31-22-am/</link>
		<pubDate>Sun, 01 May 2011 13:31:45 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:31:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:31:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-31-22-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"450";s:6:"height";s:2:"84";s:14:"hwstring_small";s:23:"height='23' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.31.22-AM-150x84.png";s:5:"width";s:3:"150";s:6:"height";s:2:"84";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.31.22-AM-300x56.png";s:5:"width";s:3:"300";s:6:"height";s:2:"56";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.50.23 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-50-23-am/</link>
		<pubDate>Sun, 01 May 2011 13:50:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:50:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:50:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-50-23-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"412";s:6:"height";s:2:"57";s:14:"hwstring_small";s:23:"height='17' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.50.23-AM-150x57.png";s:5:"width";s:3:"150";s:6:"height";s:2:"57";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.50.23-AM-300x41.png";s:5:"width";s:3:"300";s:6:"height";s:2:"41";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-01 at 9.55.45 AM</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/screen-shot-2011-05-01-at-9-55-45-am/</link>
		<pubDate>Sun, 01 May 2011 13:56:18 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 09:56:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 13:56:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-01-at-9-55-45-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"483";s:6:"height";s:2:"29";s:14:"hwstring_small";s:22:"height='7' width='128'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.55.45-AM-150x29.png";s:5:"width";s:3:"150";s:6:"height";s:2:"29";}s:6:"medium";a:3:{s:4:"file";s:47:"Screen-shot-2011-05-01-at-9.55.45-AM-300x18.png";s:5:"width";s:3:"300";s:6:"height";s:2:"18";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>server_test</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/server_test/</link>
		<pubDate>Sun, 01 May 2011 14:31:37 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/server_test.js</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 10:31:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 14:31:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[server_test]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/server_test.js]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/server_test.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>socket-io_test</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/socket-io_test/</link>
		<pubDate>Sun, 01 May 2011 14:31:39 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/socket-io_test.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 10:31:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 14:31:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[socket-io_test]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/socket-io_test.html]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/socket-io_test.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>socket-io_test.html</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/socket-io_test-2/</link>
		<pubDate>Sun, 01 May 2011 14:32:43 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/socket-io_test1.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 10:32:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 14:32:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[socket-io_test-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>32</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/socket-io_test1.html]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/socket-io_test1.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>simple_listview_example</title>
		<link>http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/screen-shot-2011-05-21-at-5-57-31-pm/</link>
		<pubDate>Sat, 21 May 2011 21:58:05 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date><![CDATA[2011-05-21 17:58:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-21 21:58:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-21-at-5-57-31-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>29</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-21-at-5.57.31-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"488";s:6:"height";s:3:"809";s:14:"hwstring_small";s:22:"height='96' width='57'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-21-at-5.57.31-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-21-at-5.57.31-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-21-at-5.57.31-PM-180x300.png";s:5:"width";s:3:"180";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-21 at 5.57.31 PM</title>
		<link>http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/screen-shot-2011-05-21-at-5-57-31-pm-2/</link>
		<pubDate>Sat, 21 May 2011 21:59:16 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date><![CDATA[2011-05-21 17:59:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-21 21:59:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-21-at-5-57-31-pm-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>29</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"488";s:6:"height";s:3:"809";s:14:"hwstring_small";s:22:"height='96' width='57'";s:4:"file";s:49:"2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-21-at-5.57.31-PM1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-21-at-5.57.31-PM1-180x300.png";s:5:"width";s:3:"180";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-22 at 7.40.23 PM</title>
		<link>http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/screen-shot-2011-05-22-at-7-40-23-pm/</link>
		<pubDate>Mon, 23 May 2011 00:00:07 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date><![CDATA[2011-05-22 20:00:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-23 00:00:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-22-at-7-40-23-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>29</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Screen-shot-2011-05-22-at-7.40.23-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"489";s:6:"height";s:3:"810";s:14:"hwstring_small";s:22:"height='96' width='57'";s:4:"file";s:48:"2011/05/Screen-shot-2011-05-22-at-7.40.23-PM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-22-at-7.40.23-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png";s:5:"width";s:3:"181";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rss_one</title>
		<link>http://codehenge.net/blog/rss_one/</link>
		<pubDate>Wed, 25 May 2011 12:55:32 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/rss_one.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date><![CDATA[2011-05-25 08:55:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-25 12:55:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rss_one]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/rss_one.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"128";s:6:"height";s:3:"128";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:19:"2011/05/rss_one.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/rss_one.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>twitter47</title>
		<link>http://codehenge.net/blog/twitter47/</link>
		<pubDate>Wed, 25 May 2011 12:55:33 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/twitter47.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date><![CDATA[2011-05-25 08:55:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-25 12:55:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[twitter47]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/twitter47.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/twitter47.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"256";s:6:"height";s:3:"256";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:21:"2011/05/twitter47.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"twitter47-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[313403048]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rss_two</title>
		<link>http://codehenge.net/blog/rss_two/</link>
		<pubDate>Wed, 25 May 2011 13:36:26 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/rss_two.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date><![CDATA[2011-05-25 09:36:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-25 13:36:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rss_two]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/rss_two.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/rss_two.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"128";s:6:"height";s:3:"128";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:19:"2011/05/rss_two.png";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Follow the Codehenge RSS feed!]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cacois</title>
		<link>http://codehenge.net/blog/twitter_pic/</link>
		<pubDate>Wed, 25 May 2011 20:39:54 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/twitter_pic.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date><![CDATA[2011-05-25 16:39:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-25 20:39:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[twitter_pic]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/twitter_pic.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1445";s:6:"height";s:4:"1445";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:23:"2011/05/twitter_pic.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"twitter_pic-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:23:"twitter_pic-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:25:"twitter_pic-1024x1024.jpg";s:5:"width";s:4:"1024";s:6:"height";s:4:"1024";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"4";s:6:"credit";s:0:"";s:6:"camera";s:24:"Canon PowerShot SX120 IS";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1278475613";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"20.1";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:5:"0.002";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/twitter_pic.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[313772360]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CustomListViewExample</title>
		<link>http://codehenge.net/blog/example/</link>
		<pubDate>Thu, 26 May 2011 18:03:37 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Example.java</guid>
		<description></description>
		<content:encoded><![CDATA[Custom ListView source file: Example.java]]></content:encoded>
		<excerpt:encoded><![CDATA[Custom ListView source file: Example.java]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date><![CDATA[2011-05-26 14:03:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-26 18:03:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Example.java]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Example.java]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>listitem</title>
		<link>http://codehenge.net/blog/listitem/</link>
		<pubDate>Thu, 26 May 2011 18:04:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/listitem.xml</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date><![CDATA[2011-05-26 14:04:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-26 18:04:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[listitem]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/listitem.xml]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/listitem.xml]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>main</title>
		<link>http://codehenge.net/blog/main/</link>
		<pubDate>Thu, 26 May 2011 18:04:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/main.xml</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date><![CDATA[2011-05-26 14:04:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-26 18:04:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[main]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/main.xml]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/main.xml]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Me-Copenhagen</title>
		<link>http://codehenge.net/blog/img_0140/</link>
		<pubDate>Fri, 27 May 2011 00:09:55 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/IMG_0140.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[A picture of me, Constantine Aaron Cois, in Copenhagen, Denmark]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2011-05-26 20:09:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-27 00:09:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[img_0140]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/IMG_0140-e1306455416110.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/IMG_0140-e1306455416110.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"500";s:6:"height";s:3:"500";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:35:"2011/05/IMG_0140-e1306455416110.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"IMG_0140-e1306455313476-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"IMG_0140-e1306455313476-300x300.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:37:"IMG_0140-e1306455313476-1024x1024.jpg";s:5:"width";s:4:"1024";s:6:"height";s:4:"1024";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"4";s:6:"credit";s:0:"";s:6:"camera";s:24:"Canon PowerShot SX120 IS";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1278410695";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"6";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:7:"0.00125";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{s:9:"full-orig";a:3:{s:5:"width";s:4:"3648";s:6:"height";s:4:"2736";s:4:"file";s:12:"IMG_0140.jpg";}s:10:"large-orig";a:3:{s:4:"file";s:21:"IMG_0140-1024x768.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"768";}s:11:"medium-orig";a:3:{s:4:"file";s:20:"IMG_0140-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"thumbnail-orig";a:3:{s:4:"file";s:20:"IMG_0140-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:18:"full-1306455313476";a:3:{s:5:"width";s:4:"2736";s:6:"height";s:4:"3648";s:4:"file";s:27:"IMG_0140-e1306455125365.jpg";}s:19:"large-1306455313476";a:3:{s:4:"file";s:36:"IMG_0140-e1306455125365-768x1024.jpg";s:5:"width";s:3:"768";s:6:"height";s:4:"1024";}s:20:"medium-1306455313476";a:3:{s:4:"file";s:35:"IMG_0140-e1306455125365-225x300.jpg";s:5:"width";s:3:"225";s:6:"height";s:3:"300";}s:23:"thumbnail-1306455313476";a:3:{s:4:"file";s:35:"IMG_0140-e1306455125365-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:18:"full-1306455416110";a:3:{s:5:"width";s:4:"2736";s:6:"height";s:4:"2736";s:4:"file";s:27:"IMG_0140-e1306455313476.jpg";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[314864176]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[A picture of me, Constantine Aaron Cois, in Copenhagen, Denmark]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter UI screenshot</title>
		<link>http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/screen-shot-2011-05-30-at-10-48-03-am/</link>
		<pubDate>Mon, 30 May 2011 14:48:27 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-10.48.03-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 10:48:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 14:48:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-30-at-10-48-03-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>30</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-10.48.03-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-05-30-at-10.48.03-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"758";s:14:"hwstring_small";s:22:"height='96' width='61'";s:4:"file";s:49:"2011/04/Screen-shot-2011-05-30-at-10.48.03-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-30-at-10.48.03-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-30-at-10.48.03-AM-191x300.png";s:5:"width";s:3:"191";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-05-30 at 11.38.04 AM</title>
		<link>http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/screen-shot-2011-05-30-at-11-38-04-am/</link>
		<pubDate>Mon, 30 May 2011 15:39:21 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-11.38.04-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 11:39:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 15:39:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-05-30-at-11-38-04-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>30</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-11.38.04-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/04/Screen-shot-2011-05-30-at-11.38.04-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"484";s:6:"height";s:3:"806";s:14:"hwstring_small";s:22:"height='96' width='57'";s:4:"file";s:49:"2011/04/Screen-shot-2011-05-30-at-11.38.04-AM.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-30-at-11.38.04-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-shot-2011-05-30-at-11.38.04-AM-180x300.png";s:5:"width";s:3:"180";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter Search Reader Example.java</title>
		<link>http://codehenge.net/blog/example-2/</link>
		<pubDate>Mon, 30 May 2011 20:20:49 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/Example1.java</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Main java code for Twitter reader example]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 16:20:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 20:20:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Example1.java]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/Example1.java]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter Search Reader listitem.xml</title>
		<link>http://codehenge.net/blog/listitem-2/</link>
		<pubDate>Mon, 30 May 2011 20:22:35 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/listitem1.xml</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 16:22:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 20:22:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[listitem-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/listitem1.xml]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/listitem1.xml]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter Search Reader main.xml</title>
		<link>http://codehenge.net/blog/main-2/</link>
		<pubDate>Mon, 30 May 2011 20:22:36 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/main1.xml</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 16:22:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 20:22:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[main-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/main1.xml]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/main1.xml]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>codehenge</title>
		<link>http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/codehenge-2/</link>
		<pubDate>Wed, 01 Jun 2011 00:04:42 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/05/codehenge1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date><![CDATA[2011-05-31 20:04:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-01 00:04:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[codehenge-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>30</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/codehenge1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/codehenge1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"710";s:6:"height";s:3:"710";s:14:"hwstring_small";s:22:"height='96' width='95'";s:4:"file";s:22:"2011/05/codehenge1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"codehenge1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"codehenge1-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[324139080]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-06-15 at 10.16.16 PM</title>
		<link>http://codehenge.net/blog/screen-shot-2011-06-15-at-10-16-16-pm/</link>
		<pubDate>Thu, 16 Jun 2011 02:18:05 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/Screen-shot-2011-06-15-at-10.16.16-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[A screenshot of the twitter feed reader for android, TweetView]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date><![CDATA[2011-06-15 22:18:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-16 02:18:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-06-15-at-10-16-16-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/Screen-shot-2011-06-15-at-10.16.16-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/Screen-shot-2011-06-15-at-10.16.16-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"483";s:6:"height";s:3:"716";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:49:"2011/06/Screen-shot-2011-06-15-at-10.16.16-PM.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-06-15-at-10.16.16-PM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:49:"Screen-shot-2011-06-15-at-10.16.16-PM-202x300.png";s:5:"width";s:3:"202";s:6:"height";s:3:"300";}s:8:"featured";a:3:{s:4:"file";s:49:"Screen-shot-2011-06-15-at-10.16.16-PM-202x300.png";s:5:"width";s:3:"202";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[A screenshot of the twitter feed reader for android, TweetView]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android-logo_normal</title>
		<link>http://codehenge.net/blog/android-logo_normal/</link>
		<pubDate>Thu, 16 Jun 2011 02:30:31 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_normal.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date><![CDATA[2011-06-15 22:30:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-16 02:30:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-logo_normal]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_normal.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/android-logo_normal.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"239";s:6:"height";s:3:"264";s:14:"hwstring_small";s:22:"height='96' width='86'";s:4:"file";s:31:"2011/06/android-logo_normal.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:31:"android-logo_normal-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android-logo_lazy</title>
		<link>http://codehenge.net/blog/android-logo_lazy/</link>
		<pubDate>Thu, 16 Jun 2011 12:30:26 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[a lazy android logo, for the lazy loading android development tutorial]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2011-06-16 08:30:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-16 12:30:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-logo_lazy]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"239";s:6:"height";s:3:"264";s:14:"hwstring_small";s:22:"height='96' width='86'";s:4:"file";s:29:"2011/06/android-logo_lazy.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:29:"android-logo_lazy-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/android-logo_lazy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[a lazy android logo, for the lazy loading android development tutorial]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>socket-io-demo</title>
		<link>http://codehenge.net/blog/socket-io-demo/</link>
		<pubDate>Mon, 20 Jun 2011 13:26:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/socket-io-demo.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date><![CDATA[2011-06-20 09:26:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-20 13:26:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[socket-io-demo]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/socket-io-demo.zip]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/socket-io-demo.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>customizing-android-listview-example</title>
		<link>http://codehenge.net/blog/customizing-android-listview-example/</link>
		<pubDate>Mon, 20 Jun 2011 13:30:27 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/customizing-android-listview-example.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date><![CDATA[2011-06-20 09:30:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-20 13:30:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[customizing-android-listview-example]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/customizing-android-listview-example.zip]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/customizing-android-listview-example.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>progressbar</title>
		<link>http://codehenge.net/blog/2011/06/android-development-tutorial-progressbar-example/progressbar/</link>
		<pubDate>Fri, 24 Jun 2011 22:15:06 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date><![CDATA[2011-06-24 18:15:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-24 22:15:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[progressbar]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>92</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/progressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"200";s:6:"height";s:3:"166";s:14:"hwstring_small";s:23:"height='96' width='115'";s:4:"file";s:23:"2011/06/progressbar.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"progressbar-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>singleprogressbar</title>
		<link>http://codehenge.net/blog/2011/06/android-development-tutorial-progressbar-example/singleprogressbar/</link>
		<pubDate>Fri, 24 Jun 2011 23:55:19 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/06/singleprogressbar.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date><![CDATA[2011-06-24 19:55:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-24 23:55:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[singleprogressbar]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>92</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/singleprogressbar.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/06/singleprogressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"102";s:6:"height";s:2:"80";s:14:"hwstring_small";s:23:"height='80' width='102'";s:4:"file";s:29:"2011/06/singleprogressbar.jpg";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ghost-in-the-wires</title>
		<link>http://codehenge.net/blog/ghost-in-the-wires/</link>
		<pubDate>Mon, 08 Aug 2011 22:09:26 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/ghost-in-the-wires.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date><![CDATA[2011-08-08 18:09:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-08 22:09:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ghost-in-the-wires]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/ghost-in-the-wires.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/ghost-in-the-wires.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"300";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:30:"2011/08/ghost-in-the-wires.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"ghost-in-the-wires-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:28:"ghost-in-the-wires-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:28:"ghost-in-the-wires-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:28:"ghost-in-the-wires-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:28:"ghost-in-the-wires-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:28:"ghost-in-the-wires-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:28:"ghost-in-the-wires-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>freekevin</title>
		<link>http://codehenge.net/blog/freekevin/</link>
		<pubDate>Mon, 08 Aug 2011 22:54:04 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/freekevin.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date><![CDATA[2011-08-08 18:54:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-08 22:54:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[freekevin]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/freekevin.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/freekevin.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"404";s:6:"height";s:2:"92";s:14:"hwstring_small";s:23:"height='29' width='128'";s:4:"file";s:21:"2011/08/freekevin.jpg";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"freekevin-150x92.jpg";s:5:"width";s:3:"150";s:6:"height";s:2:"92";}s:6:"medium";a:3:{s:4:"file";s:20:"freekevin-300x68.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"68";}s:8:"featured";a:3:{s:4:"file";s:20:"freekevin-300x68.jpg";s:5:"width";s:3:"300";s:6:"height";s:2:"68";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:19:"freekevin-96x92.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"92";}s:9:"widget-24";a:3:{s:4:"file";s:19:"freekevin-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:19:"freekevin-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:19:"freekevin-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:19:"freekevin-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:19:"freekevin-96x92.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"92";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android_vector_full</title>
		<link>http://codehenge.net/blog/android_vector/</link>
		<pubDate>Mon, 29 Aug 2011 03:08:57 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date><![CDATA[2011-08-28 23:08:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 03:08:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android_vector]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/android_vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1024";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:26:"2011/08/android_vector.jpg";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"android_vector-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"android_vector-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:8:"featured";a:3:{s:4:"file";s:26:"android_vector-300x225.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:24:"android_vector-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:24:"android_vector-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:24:"android_vector-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:24:"android_vector-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:24:"android_vector-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:24:"android_vector-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android_vector_200_150</title>
		<link>http://codehenge.net/blog/2011/08/installing-and-using-adb-in-osx/web/</link>
		<pubDate>Mon, 29 Aug 2011 03:11:14 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date><![CDATA[2011-08-28 23:11:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 03:11:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[web]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>102</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/android_vector_200_150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"200";s:6:"height";s:3:"150";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:34:"2011/08/android_vector_200_150.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:3:{s:4:"file";s:34:"android_vector_200_150-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:32:"android_vector_200_150-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:32:"android_vector_200_150-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:32:"android_vector_200_150-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:32:"android_vector_200_150-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:32:"android_vector_200_150-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:32:"android_vector_200_150-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:3:"Web";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android_manager</title>
		<link>http://codehenge.net/blog/2011/08/installing-and-using-adb-in-osx/android_manager/</link>
		<pubDate>Mon, 29 Aug 2011 03:27:19 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date><![CDATA[2011-08-28 23:27:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 03:27:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android_manager]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>102</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/android_manager.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"700";s:6:"height";s:3:"503";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:27:"2011/08/android_manager.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"android_manager-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:27:"android_manager-300x215.png";s:5:"width";s:3:"300";s:6:"height";s:3:"215";}s:8:"featured";a:3:{s:4:"file";s:27:"android_manager-300x215.png";s:5:"width";s:3:"300";s:6:"height";s:3:"215";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:25:"android_manager-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:25:"android_manager-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:25:"android_manager-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:25:"android_manager-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:25:"android_manager-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:25:"android_manager-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android_manager</title>
		<link>http://codehenge.net/blog/2011/08/installing-and-using-adb-in-osx/android_manager-2/</link>
		<pubDate>Mon, 29 Aug 2011 03:30:14 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2011-08-28 23:30:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 03:30:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android_manager-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>102</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/android_manager1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"700";s:6:"height";s:3:"503";s:14:"hwstring_small";s:23:"height='91' width='128'";s:4:"file";s:28:"2011/08/android_manager1.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"android_manager1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:28:"android_manager1-300x215.png";s:5:"width";s:3:"300";s:6:"height";s:3:"215";}s:8:"featured";a:3:{s:4:"file";s:28:"android_manager1-300x215.png";s:5:"width";s:3:"300";s:6:"height";s:3:"215";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:26:"android_manager1-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:26:"android_manager1-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:26:"android_manager1-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:26:"android_manager1-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:26:"android_manager1-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:26:"android_manager1-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Terminal Emulator SuperUser Access</title>
		<link>http://codehenge.net/blog/2011/08/rooting-a-motorola-photon-without-a-dock/terminal-emulator-superuser-access/</link>
		<pubDate>Mon, 29 Aug 2011 23:40:20 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/Terminal-Emulator-SuperUser-Access.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date><![CDATA[2011-08-29 19:40:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 23:40:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[terminal-emulator-superuser-access]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>108</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/Terminal-Emulator-SuperUser-Access.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/Terminal-Emulator-SuperUser-Access.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"320";s:6:"height";s:3:"480";s:14:"hwstring_small";s:22:"height='96' width='64'";s:4:"file";s:46:"2011/08/Terminal-Emulator-SuperUser-Access.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:46:"Terminal-Emulator-SuperUser-Access-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:46:"Terminal-Emulator-SuperUser-Access-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}s:8:"featured";a:3:{s:4:"file";s:46:"Terminal-Emulator-SuperUser-Access-200x300.png";s:5:"width";s:3:"200";s:6:"height";s:3:"300";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:44:"Terminal-Emulator-SuperUser-Access-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Terminal Emulator SuperUser Access Image]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>android-root</title>
		<link>http://codehenge.net/blog/2011/08/rooting-a-motorola-photon-without-a-dock/android-root/</link>
		<pubDate>Mon, 29 Aug 2011 23:43:55 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date><![CDATA[2011-08-29 19:43:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 23:43:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-root]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>108</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/android-root.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"250";s:6:"height";s:3:"250";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:24:"2011/08/android-root.gif";s:5:"sizes";a:7:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"android-root-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:22:"android-root-96x96.gif";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:22:"android-root-24x24.gif";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:22:"android-root-36x36.gif";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:22:"android-root-48x48.gif";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:22:"android-root-64x64.gif";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:22:"android-root-96x96.gif";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screen shot 2011-12-04 at 11.43.32 PM</title>
		<link>http://codehenge.net/blog/screen-shot-2011-12-04-at-11-43-32-pm/</link>
		<pubDate>Mon, 05 Dec 2011 04:53:07 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date><![CDATA[2011-12-04 23:53:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 04:53:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-12-04-at-11-43-32-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"582";s:6:"height";s:2:"43";s:14:"hwstring_small";s:22:"height='9' width='128'";s:4:"file";s:49:"2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.43.32-PM-150x43.png";s:5:"width";s:3:"150";s:6:"height";s:2:"43";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.43.32-PM-300x22.png";s:5:"width";s:3:"300";s:6:"height";s:2:"22";}s:8:"featured";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.43.32-PM-300x22.png";s:5:"width";s:3:"300";s:6:"height";s:2:"22";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-96x43.png";s:5:"width";s:2:"96";s:6:"height";s:2:"43";}s:9:"widget-24";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-48x43.png";s:5:"width";s:2:"48";s:6:"height";s:2:"43";}s:9:"widget-64";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-64x43.png";s:5:"width";s:2:"64";s:6:"height";s:2:"43";}s:9:"widget-96";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.43.32-PM-96x43.png";s:5:"width";s:2:"96";s:6:"height";s:2:"43";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Socket.io 0.7 connection accepted</title>
		<link>http://codehenge.net/blog/screen-shot-2011-12-04-at-11-44-58-pm/</link>
		<pubDate>Mon, 05 Dec 2011 04:55:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date><![CDATA[2011-12-04 23:55:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 04:55:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-12-04-at-11-44-58-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"575";s:6:"height";s:3:"129";s:14:"hwstring_small";s:23:"height='28' width='128'";s:4:"file";s:49:"2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-12-04-at-11.44.58-PM-150x129.png";s:5:"width";s:3:"150";s:6:"height";s:3:"129";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.44.58-PM-300x67.png";s:5:"width";s:3:"300";s:6:"height";s:2:"67";}s:8:"featured";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.44.58-PM-300x67.png";s:5:"width";s:3:"300";s:6:"height";s:2:"67";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.44.58-PM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Socket.io 0.7 connection accepted]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Socket.io 0.7 &quot;Hello Server!&quot; message</title>
		<link>http://codehenge.net/blog/screen-shot-2011-12-04-at-11-52-04-pm/</link>
		<pubDate>Mon, 05 Dec 2011 04:57:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.52.04-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date><![CDATA[2011-12-04 23:57:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 04:57:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-12-04-at-11-52-04-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.52.04-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/12/Screen-shot-2011-12-04-at-11.52.04-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"579";s:6:"height";s:2:"91";s:14:"hwstring_small";s:23:"height='20' width='128'";s:4:"file";s:49:"2011/12/Screen-shot-2011-12-04-at-11.52.04-PM.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.52.04-PM-150x91.png";s:5:"width";s:3:"150";s:6:"height";s:2:"91";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.52.04-PM-300x47.png";s:5:"width";s:3:"300";s:6:"height";s:2:"47";}s:8:"featured";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.52.04-PM-300x47.png";s:5:"width";s:3:"300";s:6:"height";s:2:"47";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-96x91.png";s:5:"width";s:2:"96";s:6:"height";s:2:"91";}s:9:"widget-24";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.52.04-PM-96x91.png";s:5:"width";s:2:"96";s:6:"height";s:2:"91";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Socket.io 0.7 "Hello Server!" message]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Socket.io 0.7 disconnect, reconnect, message</title>
		<link>http://codehenge.net/blog/screen-shot-2011-12-04-at-11-58-28-pm/</link>
		<pubDate>Mon, 05 Dec 2011 04:59:02 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.58.28-PM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date><![CDATA[2011-12-04 23:59:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 04:59:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-12-04-at-11-58-28-pm]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.58.28-PM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/12/Screen-shot-2011-12-04-at-11.58.28-PM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"582";s:6:"height";s:3:"144";s:14:"hwstring_small";s:23:"height='31' width='128'";s:4:"file";s:49:"2011/12/Screen-shot-2011-12-04-at-11.58.28-PM.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-12-04-at-11.58.28-PM-150x144.png";s:5:"width";s:3:"150";s:6:"height";s:3:"144";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.58.28-PM-300x74.png";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}s:8:"featured";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-04-at-11.58.28-PM-300x74.png";s:5:"width";s:3:"300";s:6:"height";s:2:"74";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-04-at-11.58.28-PM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Socket.io 0.7 disconnect, reconnect, message]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Socket.io 0.7 connect, disconnect, message</title>
		<link>http://codehenge.net/blog/screen-shot-2011-12-05-at-12-09-33-am/</link>
		<pubDate>Mon, 05 Dec 2011 05:10:32 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date><![CDATA[2011-12-05 00:10:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 05:10:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screen-shot-2011-12-05-at-12-09-33-am]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"583";s:6:"height";s:3:"175";s:14:"hwstring_small";s:23:"height='38' width='128'";s:4:"file";s:49:"2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:49:"Screen-shot-2011-12-05-at-12.09.33-AM-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-05-at-12.09.33-AM-300x90.png";s:5:"width";s:3:"300";s:6:"height";s:2:"90";}s:8:"featured";a:3:{s:4:"file";s:48:"Screen-shot-2011-12-05-at-12.09.33-AM-300x90.png";s:5:"width";s:3:"300";s:6:"height";s:2:"90";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:47:"Screen-shot-2011-12-05-at-12.09.33-AM-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>radarjam</title>
		<link>http://codehenge.net/blog/2012/04/jamit-a-python-framework-for-google-code-jam-problems/radarjam/</link>
		<pubDate>Fri, 13 Apr 2012 14:09:42 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/04/radarjam.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date><![CDATA[2012-04-13 10:09:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-13 14:09:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[radarjam]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>119</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/04/radarjam-e1334326364529.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/radarjam-e1334326364529.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"235";s:6:"height";s:3:"232";s:14:"hwstring_small";s:22:"height='96' width='97'";s:4:"file";s:35:"2012/04/radarjam-e1334326364529.jpg";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"radarjam-e1334326364529-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{s:9:"full-orig";a:3:{s:5:"width";s:3:"500";s:6:"height";s:3:"278";s:4:"file";s:12:"radarjam.jpg";}s:14:"thumbnail-orig";a:3:{s:4:"file";s:20:"radarjam-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:11:"medium-orig";a:3:{s:4:"file";s:20:"radarjam-300x166.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"166";}s:13:"featured-orig";a:3:{s:4:"file";s:20:"radarjam-300x166.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"166";}s:17:"mosaic-thumb-orig";a:3:{s:4:"file";s:18:"radarjam-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:14:"widget-24-orig";a:3:{s:4:"file";s:18:"radarjam-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:14:"widget-32-orig";a:3:{s:4:"file";s:18:"radarjam-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:14:"widget-48-orig";a:3:{s:4:"file";s:18:"radarjam-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:14:"widget-64-orig";a:3:{s:4:"file";s:18:"radarjam-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:14:"widget-96-orig";a:3:{s:4:"file";s:18:"radarjam-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cover-image-are-you-smart-enough-to-work-at-google-01-24-12</title>
		<link>http://codehenge.net/blog/2012/04/book-review-are-you-smart-enough-to-work-for-google/cover-image-are-you-smart-enough-to-work-at-google-01-24-12/</link>
		<pubDate>Sat, 21 Apr 2012 17:36:11 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2012-04-21 13:36:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-21 17:36:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cover-image-are-you-smart-enough-to-work-at-google-01-24-12]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>124</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"333";s:6:"height";s:3:"500";s:14:"hwstring_small";s:22:"height='96' width='63'";s:4:"file";s:71:"2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:71:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:71:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-199x300.jpg";s:5:"width";s:3:"199";s:6:"height";s:3:"300";}s:8:"featured";a:3:{s:4:"file";s:71:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-199x300.jpg";s:5:"width";s:3:"199";s:6:"height";s:3:"300";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:69:"cover-image-are-you-smart-enough-to-work-at-google-01-24-12-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Are You Smart Enough to Work at Google?]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>pittsburghtechfest-vector</title>
		<link>http://codehenge.net/blog/pittsburghtechfest-vector/</link>
		<pubDate>Sun, 03 Jun 2012 20:10:32 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date><![CDATA[2012-06-03 16:10:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-03 20:10:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pittsburghtechfest-vector]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/pittsburghtechfest-vector.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"350";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:37:"2012/06/pittsburghtechfest-vector.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-300x171.png";s:5:"width";s:3:"300";s:6:"height";s:3:"171";}s:8:"featured";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-200x114.png";s:5:"width";s:3:"200";s:6:"height";s:3:"114";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pittsburgh TechFest 2012</title>
		<link>http://codehenge.net/blog/pittsburghtechfest-vector-2/</link>
		<pubDate>Sun, 03 Jun 2012 20:12:30 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[Pittsburgh TechFest 2012]]></content:encoded>
		<excerpt:encoded><![CDATA[Pittsburgh TechFest 2012]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date><![CDATA[2012-06-03 16:12:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-03 20:12:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pittsburghtechfest-vector-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/pittsburghtechfest-vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"350";s:6:"height";s:3:"200";s:14:"hwstring_small";s:23:"height='73' width='128'";s:4:"file";s:37:"2012/06/pittsburghtechfest-vector.jpg";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-300x171.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"171";}s:8:"featured";a:3:{s:4:"file";s:37:"pittsburghtechfest-vector-200x114.jpg";s:5:"width";s:3:"200";s:6:"height";s:3:"114";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-24x24.jpg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-36x36.jpg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-48x48.jpg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-64x64.jpg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:35:"pittsburghtechfest-vector-96x96.jpg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Pittsburgh TechFest 2012]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SunSpider JavaScript Benchmark Test (2012)</title>
		<link>http://codehenge.net/blog/2012/06/javascript-engine-benchmarks-2012-edition/sunspider-javascript-benchmark-black/</link>
		<pubDate>Wed, 06 Jun 2012 03:04:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/06/sunspider-javascript-benchmark-black.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[SunSpider JavaScript Benchmark Test (2012)]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date><![CDATA[2012-06-05 23:04:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-06 03:04:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sunspider-javascript-benchmark-black]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>130</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/sunspider-javascript-benchmark-black.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/sunspider-javascript-benchmark-black.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"720";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:48:"2012/06/sunspider-javascript-benchmark-black.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:48:"sunspider-javascript-benchmark-black-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:48:"sunspider-javascript-benchmark-black-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:8:"featured";a:3:{s:4:"file";s:48:"sunspider-javascript-benchmark-black-200x150.png";s:5:"width";s:3:"200";s:6:"height";s:3:"150";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:46:"sunspider-javascript-benchmark-black-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>learnnodejsbyexample-250px</title>
		<link>http://codehenge.net/blog/2012/06/learn-node-js-by-example-an-online-course-in-node-js/learnnodejsbyexample-250px/</link>
		<pubDate>Sat, 30 Jun 2012 18:01:10 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Learn Node.js by Example]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2012-06-30 14:01:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-30 18:01:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learnnodejsbyexample-250px]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>136</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/learnnodejsbyexample-250px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"250";s:6:"height";s:3:"134";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:38:"2012/06/learnnodejsbyexample-250px.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:3:{s:4:"file";s:53:"learnnodejsbyexample-250px-e1345923851501-150x112.png";s:5:"width";s:3:"150";s:6:"height";s:3:"112";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:36:"learnnodejsbyexample-250px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:14:"thumbnail-orig";a:3:{s:4:"file";s:38:"learnnodejsbyexample-250px-150x134.png";s:5:"width";s:3:"150";s:6:"height";s:3:"134";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WingCloud</title>
		<link>http://codehenge.net/blog/2010/09/i-dont-wanna-come-back-down-from-this-cloud/180px-wingcloud/</link>
		<pubDate>Sat, 30 Jun 2012 18:16:05 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/06/180px-WingCloud.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Cloud?]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date><![CDATA[2012-06-30 14:16:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-30 18:16:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[180px-wingcloud]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>20</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/180px-WingCloud.jpeg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/06/180px-WingCloud.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"180";s:6:"height";s:3:"125";s:14:"hwstring_small";s:23:"height='88' width='128'";s:4:"file";s:28:"2012/06/180px-WingCloud.jpeg";s:5:"sizes";a:8:{s:9:"thumbnail";a:3:{s:4:"file";s:28:"180px-WingCloud-150x125.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"125";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:26:"180px-WingCloud-96x96.jpeg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:26:"180px-WingCloud-96x96.jpeg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:26:"180px-WingCloud-24x24.jpeg";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:26:"180px-WingCloud-36x36.jpeg";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:26:"180px-WingCloud-48x48.jpeg";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:26:"180px-WingCloud-64x64.jpeg";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:26:"180px-WingCloud-96x96.jpeg";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>redis-300px</title>
		<link>http://codehenge.net/blog/2012/07/installing-redis-on-mac-osx/redis-300px/</link>
		<pubDate>Sun, 08 Jul 2012 02:32:20 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2012-07-07 22:32:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-08 02:32:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[redis-300px]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>144</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/07/redis-300px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"115";s:14:"hwstring_small";s:23:"height='49' width='128'";s:4:"file";s:23:"2012/07/redis-300px.png";s:5:"sizes";a:9:{s:9:"thumbnail";a:3:{s:4:"file";s:23:"redis-300px-150x115.png";s:5:"width";s:3:"150";s:6:"height";s:3:"115";}s:8:"featured";a:3:{s:4:"file";s:23:"redis-300px-250x115.png";s:5:"width";s:3:"250";s:6:"height";s:3:"115";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:21:"redis-300px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:21:"redis-300px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:21:"redis-300px-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:21:"redis-300px-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:21:"redis-300px-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:21:"redis-300px-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:21:"redis-300px-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Redis]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nodejs</title>
		<link>http://codehenge.net/blog/2012/08/best-resources-to-learn-node-js/nodejs/</link>
		<pubDate>Fri, 03 Aug 2012 02:52:51 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date><![CDATA[2012-08-02 22:52:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-03 02:52:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>152</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/nodejs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"290";s:6:"height";s:3:"290";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:18:"2012/08/nodejs.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"nodejs-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:16:"nodejs-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:16:"nodejs-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:9:"widget-24";a:3:{s:4:"file";s:16:"nodejs-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:16:"nodejs-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:16:"nodejs-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:16:"nodejs-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:16:"nodejs-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Node.js]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>kraken-benchmark-2012-08-04</title>
		<link>http://codehenge.net/blog/2012/08/javascript-performance-rundown-2012/kraken-benchmark-2012-08-04/</link>
		<pubDate>Sun, 05 Aug 2012 00:51:37 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/08/kraken-benchmark-2012-08-04.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date><![CDATA[2012-08-04 20:51:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-05 00:51:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kraken-benchmark-2012-08-04]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>174</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/kraken-benchmark-2012-08-04.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/kraken-benchmark-2012-08-04.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"720";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:39:"2012/08/kraken-benchmark-2012-08-04.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:39:"kraken-benchmark-2012-08-04-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:39:"kraken-benchmark-2012-08-04-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:8:"featured";a:3:{s:4:"file";s:39:"kraken-benchmark-2012-08-04-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-96x72.png";s:5:"width";s:2:"96";s:6:"height";s:2:"72";}s:9:"widget-24";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:37:"kraken-benchmark-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sunspider-2012-08-04</title>
		<link>http://codehenge.net/blog/2012/08/javascript-performance-rundown-2012/sunspider-2012-08-04/</link>
		<pubDate>Sun, 05 Aug 2012 00:51:39 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/08/sunspider-2012-08-04.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date><![CDATA[2012-08-04 20:51:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-05 00:51:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sunspider-2012-08-04]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>174</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/sunspider-2012-08-04.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/sunspider-2012-08-04.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"720";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:32:"2012/08/sunspider-2012-08-04.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:32:"sunspider-2012-08-04-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:32:"sunspider-2012-08-04-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:8:"featured";a:3:{s:4:"file";s:32:"sunspider-2012-08-04-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-96x72.png";s:5:"width";s:2:"96";s:6:"height";s:2:"72";}s:9:"widget-24";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:30:"sunspider-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>v8-benchmark-2012-08-04</title>
		<link>http://codehenge.net/blog/2012/08/javascript-performance-rundown-2012/v8-benchmark-2012-08-04/</link>
		<pubDate>Sun, 05 Aug 2012 00:51:41 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/08/v8-benchmark-2012-08-04.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date><![CDATA[2012-08-04 20:51:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-05 00:51:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[v8-benchmark-2012-08-04]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>174</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/v8-benchmark-2012-08-04.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/v8-benchmark-2012-08-04.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"960";s:6:"height";s:3:"720";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:35:"2012/08/v8-benchmark-2012-08-04.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"v8-benchmark-2012-08-04-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:35:"v8-benchmark-2012-08-04-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:8:"featured";a:3:{s:4:"file";s:35:"v8-benchmark-2012-08-04-300x300.png";s:5:"width";s:3:"300";s:6:"height";s:3:"300";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-96x72.png";s:5:"width";s:2:"96";s:6:"height";s:2:"72";}s:9:"widget-24";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:33:"v8-benchmark-2012-08-04-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>socketio9</title>
		<link>http://codehenge.net/blog/2012/08/using-socket-io-with-express-3-x/socketio9/</link>
		<pubDate>Sat, 25 Aug 2012 19:02:13 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/08/socketio9.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date><![CDATA[2012-08-25 15:02:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-25 19:02:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[socketio9]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>179</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/socketio9-e1345923900483.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"200";s:6:"height";s:2:"68";s:14:"hwstring_small";s:23:"height='43' width='128'";s:4:"file";s:36:"2012/08/socketio9-e1345923900483.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:3:{s:4:"file";s:35:"socketio9-e1345923925890-150x51.png";s:5:"width";s:3:"150";s:6:"height";s:2:"51";}s:6:"medium";a:3:{s:4:"file";s:21:"socketio9-300x102.png";s:5:"width";s:3:"300";s:6:"height";s:3:"102";}s:8:"featured";a:3:{s:4:"file";s:21:"socketio9-300x185.png";s:5:"width";s:3:"300";s:6:"height";s:3:"185";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:19:"socketio9-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:19:"socketio9-96x32.png";s:5:"width";s:2:"96";s:6:"height";s:2:"32";}s:9:"widget-24";a:3:{s:4:"file";s:19:"socketio9-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:19:"socketio9-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:19:"socketio9-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:19:"socketio9-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:19:"socketio9-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/08/socketio9-e1345923900483.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:9:"full-orig";a:3:{s:5:"width";s:3:"539";s:6:"height";s:3:"185";s:4:"file";s:13:"socketio9.png";}s:18:"full-1345923900483";a:3:{s:5:"width";s:3:"300";s:6:"height";s:3:"102";s:4:"file";s:28:"socketio9-e1345921380351.png";}s:14:"thumbnail-orig";a:3:{s:4:"file";s:21:"socketio9-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mongo-db-logo-300x100</title>
		<link>http://codehenge.net/blog/mongo-db-logo-300x100/</link>
		<pubDate>Tue, 09 Oct 2012 01:52:43 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/10/mongo-db-logo-300x100.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>187</wp:post_id>
		<wp:post_date><![CDATA[2012-10-08 21:52:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-10-09 01:52:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mongo-db-logo-300x100]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/10/mongo-db-logo-300x100.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/mongo-db-logo-300x100.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"300";s:6:"height";s:3:"100";s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:33:"2012/10/mongo-db-logo-300x100.png";s:5:"sizes";a:8:{s:9:"thumbnail";a:3:{s:4:"file";s:33:"mongo-db-logo-300x100-150x100.png";s:5:"width";s:3:"150";s:6:"height";s:3:"100";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-96x32.png";s:5:"width";s:2:"96";s:6:"height";s:2:"32";}s:9:"widget-24";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:31:"mongo-db-logo-300x100-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[MongoDB]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>udemy-affiliate</title>
		<link>http://codehenge.net/blog/udemy-affiliate/</link>
		<pubDate>Wed, 07 Nov 2012 03:08:36 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2012/11/udemy-affiliate.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date><![CDATA[2012-11-06 22:08:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-07 03:08:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[udemy-affiliate]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/11/udemy-affiliate.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1192";s:6:"height";s:3:"835";s:14:"hwstring_small";s:23:"height='89' width='128'";s:4:"file";s:27:"2012/11/udemy-affiliate.png";s:5:"sizes";a:11:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"udemy-affiliate-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:27:"udemy-affiliate-300x210.png";s:5:"width";s:3:"300";s:6:"height";s:3:"210";}s:5:"large";a:3:{s:4:"file";s:28:"udemy-affiliate-1024x717.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"717";}s:8:"featured";a:3:{s:4:"file";s:27:"udemy-affiliate-300x210.png";s:5:"width";s:3:"300";s:6:"height";s:3:"210";}s:12:"mosaic-thumb";a:3:{s:4:"file";s:25:"udemy-affiliate-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}s:13:"gallery-thumb";a:3:{s:4:"file";s:25:"udemy-affiliate-96x67.png";s:5:"width";s:2:"96";s:6:"height";s:2:"67";}s:9:"widget-24";a:3:{s:4:"file";s:25:"udemy-affiliate-24x24.png";s:5:"width";s:2:"24";s:6:"height";s:2:"24";}s:9:"widget-32";a:3:{s:4:"file";s:25:"udemy-affiliate-36x36.png";s:5:"width";s:2:"36";s:6:"height";s:2:"36";}s:9:"widget-48";a:3:{s:4:"file";s:25:"udemy-affiliate-48x48.png";s:5:"width";s:2:"48";s:6:"height";s:2:"48";}s:9:"widget-64";a:3:{s:4:"file";s:25:"udemy-affiliate-64x64.png";s:5:"width";s:2:"64";s:6:"height";s:2:"64";}s:9:"widget-96";a:3:{s:4:"file";s:25:"udemy-affiliate-96x96.png";s:5:"width";s:2:"96";s:6:"height";s:2:"96";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/udemy-affiliate.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cois-headshot</title>
		<link>http://codehenge.net/blog/cois-headshot/</link>
		<pubDate>Mon, 21 Jan 2013 20:01:42 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/01/cois-headshot.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date><![CDATA[2013-01-21 15:01:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-21 20:01:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cois-headshot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/01/cois-headshot.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:374;s:6:"height";i:429;s:4:"file";s:25:"2013/01/cois-headshot.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"cois-headshot-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"cois-headshot-261x300.png";s:5:"width";i:261;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:25:"cois-headshot-261x300.png";s:5:"width";i:261;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:23:"cois-headshot-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:23:"cois-headshot-83x96.png";s:5:"width";i:83;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:23:"cois-headshot-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:23:"cois-headshot-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:23:"cois-headshot-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:23:"cois-headshot-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:23:"cois-headshot-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/01/cois-headshot.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>works-on-my-machine-starburst1</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/works-on-my-machine-starburst1/</link>
		<pubDate>Sun, 03 Feb 2013 22:38:11 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/works-on-my-machine-starburst1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[100% Certified!]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date><![CDATA[2013-02-03 17:38:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-03 22:38:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[works-on-my-machine-starburst1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/works-on-my-machine-starburst1-e1359931607861.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/works-on-my-machine-starburst1-e1359931607861.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:193;s:4:"file";s:57:"2013/02/works-on-my-machine-starburst1-e1359931607861.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"works-on-my-machine-starburst1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"works-on-my-machine-starburst1-300x289.png";s:5:"width";i:300;s:6:"height";i:289;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:42:"works-on-my-machine-starburst1-300x289.png";s:5:"width";i:300;s:6:"height";i:289;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-96x92.png";s:5:"width";i:96;s:6:"height";i:92;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:40:"works-on-my-machine-starburst1-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:497;s:6:"height";i:480;s:4:"file";s:34:"works-on-my-machine-starburst1.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vagrant</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/vagrant/</link>
		<pubDate>Thu, 07 Feb 2013 02:15:58 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date><![CDATA[2013-02-06 21:15:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-07 02:15:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vagrant]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-e1360203410345.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:34:"2013/02/vagrant-e1360203410345.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"vagrant-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"vagrant-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:19:"vagrant-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:17:"vagrant-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:17:"vagrant-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:17:"vagrant-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:17:"vagrant-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:17:"vagrant-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:17:"vagrant-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:17:"vagrant-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/vagrant-e1360203410345.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:730;s:6:"height";i:730;s:4:"file";s:11:"vagrant.png";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cluttered-system</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/cluttered-system/</link>
		<pubDate>Sat, 09 Feb 2013 01:18:46 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/cluttered-system.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Wat could go wrong?]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date><![CDATA[2013-02-08 20:18:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-09 01:18:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cluttered-system]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/cluttered-system-e1360372808569.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:520;s:6:"height";i:390;s:4:"file";s:43:"2013/02/cluttered-system-e1360372808569.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/cluttered-system-e1360372808569.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1073104146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_image_alt]]></wp:meta_key>
			<wp:meta_value><![CDATA[Cluttered system]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:9:"full-orig";a:3:{s:5:"width";i:720;s:6:"height";i:540;s:4:"file";s:20:"cluttered-system.png";}s:18:"full-1360372789818";a:3:{s:5:"width";i:520;s:6:"height";i:390;s:4:"file";s:35:"cluttered-system-e1360372770167.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vagrant-ssh</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/vagrant-up/</link>
		<pubDate>Sun, 10 Feb 2013 16:16:52 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-up.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date><![CDATA[2013-02-10 11:16:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-10 16:16:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vagrant-up]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-up.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:577;s:6:"height";i:157;s:4:"file";s:22:"2013/02/vagrant-up.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"vagrant-up-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"vagrant-up-300x81.png";s:5:"width";i:300;s:6:"height";i:81;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:21:"vagrant-up-300x81.png";s:5:"width";i:300;s:6:"height";i:81;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:20:"vagrant-up-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:20:"vagrant-up-96x26.png";s:5:"width";i:96;s:6:"height";i:26;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:20:"vagrant-up-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:20:"vagrant-up-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:20:"vagrant-up-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:20:"vagrant-up-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:20:"vagrant-up-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/vagrant-up.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>vagrant-hello-world</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/vagrant-hello-world/</link>
		<pubDate>Sun, 10 Feb 2013 16:36:20 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-hello-world.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date><![CDATA[2013-02-10 11:36:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-10 16:36:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vagrant-hello-world]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-hello-world-e1360514201913.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/vagrant-hello-world-e1360514201913.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:253;s:4:"file";s:46:"2013/02/vagrant-hello-world-e1360514201913.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"vagrant-hello-world-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"vagrant-hello-world-300x151.png";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:31:"vagrant-hello-world-300x151.png";s:5:"width";i:300;s:6:"height";i:151;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:29:"vagrant-hello-world-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:29:"vagrant-hello-world-96x48.png";s:5:"width";i:96;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:29:"vagrant-hello-world-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:29:"vagrant-hello-world-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:29:"vagrant-hello-world-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:29:"vagrant-hello-world-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:29:"vagrant-hello-world-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:840;s:6:"height";i:425;s:4:"file";s:23:"vagrant-hello-world.png";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hello-from-vagrant</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/hello-from-vagrant/</link>
		<pubDate>Sun, 10 Feb 2013 16:46:44 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/02/hello-from-vagrant.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>209</wp:post_id>
		<wp:post_date><![CDATA[2013-02-10 11:46:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-10 16:46:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-from-vagrant]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>202</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/02/hello-from-vagrant-e1360514820793.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/02/hello-from-vagrant-e1360514820793.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:315;s:4:"file";s:45:"2013/02/hello-from-vagrant-e1360514820793.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"hello-from-vagrant-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"hello-from-vagrant-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:30:"hello-from-vagrant-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:28:"hello-from-vagrant-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:28:"hello-from-vagrant-96x60.png";s:5:"width";i:96;s:6:"height";i:60;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:28:"hello-from-vagrant-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:28:"hello-from-vagrant-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:28:"hello-from-vagrant-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:28:"hello-from-vagrant-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:28:"hello-from-vagrant-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:839;s:6:"height";i:529;s:4:"file";s:22:"hello-from-vagrant.png";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js-summit-2013</title>
		<link>http://codehenge.net/blog/2013/09/discount-for-online-javascript-conference-2013/js-summit-2013/</link>
		<pubDate>Fri, 27 Sep 2013 13:33:45 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/09/js-summit-2013.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date><![CDATA[2013-09-27 09:33:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-09-27 13:33:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-summit-2013]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>228</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/09/js-summit-2013.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:817;s:6:"height";i:120;s:4:"file";s:26:"2013/09/js-summit-2013.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"js-summit-2013-150x120.png";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"js-summit-2013-300x44.png";s:5:"width";i:300;s:6:"height";i:44;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:25:"js-summit-2013-300x44.png";s:5:"width";i:300;s:6:"height";i:44;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:24:"js-summit-2013-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:24:"js-summit-2013-96x14.png";s:5:"width";i:96;s:6:"height";i:14;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:24:"js-summit-2013-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:24:"js-summit-2013-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:24:"js-summit-2013-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:24:"js-summit-2013-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:24:"js-summit-2013-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/09/js-summit-2013.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>js-summit-2013-sq</title>
		<link>http://codehenge.net/blog/2013/09/discount-for-online-javascript-conference-2013/js-summit-2013-sq/</link>
		<pubDate>Fri, 27 Sep 2013 13:40:12 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2013/09/js-summit-2013-sq.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date><![CDATA[2013-09-27 09:40:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-09-27 13:40:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[js-summit-2013-sq]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>228</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/09/js-summit-2013-sq.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/09/js-summit-2013-sq.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:817;s:6:"height";i:120;s:4:"file";s:29:"2013/09/js-summit-2013-sq.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"js-summit-2013-sq-150x120.png";s:5:"width";i:150;s:6:"height";i:120;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"js-summit-2013-sq-300x44.png";s:5:"width";i:300;s:6:"height";i:44;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:28:"js-summit-2013-sq-300x44.png";s:5:"width";i:300;s:6:"height";i:44;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:27:"js-summit-2013-sq-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:27:"js-summit-2013-sq-96x14.png";s:5:"width";i:96;s:6:"height";i:14;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:27:"js-summit-2013-sq-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:27:"js-summit-2013-sq-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:27:"js-summit-2013-sq-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:27:"js-summit-2013-sq-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:27:"js-summit-2013-sq-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Node.js</title>
		<link>http://codehenge.net/blog/2014/01/what-is-node-js/nodejs-1024x768/</link>
		<pubDate>Mon, 06 Jan 2014 03:43:20 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2014/01/nodejs-1024x768.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date><![CDATA[2014-01-05 22:43:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-06 03:43:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nodejs-1024x768]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2014/01/nodejs-1024x768.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/nodejs-1024x768.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:768;s:4:"file";s:27:"2014/01/nodejs-1024x768.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"nodejs-1024x768-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"nodejs-1024x768-300x225.png";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:27:"nodejs-1024x768-300x225.png";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:25:"nodejs-1024x768-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:25:"nodejs-1024x768-96x72.png";s:5:"width";i:96;s:6:"height";i:72;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:25:"nodejs-1024x768-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:25:"nodejs-1024x768-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:25:"nodejs-1024x768-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:25:"nodejs-1024x768-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:25:"nodejs-1024x768-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About Me</title>
		<link>http://codehenge.net/blog/about-me/</link>
		<pubDate>Sun, 20 Jun 2010 20:31:10 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float: left; margin: 0 10px 5px 0;"><img class="alignleft size-thumbnail wp-image-75" title="codehenge" alt="" src="http://codehenge.net/blog/wp-content/uploads/2011/05/IMG_0140-e1306455416110.jpg" width="150" height="150" /></div>
I'm Constantine Aaron Cois, a software engineer in Pittsburgh, PA. I have an M.S. and Ph.D. from the University of Pittsburgh, where my work was in algorithm and software development for medical image analysis. I'm currently leading a team of software developers for <a href="http://www.cert.org/">CERT</a> at the Carnegie Mellon University <a href="http://www.sei.cmu.edu/">Software Engineering Institute</a>. I'm also an adjunct professor at <a href="http://www.heinz.cmu.edu/">Carnegie Mellon University</a>

I consider myself a polyglot programmer, working with technologies such as Python, Django, Redis, MongoDB, Node.js, C#, .NET MVC, Java, Ruby on Rails, Android, and more on a regular basis. I'm interested in software development, tech and many other geeky things.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date><![CDATA[2010-06-20 16:31:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-06-20 20:31:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[about-me]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[322810261]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Content-aware Dynamic Image Alteration</title>
		<link>http://codehenge.net/blog/?p=8</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[<em><a href="http://www.dailymotion.com/video/x2swhh_redimensionnement-intelligent-d-ima_news#from=embed" target="_blank">Seam carving</a></em> is a particularly interesting image resizing technique first presented at <a href="http://www.siggraph.org/s2007/">SIGGRAPH 2007</a>. (<a href="http://www.shaiavidan.org/papers/imretFinal.pdf" target="_blank">Original paper</a>, for those interested). The algorithm itself has been covered at length elsewhere, so I'll stick to a brief description: The algorithm finds connected 'seams' of pixels passing through an image that can be removed with the least effect to the integrity of the scene. The author's implementation measured this pixel salience via low gradient magnitude, but other metrics could be used. Repeatedly removing the seam of least salience results in scaling down an image in a given dimension, while applying an inverse process by adding low salience pixel seams (using local mean measures to determine the intensity of the added pixels) can increase the size of an image. The result is a remarkably effective system for seamlessly resizing images on the fly.

In our world of digital renderings and Photoshop, it is becoming harder and harder to trust our eyes when it comes to any recorded image. Technologies such as this are inevitable, and present interesting implications. Web users have become used to the possibility, if not the certainly, that images they view have been slightly tweaked. Colors have been shifted, objects have been removed or added, female forms rarely have any basis in reality, but there was still a base of consistency:  Any image, doctored or not, will look the same (resolution and color notwithstanding) regardless of the device it is viewed on.

With new technologies such as content aware image resizing, this assumption is destroyed, replaced by truly dynamic images. The fabric of reality in images, _all_ images displayed with this technology enabled, becomes a slightly looser weave. Will these images end up looking synthetic to users, through some subtle visual cues, unknowingly processed in our brains? Or will the inability to determine the 'ground truth' of visual scenes beget jaded users, removed from the immersive, encompassing experience offered by the internet. What of the effects of removing the tacit perception of relative positioning of objects?  When onen can no longer determine the relative location, distance, and positioning of objects from one another, does the image lose meaning through the removal of some sort of visual empathy?

The most demonstrated application of this technology has been dynamically resizing images to facilitate elegant web layouts, and while this will certainly be a the earliest popular usage, other fascinating applications may exist. Consider the image as a generic 2-dimensional rectilinear data set, each data point being an intensity value or color vector. What other types of data sets might seam carving techniques be applied to?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date><![CDATA[2010-06-22 15:24:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-analysis"><![CDATA[Image Analysis]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>An Avalanche of Low-Quality Research?</title>
		<link>http://codehenge.net/blog/2010/06/an-avalanche-of-low-quality-research/</link>
		<pubDate>Sat, 26 Jun 2010 02:39:25 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[An interesting <a title="We Must Stop the Avalanche of Low-Quality Research" href="http://chronicle.com/article/We-Must-Stop-the-Avalanche-of/65890/" target="_self">article</a> was recently published in the <a title="The Chronicle" href="http://chronicle.com/" target="_self">Chronicle of Higher Education</a>. The authors note that the number of scientific researchers, and therefore the number of research publications, has increased dramatically in the past few decades, and claim this is indicative of an "avalanche of low-quality research" that must be quelled for the good of science. With all due respect to the authors, I'd like to address this cynical and short-sighted view of scientific research in the modern information-centric world. The article is linked above, and worth a read if you are so inclined, but at the heart is the conclusion that:
<blockquote>The amount of redundant, inconsequential, and outright poor research has  swelled in recent decades, filling countless pages in journals and  monographs.</blockquote>
The argument goes something like this:
<ul>
	<li>According to <em>Ulrich's Periodicals Directory, t</em>he number of publications is increasing at a rate of 3.26% per year, doubling in merely two decades</li>
	<li>Studies show that the number of scientific publications cited within five years of publication appears to have dropped by 4.4% in the last two decades</li>
	<li><strong>Therefore</strong>: More research is being done while less is being cited, so less <em>quality</em> research is being produced</li>
</ul>
Let's start with what I agree with. The statistics are accurate; more researchers are creating more publications and citation percentages are going down. But does this necessarily indicate an increasing proportion of low quality research? Researchers cite less when they are exploring ideas outside those previously published. According to a <a href="http://chronicle.com/blogPost/Number-of-Researchers-in/8991/" target="_self">report</a> from the United Nations Educational, Scientific, and Cultural Organization, the bulk of new researchers are coming from developing countries as they create new scientific research programs. A culture entering the research community en masse may produce researchers who approach their experiments in entirely new ways, working outside of current research trends.

It is also likely that the decrease in citations of published papers indicates that researchers are reading a smaller percentage of published findings, not that the papers out there are low-quality. The authors are correct in the observation that it is often  impossible for researchers to read all of the publications in their  field today. Rather than presume that the pool of publications  necessarily needs to be culled, the forward-thinking analysis of this  situation is that the system by which researchers to find and consume  publications relevant to their work needs an overhaul. Research is not  considered credible unless published in a peer-reviewed journal, but  journals publish findings in walled gardens, charging for access, spreading content across innumerable digital and physical distribution mediums, and neglecting to employ modern digital search techniques to allow researchers to easily locate relevant work. The truth is that the increase in the number journals and other publication venues, coupled with the limited distribution system of most journals/conferences, makes it more and more difficult for researchers to find and consume pertinent previous work, leading to less knowledge of their field, and therefore a reduction in citations. High quality research is still being created and published, but researchers are finding it more and more difficult to locate and consume it.

This is a significant problem to be overcome by the scientific research community as a whole, and not by reducing the amount of research being generated. How might we best get significant research results to the eyes of those in the field who need it to guide their own work? Research findings need to be more open, and modern distribution, search, and even crowdsourcing techniques must be applied to research findings in order to properly stimulate research communities by effectively disseminating important advances.

Let's examine another claim from the article:
<blockquote>Too much publication raises the refereeing load on leading  practitioners—often beyond their capacity to cope.</blockquote>
While this statement is absolutely true, the implication that the solution requires publication to remain on a scale that the present small group of "leading practitioners" can referee is ludicrous. Rather than shrinking the number of publications, and thus lessening
the possibility of innovation, why not increase the size of this group of "leading practitioners"? This can be done not by loosening the requirements on expertise, but by <em>creating expertise</em>. Open research, easily and freely accessible, will propagate knowledge through the community at a higher rate. Building online communities where researchers can congregate will create an engaging dialog and a motivational environment by challenging members to gain standing among a group of peers. This will lower the barrier of entry to esoteric research communities, allowing more individuals to gain understanding and contribute significantly to the research community both as a practitioner and as a reviewer. Collaborative, crowd-sourcing models such as those employed by <a title="Wikipedia" href="http://en.wikipedia.org/" target="_self">Wikipedia</a> (general knowledge) or <a title="Stack Overflow" href="http://stackoverflow.com/" target="_self">Stack  Overflow </a>(computer programming) have proven successful at disseminating knowledge and both attracting and creating expertise...why not apply similar techniques to scientific research communities?

Some steps in the right direction have been made. Most notably, recent <a href="http://thomas.loc.gov/cgi-bin/bdquery/z?d111:HR05037:@@@P" target="_self">proposed legislation</a> in the U.S. attempts to make all federally-funded research publications available to the public free of cost. New journals (e.g. <a title="Midas Journal" href="http://www.midasjournal.org/" target="_self">Midas</a>, <a title="Insight Journal" href="http://www.insight-journal.org/" target="_self">Insight</a> journals) have adopted the concept of "open access", attempting to leverage crowd-sourcing techniques for review and rating of publications and requiring submissions to be completely open to the public. These journals also encourage reproduction and validation of published work, something woefully ignored in most modern research fields. Though these implementations may not catch on beyond small communities within computing research, their existence demonstrates a desire for easier, open access to research and review by the entire research community, rather than small committees of anointed experts. It is imperative that communities are formed within research fields outside of individual labs and journal/conference communities if findings are to gain appropriate visibility in the modern research environment.

Like any force of nature, this "avalanche" of research is powerful. We can focus our efforts on the task of stifling it, or we can harness its energy to benefit the world.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date><![CDATA[2010-06-25 22:39:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-06-26 02:39:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[an-avalanche-of-low-quality-research]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="research"><![CDATA[Research]]></category>
		<category domain="post_tag" nicename="research-2"><![CDATA[research]]></category>
		<category domain="post_tag" nicename="science"><![CDATA[science]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[391355029]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Contact</title>
		<link>http://codehenge.net/blog/contact/</link>
		<pubDate>Mon, 28 Jun 2010 00:38:08 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/</guid>
		<description></description>
		<content:encoded><![CDATA[<!--contact form-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date><![CDATA[2010-06-27 20:38:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-06-28 00:38:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[contact]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_d411db33344d61b91b073103f0ee4b97]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_f1d5b7d3615de0ef7c950fc9c1c20411]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_5df460ccf5936bce1102d311f1dd2760]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_35cf704fd625935d1f48b2e3e2349f4d]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_ae58d24cca717a1f21800fd2002f4709]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_5276ef726ddcb6012b1065a183071eab]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_a4edf8ee54a6edb8f6852f963224f0a0]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Social Networks For Disease Tracking</title>
		<link>http://codehenge.net/blog/2010/07/social-networks-for-disease-tracking/</link>
		<pubDate>Fri, 16 Jul 2010 12:26:36 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[Automated disease tracking, sometimes known as Biosurveillance, is the process of collecting and analyzing a variety of forms of data to determine disease trends. I briefly worked in this field, which makes me believe I know something about it. For a while now, I've been considering the utility of status updates posted on social networks as a potential source of public health information, and it looks like I'm not the only one. While I hadn't gotten around to actually writing some code to scrub Facebook or Twitter, others have been much more productive. Lampos, et al from the University of Bristol have been <a href="http://www.lampos.net/files/Preprint_Flu_detector_Tracking_epidemics_on_Twitter.pdf" target="_blank">using tweets to determine epidemiologic trends</a> with a decent correlation to data collected from the UK's HPA (Health Protection Agency).

The power of social network data for biosurveillance comes from the fact that it is readily available in real-time. Traditional sources of epidemiological data include over-the-counter drug sales, public school absentee counts, and emergency room chief complaints. Most of these sources take days or weeks to compile and report. Chief complaints can be gathered within hospitals quickly, but most are not reported to disease tracking agencies for weeks or even months. Some <a title="Health Monitoring Systems, Inc." href="http://www.hmsinc.com/" target="_blank">companies </a>make a living contracting with hospitals to collect and analyze such data as quickly as possible to report near real-time disease trends, but even this approach is limited in that it requires legal agreements and a data reporting infrastructure to be set up between the data collection center and each hospital to be included in surveillance. This is no small task, considering the fact that the U.S. alone contains <a href="http://www.aha.org/aha/resource-center/Statistics-and-Studies/fast-facts.html" target="_blank">5815 registered hospitals</a> as of 2008 and the inclusion of community hospitals puts the number well over 10,000. In addition, emergency room surveillance represents only the fraction of the population moved to visit a hospital, likely missing the earliest data indicating an emerging epidemic ("I feel sick", "I can't go to work", "Let's skip the Murphy's cookout, they always serve vegi-burgers anyway").

The modern world of social networks drives people to constantly report their status to the web, with little concern for who, exactly, is listening. The upshot is that we can use this compulsion for chatter to gather much more data than ever before and determine health trends faster than we could have dreamed of a decade ago. Combine this with other emerging technologies such as <a href="http://www.google.org/flutrends/" target="_blank">Google's efforts</a> to apply search data to public health trending, and we have some seriously powerful tools to predict and track epidemics in their earliest possible stages. This is great news for those who like to be healthy, as the response time and planning capabilities of hospital systems and public health agencies stands to be dramatically improved in the future as this technology takes hold.]]></content:encoded>
		<excerpt:encoded><![CDATA[Automated disease tracking, sometimes known as Biosurveillance, is the process of collecting and analyzing a variety of forms of data to determine disease trends. I briefly worked in this field, which makes me believe I know something about it. For a while now, I've been considering the utility of status updates posted on social networks as a potential source of public health information, and it looks like I'm not the only one. While I hadn't gotten around to actually writing some code to scrub Facebook or Twitter, others have been much more productive. Lampos, et al from the University of Bristol have been using tweets to determine epidemiologic trends with a decent correlation to data collected from the UK's HPA (Health Protection Agency).]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2010-07-16 08:26:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-07-16 12:26:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[social-networks-for-disease-tracking]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="research"><![CDATA[Research]]></category>
		<category domain="post_tag" nicename="social"><![CDATA[social]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[329224960]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started: Using Express With Node.js</title>
		<link>http://codehenge.net/blog/?p=31</link>
		<pubDate>Sat, 30 Apr 2011 03:23:48 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2011-04-29 23:23:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-04-30 03:23:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="express"><![CDATA[express]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development Tutorial - Fragments</title>
		<link>http://codehenge.net/blog/?p=33</link>
		<pubDate>Mon, 23 May 2011 23:06:45 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2011-05-23 19:06:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-23 23:06:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Node.js, Socket.io, and JSON</title>
		<link>http://codehenge.net/blog/?p=49</link>
		<pubDate>Mon, 02 May 2011 03:28:52 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=49</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 23:28:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-02 03:28:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development Tutorial - Advanced ListView Customization</title>
		<link>http://codehenge.net/blog/?p=53</link>
		<pubDate>Mon, 23 May 2011 23:11:04 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[This post is intended to build on the first ListView customization post and dive into separators, buttons, etc.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date><![CDATA[2011-05-23 19:11:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-23 23:11:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development Tutorial - External Data Storage and Retrieval</title>
		<link>http://codehenge.net/blog/?p=54</link>
		<pubDate>Mon, 23 May 2011 23:15:23 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[Intended to answer the request: Could you please write one on how to display data in a db as a list when the db is stored on an external drive?
Thanks!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date><![CDATA[2011-05-23 19:15:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-23 23:15:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development Tutorial - DroidFu</title>
		<link>http://codehenge.net/blog/?p=55</link>
		<pubDate>Tue, 24 May 2011 03:30:28 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[A basic tutorial on the advantages and use of DroidFu. Probably start with BetterAsyncTask.

Start with installing DroidFu. Before we start, we need to make sure Maven is installed on our system, as it will be used to installed DroidFu libraries. Since I am working in OSX, Maven has been preinstalled for me. To check whether it is installed on your machine, try

<pre><code lang="bash">
mvn --version
</code></pre>
 
This will tell you the version number of the Maven installation, if you have one. If not, follow the instructions <a href="http://maven.apache.org/download.html">here</a> before continuing.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date><![CDATA[2011-05-23 23:30:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-24 03:30:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development Tutorial - ListView and ViewHolder</title>
		<link>http://codehenge.net/blog/?p=56</link>
		<pubDate>Tue, 24 May 2011 12:52:17 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.screaming-penguin.com/node/7767]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date><![CDATA[2011-05-24 08:52:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-24 12:52:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android and Landscape Mode: A Tragedy in Three Acts</title>
		<link>http://codehenge.net/blog/?p=81</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[The title may need work. I want to talk about landscape mode, how it recreates everything and drops threads when switching, killing background processes and forcing re-transmission of any data being downloaded. Also give the option to disable it as a last ditch plan.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date><![CDATA[2011-06-16 16:26:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Resume</title>
		<link>http://codehenge.net/blog/?page_id=97</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=97</guid>
		<description></description>
		<content:encoded><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>

	<title>Constantine Aaron Cois, Ph.D. | Software Engineer | cacois@gmail.com</title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />

	<meta name="keywords" content="" />
	<meta name="description" content="" />

	<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.7.0/build/reset-fonts-grids/reset-fonts-grids.css" media="all" /> 
	<link rel="stylesheet" type="text/css" href="custom_css/resume.css" media="all" />

</head>
<body>

<div id="doc2" class="yui-t7">
	<div id="inner">
	
		<div id="hd">
			<div class="yui-gc">
				<div class="yui-u first">
					<h1>Constantine Aaron Cois, Ph.D.</h1>
					<h2>Software Engineer</h2>
				</div>

				<div class="yui-u">
					<div class="contact-info">
						<h3><a id="pdf" href="#">Download PDF</a></h3>
						<h3><a href="mailto:cacois@gmail.com">cacois@gmail.com</a></h3>						
					</div><!--// .contact-info -->
				</div>
			</div><!--// .yui-gc -->
		</div><!--// hd -->

		<div id="bd">
			<div id="yui-main">
				<div class="yui-b">

					<div class="yui-gf">
						<div class="yui-u first">
							<h2>Profile</h2>
						</div>
						<div class="yui-u">
							<p class="enlarge">
								Coming Soon... 
							</p>
						</div>
					</div><!--// .yui-gf -->

					<div class="yui-gf">
						<div class="yui-u first">
							<h2>Skills</h2>
						</div>
						<div class="yui-u">

								<div class="talent">
									<h2>Software Development</h2>
									<p>Coming soon...	</p>
								</div>

								<div class="talent">
									<h2>Research</h2>
									<p>Coming soon...	 </p>
								</div>

								<div class="talent">
									<h2>Leadership</h2>
									<p>Coming soon...</p>
								</div>
						</div>
					</div><!--// .yui-gf -->

					<div class="yui-gf">
						<div class="yui-u first">
							<h2>Programming Languages/Tools</h2>
						</div>
						<div class="yui-u">
							<ul class="talent">
								<li>C#</li>
								<li>Java</li>
								<li>Ruby</li>
								<li>C++</li>
								<li>Python</li>
								<li>HTML</li> 
								<li class="last">Javascript</li>
							</ul>

							<ul class="talent">
								<li>Jquery</li>
								<li>Rails</li>
								<li>Android SDK</li>
								<li>Node.js / Socket.io</li>
								<li>Redmine / JIRA</li>
								<li class="last">CVS / Subversion / Git</li>
							</ul>

							<ul class="talent">
								<li>OS X</li>
								<li>Windows XP/Vista/7</li>
								<li class="last">Linux</li>
							</ul>
						</div>
					</div><!--// .yui-gf-->

					<div class="yui-gf">
	
						<div class="yui-u first">
							<h2>Experience</h2>
						</div><!--// .yui-u -->

						<div class="yui-u">

							<div class="job">
								<h2>Software Engineering Institute, Carnegie Mellon University</h2>
								<h3>Lead Software Engineer</h3>
								<h4>2009-20011</h4>
								<p>Coming soon... </p>
							</div>

							<div class="job">
								<h2>University of Pittsburgh Medical Center</h2>
								<h3>Senior Software Developer</h3>
								<h4>2008-2009</h4>
								<p>Coming soon... </p>
							</div>

							<div class="job last">
								<h2>Health Monitoring Systems</h2>
								<h3>Senior Analyst</h3>
								<h4>2007-2008</h4>
								<p>Coming soon... </p>
							</div>


						</div><!--// .yui-u -->
					</div><!--// .yui-gf -->


					<div class="yui-gf last">
						<div class="yui-u first">
							<h2>Education</h2>
						</div>
						<div class="yui-u">
							<h2>University of Pittsburgh - Pittsburgh, PA</h2>
							<h3>Ph.D. in Bioengineeing &mdash; ,<!--<strong>4.0 GPA</strong>--> </h3>
						</div>
						<div class="yui-u">
							<h2>University of Pittsburgh - Pittsburgh, PA</h2>
							<h3>M.S. in Computer Science &mdash; ,<!--<strong>4.0 GPA</strong>--> </h3>
						</div>
						<div class="yui-u">
							<h2>University of Pittsburgh - Pittsburgh, PA</h2>
							<h3>Dual Major - B.S.E. in Bioengineeing and B.S. in Computer Science &mdash; ,<!--<strong>4.0 GPA</strong>--> </h3>
						</div>
					</div><!--// .yui-gf -->


				</div><!--// .yui-b -->
			</div><!--// yui-main -->
		</div><!--// bd -->

		<div id="ft">
			<p>Constantine Aaron Cois &mdash; <a href="mailto:cacois@gmail.com">cacois@gmail.com</a> &mdash;</p>
		</div><!--// footer -->

	</div><!-- // inner -->


</div><!--// doc -->


</body>
</html>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date><![CDATA[2011-08-02 22:25:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[no-sidebars.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Resume</title>
		<link>http://codehenge.net/blog/?page_id=156</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=156</guid>
		<description></description>
		<content:encoded><![CDATA[[wp_resume]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date><![CDATA[2012-08-03 20:19:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sending Email (SMTP) With Python</title>
		<link>http://codehenge.net/blog/?p=211</link>
		<pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=211</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sending email via SMTP programmatically is a common task for developers, since it an extremely handy thing to automate. Here's a guide on how you can do it easily using Python.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>211</wp:post_id>
		<wp:post_date><![CDATA[2013-02-10 17:37:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Courses</title>
		<link>http://codehenge.net/blog/courses/</link>
		<pubDate>Wed, 13 Feb 2013 02:17:25 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=212</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<a href="udemy.com/learn-nodejs-by-example/"><img class="aligncenter" alt="" src="https://udemy-images.s3.amazonaws.com/course/304x171/18072_c62f_10.jpg" width="304" height="171" /></a>

<a href="http://udemy.com/learn-nodejs-by-example/"><strong>Learn Node.js by Example</strong></a>

This highly-rated course features detailed screencasts and projects to get you ready to use Node.js in your own projects. I've designed it to be a ground-up, hands-on approach to learning Node.js. I learn best by doing, so the course starts with screencasts where you watch me code my way through detailed examples, followed by exercises allowing you put hand sto keys and expand on my examples to create your own applications. You will come out with a full understanding of Node.js programming, from network applications and chat servers to web applications with Express.js.

Use <a href="https://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">this link to get 50% off</a> right now!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date><![CDATA[2013-02-12 21:17:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-13 02:17:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[courses]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Talks</title>
		<link>http://codehenge.net/blog/talks/</link>
		<pubDate>Tue, 23 Apr 2013 22:16:15 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=218</guid>
		<description></description>
		<content:encoded><![CDATA[Talks I've given recently at conferences and meetups. Feel free to contact me to learn more.

&nbsp;

<strong>High-Volume Data Collection and Real Time Analytics Using Redis</strong> -- Given at O'Reilly STRATA 2013  [<a href="http://www.slideshare.net/cacois/cois-palkostrata2013">slides</a>]

<strong>Node.js Patterns for Discerning Developers</strong> -- Given at Pittsburgh TechFest 2013  [<a href="http://www.slideshare.net/cacois/nodejs-patterns-for-discerning-developers">slides</a>][<a href="https://github.com/cacois/node-patterns-discerning">code samples</a>]

<strong>Automate Your Development Environments with Vagrant</strong> -- Given at a local dev meetup at ShowClix, Inc. (2013)  [<a href="http://www.slideshare.net/cacois/automated-your-development-environments-with-vagrant">slides</a>]

<strong>Node.js: A Guided Tour</strong> -- Given at Pittsburgh TechFest 2012  [<a href="http://www.slideshare.net/cacois/nodejs-a-guided-tour">slides</a>]

<strong>Hadoop: The Elephant in the Room</strong> -- Given to an in-house dev group to introduce Hadoop  [<a href="http://www.slideshare.net/cacois/hadoop-the-elephant-in-the-corner">slides</a>]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date><![CDATA[2013-04-23 18:16:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-23 22:16:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[talks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1254777497]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Projects</title>
		<link>http://codehenge.net/blog/projects/</link>
		<pubDate>Tue, 23 Apr 2013 23:06:14 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?page_id=221</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date><![CDATA[2013-04-23 19:06:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-23 23:06:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[projects]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1233122368]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>node-event-loop</title>
		<link>http://codehenge.net/blog/2014/01/what-is-node-js/node-event-loop/</link>
		<pubDate>Mon, 06 Jan 2014 03:52:28 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/wp-content/uploads/2014/01/node-event-loop.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The Node.js Event Loop Lifecycle]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date><![CDATA[2014-01-05 22:52:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-06 03:52:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[node-event-loop]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://codehenge.net/blog/wp-content/uploads/2014/01/node-event-loop-e1388980560411.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/01/node-event-loop-e1388980560411.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:600;s:6:"height";i:449;s:4:"file";s:42:"2014/01/node-event-loop-e1388980560411.png";s:5:"sizes";a:10:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"node-event-loop-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"node-event-loop-300x224.png";s:5:"width";i:300;s:6:"height";i:224;s:9:"mime-type";s:9:"image/png";}s:8:"featured";a:4:{s:4:"file";s:27:"node-event-loop-300x224.png";s:5:"width";i:300;s:6:"height";i:224;s:9:"mime-type";s:9:"image/png";}s:12:"mosaic-thumb";a:4:{s:4:"file";s:25:"node-event-loop-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}s:13:"gallery-thumb";a:4:{s:4:"file";s:25:"node-event-loop-96x71.png";s:5:"width";i:96;s:6:"height";i:71;s:9:"mime-type";s:9:"image/png";}s:9:"widget-24";a:4:{s:4:"file";s:25:"node-event-loop-24x24.png";s:5:"width";i:24;s:6:"height";i:24;s:9:"mime-type";s:9:"image/png";}s:9:"widget-32";a:4:{s:4:"file";s:25:"node-event-loop-36x36.png";s:5:"width";i:36;s:6:"height";i:36;s:9:"mime-type";s:9:"image/png";}s:9:"widget-48";a:4:{s:4:"file";s:25:"node-event-loop-48x48.png";s:5:"width";i:48;s:6:"height";i:48;s:9:"mime-type";s:9:"image/png";}s:9:"widget-64";a:4:{s:4:"file";s:25:"node-event-loop-64x64.png";s:5:"width";i:64;s:6:"height";i:64;s:9:"mime-type";s:9:"image/png";}s:9:"widget-96";a:4:{s:4:"file";s:25:"node-event-loop-96x96.png";s:5:"width";i:96;s:6:"height";i:96;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_backup_sizes]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:9:"full-orig";a:3:{s:5:"width";i:1023;s:6:"height";i:766;s:4:"file";s:19:"node-event-loop.png";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Announcing CHService, a new open source Windows service framework!</title>
		<link>http://codehenge.net/blog/2010/08/announcing-chservice-a-new-open-source-project/</link>
		<pubDate>Mon, 09 Aug 2010 03:35:15 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[I'm pleased to announce that CHService v1.0 has just been published at <a href="http://github.com/cacois/CHService" target="_self">Github</a>!

CHService is a small open source project, born out of my irritation at writing essentially the same Windows Service over and over. Standard service types in my applications included services that fired a particular method every x minutes (facilitating cleanup or DB synchronization, usually) and services that listened on ports for signals, or to respond to communications. Each time I was forced to rewrite the same basic code to facilitate threading, service stoppage, tcp listeners, timing loops, etc. With CHService, I have made a new windows service base class that loads and runs any number of worker classes, configurable in an app.config file. I have pushed all of the common functionality into worker base classes, so that a timed method worker, for example, can be created by merely inheriting the TimedWorkerBase class and overloading the Fire() method with the operation to perform each time the service fires. The second worker base class currently included creates a worker that listens on a specified port for communication, requiring only an overload of the AcceptSocket() method.

Many varied types of worker processes can be added to a single CHService project. The set of workers to be invoked can be configured in the app.config file of a CHService project, parsed at run-time using reflection in an effort to make service configuration and repurposing as simple and seamless as possible.

The project is currently small, but includes the necessary base classes, an example windows service project created using the framework, and a small unit test project for demonstration.

I would greatly appreciate any feedback or thoughts on the project, which I hope will be of use to some of you out there.]]></content:encoded>
		<excerpt:encoded><![CDATA[I'm pleased to announce that CHService v1.0 has just been published at Github!

CHService is a small open source project, born out of my irritation at writing essentially the same Windows Service over and over. ]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2010-08-08 23:35:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-08-09 03:35:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[announcing-chservice-a-new-open-source-project]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chservice"><![CDATA[CHService]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[329224966]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Medical Image Analysis Stack Exchange Proposal</title>
		<link>http://codehenge.net/blog/2010/08/medical-image-analysis-stack-exchange-proposal/</link>
		<pubDate>Wed, 11 Aug 2010 02:23:04 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[I started a new project I'd like to present. As a programmer I spend a non-trivial amount of  time searching <a href="http://www.stackoverflow.com/" target="_blank">StackOverflow</a> for information and answers to coding questions, as I'm sure most readers of this blog do as well. It's an interesting  site, merging the Q&amp;A model with that of a wiki/crowdsourcing  community, causing it to attract a lot of expertise and become extremely  popular in the software community. They <a href="http://stackoverflow.com/about" target="_blank">explain it</a> better than I do.

For about a year now I've been thinking that this sort of  system could be very powerful as a source of information in other  fields, specifically my native field of computational image analysis. Such a resource would have been invaluable during my graduate  school tenure (community mailing lists and Google can only go so far) for image analysis information, and it also would allow more interaction between experts and others in the community so  that ideas and expertise could be more effectively disseminated. Now with the release of the Stack Exchange Area 51, I have the opportunity to do something about it. I give you:
<p style="text-align: left;"><a href="http://area51.stackexchange.com/proposals/17323/medical-image-analysis/17391#17391" target="_blank">Medical Image Analysis Stack Exchange</a></p>
At  this point I like to reach out to anyone in the image analysis community to try to  get people participating in the formation of the site. Its  currently in definition phase, which basically means that users propose  questions and the community votes on whether those questions are on  topic for the site or not, defining the topic scope of the site. From  there, hopefully it continues growing and becomes a useful resource for  researchers, programmers, clinicians, or anyone interested in the topic. With the formation of a solid community, this could be a valuable discussion  hub for students studying image analysis as well.
<p style="text-align: left;">I urge anyone interested to go sign up and help us get the number of users necessary to take this to the next level. Think of the poor grad students.</p>
<p style="text-align: left;">Image analysis rules. Tell your friends.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2010-08-10 22:23:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-08-11 02:23:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[medical-image-analysis-stack-exchange-proposal]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-analysis"><![CDATA[Image Analysis]]></category>
		<category domain="post_tag" nicename="image-analysis-2"><![CDATA[image analysis]]></category>
		<category domain="post_tag" nicename="imaging"><![CDATA[imaging]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[333914609]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I don&#039;t wanna come back down from this cloud...</title>
		<link>http://codehenge.net/blog/2010/09/i-dont-wanna-come-back-down-from-this-cloud/</link>
		<pubDate>Mon, 06 Sep 2010 12:31:01 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="size-full wp-image-139 " title="WingCloud" src="http://codehenge.net/blog/wp-content/uploads/2012/06/180px-WingCloud.jpeg" alt="" width="180" height="125" /></a>

</div>
I spent last week at <a href="http://www.vmworld.com/index.jspa">VMWorld 2010</a>, and returned with a head full of ideas on the future of computing. I’ll be presenting some of these thoughts in the coming series of posts, and look forward to some discussions on the subject.

Watching the world’s largest virtualization company attempt to make clear its vision of the future, the thing that stood out most was: I’ve never heard the word “cloud” used so much in my life. Indeed, "the cloud" has been a buzzword for a few years now, describing any number of disparate technologies, architectures, and concepts. But the reality of this next phase in computing, and what this “cloud” will actually become, is coming into focus.

We talk about pushing servers to the cloud, utilizing cloud resources, minimizing hardware expenditure. This is good for developers and companies striving to maximize efficiency and resource usage, but what about the consumer? What will they eventually store in the cloud?

Operating Systems.

A big chunk of the OS needs to be pushed to the cloud. My wife doesn’t need all of the processing power her laptop has. Hell, I don’t need most of the processing power mine has most of the time. If I’m not compiling code, running a bunch of VMs, or playing a graphics-intensive productivity app (read: Starcraft II), I don’t need much more processing power than my iPad has. And now constant, fast internet connectivity is becoming ubiquitous. The next generation of mobile connectivity will surpass basic cable internet speeds. Free wifi nearly grows on trees. So why do we stuff computers and other devices full of hardware to maintain enough computing resources to run a full blown OS, all the time?  We shouldn't.

Push the business layer of the OS up to the cloud, allow devices to be thin portals to data presented by abstract, ephemeral computing resources. I can use what processing power I need when I need it, and leave it for someone else when I’m just surfing the web. Efficiency. Plain and simple.

<em>Let consumers minimize local hardware, while maximizing their computing flexibility and ability to consume data.</em>

I imagine that Microsoft and Google are thinking just this, to different degrees. MS Office Live seems like a first stab at getting Windows users used to keeping some data in the cloud, and having it available from any terminal they want to access it from. Loyal Google users have long since gotten used to this with Gmail, Google documents, calendars and contact lists. With ChromeOS and the Google App Marketplace, I bet they take it to the next level:
<ul>
	<li>All of your apps are in the cloud</li>
	<li>All of your data ends up in the cloud, providing automatic state sync for any dumb terminal you log in from</li>
	<li>The presentation layer (UI) is separated from the data layer and business layer (apps), so different devices can easily present drastically different interfaces to the same users ‘OS’</li>
</ul>
Privacy concerns aside, this is a logical progression. The last point contains the real fun. Common computing form factors (mobile phones, tablets, and laptops/desktops) all have different advantages/disadvantages as far as human/computer interaction goes, and would ideally each have a different interface tailored to them to maximize the user experience. “But the iPad runs IOS, it has the same interface as an iPhone!” And as quickly as they can, app developers are churning out interfaces optimized for the new form factor. Flipboard would be junk on an iPhone, but it’s fantastic on a tablet.

But these devices remain unconnected, isolated experiences for the user. The backend data, the “computer” itself, to most users, needs to become a constant, consistent digital home. The users experience is starting to venture outside the bounds of the individual device, instead encompassing all of their interactions with the internet and their own data. Local storage won’t go away altogether, but personal servers are swiftly being made accessible via the internet. <a href="http://www.audiogalaxy.com/">The cloud </a>is becoming a comfortable <a href="http://www.mspot.com/music/learn_overview">storage repository </a>for personal media. Perhaps with its acquisition of lala.com, Apple wanted more than to kill off a competitor. Perhaps they see the writing on the wall too, and want in. iTunes would feel right at home in the cloud, and I’d no longer be annoyed by having to tether my iPad to a computer to sync.

Seems the big players are ready.  Are you?]]></content:encoded>
		<excerpt:encoded><![CDATA[I’ve never heard the word “cloud” used so much in my life. Indeed, cloud  has been a buzzword for a few years now, describing any number of disparate technologies, architectures, and ideologies. But the reality of this next phase in computing, and what this “cloud” will actually become, is coming into focus.]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2010-09-06 08:31:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-06 12:31:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[i-dont-wanna-come-back-down-from-this-cloud]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cloud"><![CDATA[cloud]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="category" nicename="virtualization"><![CDATA[Virtualization]]></category>
		<category domain="post_tag" nicename="virtualization-2"><![CDATA[virtualization]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[311642507]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Don&#039;t Take Your Users To School</title>
		<link>http://codehenge.net/blog/2010/11/dont-take-your-users-to-school/</link>
		<pubDate>Mon, 15 Nov 2010 00:34:32 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[<div>In 2003, I started my journey towards a PhD. My research focused on medical image analysis, putting my software engineering skills to use in the field of Biomedical Engineering. I began working on the problem of 3D image segmentation, which is the act of computationally identifying and extracting an object within a 3D image, such as a CT or MRI scan. This allows doctors and researchers to analyze the shape or volume of a particular anatomic structure, which can be very useful for diagnosis, but segmenting objects in a 3D image is an incredibly long and tedious process that can only be performed by someone with significant medical/anatomical expertise. By 2006 I had developed a new software framework for automated image analysis, and had used it to create an algorithm for segmentation of cardiac structures in 3D images. This work would eventually become my dissertation.

[caption id="attachment_24" align="alignleft" width="300" caption="3D CT Image with the aortic arch segmented"]<a href="http://codehenge.net/blog/wp-content/uploads/2010/11/CT_AAA_overlay.jpg"><img class="size-medium wp-image-24 " title="3D CT Image with the aortic arch segmented" src="http://codehenge.net/blog/wp-content/uploads/2010/11/CT_AAA_overlay-300x300.jpg" alt="" width="300" height="300" /></a>[/caption]

I proceeded to gather image data from clinical collaborators and test my system. It outperformed the current state of the art, and left a lot more room for optimization and innovation in algorithm design than other techniques. It was a success! In the process of testing my system against independently-developed rival systems, I realized how difficult it was, even for researchers in the field, to understand all of the parameters and settings needed to maximize performance from the various software systems designed for automated segmentation (maximizing their performance was very important to me, as I wanted no room for argument if my system outperformed them). I had to study the algorithms themselves, to see how the parameters affected the mathematics of the algorithm. I was getting my PhD in the field; I had a M.S. in Computer Science, with a focus on machine learning; I knew the theory, algorithms, statistics, and math...and it was still difficult for me to be sure I was using these systems effectively. Disheartened, I had to admit that this same problem was present in my own system. I had designed it, so of course I knew every trick and nuance...but anyone else picking it up would suffer from utter confusion in trying to use the system as effectively as possible. And they wouldn't have the kind of time or motivation I had to figure it out. My target users were medical professionals - radiologists, imaging technicians, etc - busy people who continually study to keep on top of their field, and have no time to learn differential equations, high-level statistics, or any other domains in order to set parameters in my system to accurately segment their data. Their only goal was treating patients. They needed results, and would dismiss any tool that did not produce them easily and consistently. This was why much of the research produced in the medical image analysis field since the 1970’s went largely unused in clinical practice - its usability for the target demographic approached zero.

I remember clearly the crushing defeat I felt at this realization. I had spent years creating software that did its job better than any existing tool. It would get published, be used by a few researchers who needed segmentations for shape analysis or some other application, but ultimately make little direct impact on the medical field. I couldn’t stand it. Not the fact that my mark would be small - most PhD dissertations leave a small direct footprint. What bothered me was that I was an engineer, and had designed the system, consulted with clinicians on their data and needs, and never considered usability to that demographic...I had arrogantly adopted a mantra heard far too often: Users will use software if it performs well. I was wrong, and the worst part was I was not alone. This was the culture of my research field - usability and user experience were not words in our lexicon, and the tools we designed were largely academic exercises meant to further knowledge in the field without having a major impact on clinical medicine until some technique was picked up by GE, Philips, or Siemens and incorporated into their clinical technologies. I was an academic, but I was also an engineer; my ultimate goal was to produce something useful to the medical field. As a scientist I had succeeded, but as an engineer, in my mind, I had failed.

So I doubled back. I looked at my algorithms, at my framework. I looked at every parameter in the system. I ran simulations, and studied performance of the system using a wide range of parameters. I studied the trends of performance across parameter spaces when operating on different types of images. I determined which parameters had the greatest impact on performance, which needed to be tuned specifically for each set of input data, and which could be set to standard values without decreasing performance. I wrote code to run large parameter optimization studies.

[caption id="attachment_25" align="alignright" width="300" caption="Example Parameter Optimization Space"]<a href="http://codehenge.net/blog/wp-content/uploads/2010/11/example_DSC_curve_bone.png"><img class="size-medium wp-image-25" title="Example Parameter Optimization Space" src="http://codehenge.net/blog/wp-content/uploads/2010/11/example_DSC_curve_bone-300x225.png" alt="" width="300" height="225" /></a>[/caption]

My goal was automated segmentation of 3D images (2D is pretty fast for a human to do, and provides less useful data), which are used as input to shape, surface, or volumetric analysis. However, a single segmentation of a 3D image using my system took 2-3 hours (this has been improved significantly since with advances in computing), so no processes that required actual segmentation to determine optimal parameters were possible if the system was to remain a potentially useful tool for timely diagnosis. My analyses had shown that optimal parameters varied significantly between data sets, due to changes in anatomy and data collection methods beyond my control. I needed to optimize parameters for each input image, and the only source of data I had available was the user. But asking the user to set these parameters was, as previously discussed, a terrible mistake.

It dawned on me that one of the advantages of my framework (and the <a title="Insight Toolkit" href="http://www.itk.org" target="_blank">Insight Toolkit</a>, on which it was built) is that it was able to analyze data of any dimensionality (2D, 3D, ..., n-D) without changes to the code. I discovered that I could take a 2D slice from a 3D image, ask a user to trace the target object in the slice (takes only 5-10 seconds), and use that gold standard to train the system for the particular 3D image at hand. Parameters good at segmenting a 2D slice from an image, it turned out, are also pretty good at segmenting the entire 3D image when using my algorithm.

I redesigned my interface and workflow, simplifying user interaction to 3 steps:
<ol>
	<li>load a 3D image</li>
	<li>trace the object in a single 2D slice (providing the seed for training)</li>
	<li>click ‘Go’</li>
</ol>
When I went on to write my dissertation, I ended up devoting large sections to parameter optimization procedures, the concept of using 2D tracings to train a system for automated 3D segmentation, and usability in medical image analysis software. I believe these sections are among the strongest in the work, and most clearly set me apart from other research in the field. Opening my eyes to usability and user experience had not only made my system accessible to users, it had improved my research immeasurably, and forced me to innovate in new and exciting ways - it had elevated my dissertation beyond my expectations.

The lessons learned from this experience have guided my work ever since, in both academia and industry:
<ul>
	<li>Focus on the user;</li>
	<li>Go to them, don’t expect them to come to you;</li>
	<li>Don’t expect your user to learn or study in order to use your tools</li>
</ul>
</div>
<div></div>
<div>These are powerful lessons, constantly ignored in software development. Just because you understand it doesn't mean users will. Spend time minimizing the learning curve of your software. It is very easy to assume that users will adapt themselves to use a superior product - that they will perceive the long term value. But upfront cost is highly weighted in a potential user’s value proposition, and if the learning curve is too great, developers may find themselves scratching their heads at the lack of interest in their target demographic.</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[In 2003, I started my journey towards a PhD. My research focused on medical image analysis, putting my software engineering skills to use in the field of Biomedical Engineering. I began working on the problem of 3D image segmentation...]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2010-11-14 19:34:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-11-15 00:34:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dont-take-your-users-to-school]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-analysis"><![CDATA[Image Analysis]]></category>
		<category domain="post_tag" nicename="image-analysis-2"><![CDATA[image analysis]]></category>
		<category domain="post_tag" nicename="imaging"><![CDATA[imaging]]></category>
		<category domain="category" nicename="research"><![CDATA[Research]]></category>
		<category domain="post_tag" nicename="research-2"><![CDATA[research]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[311480798]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Started With node.js and socket.io - Part 1</title>
		<link>http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/</link>
		<pubDate>Mon, 18 Apr 2011 02:58:03 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float:left;margin:0 10px 5px 0;"><img alt="" src="http://media.tumblr.com/tumblr_l974955BoN1qdqxmk.png" title="node.js" class="alignleft" width="200" height="200" /></div>  Like many developers out there, I've been interested in the potential of real-time, high-throughput client/server communication in web apps using <a title="node.js" href="http://nodejs.org/">node.js</a> for some time. Once I started researching, I was quickly lead to <a title="socket.io" href="http://socket.io/">socket.io</a> as well, which rocks...hard. What's that?  Not dealing with transport mechanisms, and getting cross-browser (including mobile!) support for free? Yes please!

In this post I'll go through the installation of node.js and socket.io on Mac OSX, then in my next post we'll make a simple test app from scratch (which helps me to learn far better than just running a pre-made example). Since I'm in OSX, I can make things super easy and use <a title="OSX Homebrew" href="http://mxcl.github.com/homebrew/">brew</a> to install node. Brew is an extremely handy little utility that can install UNIX tools that were not included in OSX. If you already have brew installed, skip this step. If not, go ahead and install it:

<code class="bash">ruby -e "$(curl -fsSLk https://gist.github.com/raw/323731/install_homebrew.rb)"</code>

&nbsp;

Now that we have brew installed, installing node becomes very easy:

<code class="bash">brew install node </code>

&nbsp;

No muss, no fuss. This will install node.js at

<code class="bash">/usr/local/lib/node/ </code>

&nbsp;

The only potential downside is that brew installs the current stable version of node, which is 0.4.6 as I'm writing this, though 0.5.0beta does exist. This probably won't bother you, but if you want the latest and greatest, get the source from github and build it yourself. <a title="Node.js github" href="https://github.com/joyent/node/wiki/Installation">Here</a> are some instructions. You may also need to go the github route if for some reason brew doesn't work for you.

<p></p><p><b>Want to master Node.js?</b> Try my highly-rated online course <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>. <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">Click here</a> to get 50% off on screencasts, interactive projects, and more! <p></p>

Now its time to install a little enhancement called Socket.io. Socket.io is only one of a number of packages that have been written for node, so the easiest way to install it and potentially other useful packages is with the Node Package Manager, <a title="NPM" href="https://github.com/isaacs/npm">NPM</a>. Install NPM using:

<code>curl http://npmjs.org/install.sh | sh</code>

&nbsp;

We can now use NPM to install socket.io. Here we go:

<code>npm install socket.io</code>

&nbsp;

Ok, we're all set. You now have both node.js and socket.io installed. At this point, you could start an example node server by going to

<code>/usr/local/lib/node/socket.io/example/</code>

and issuing the command

<code>node server.js</code>

&nbsp;

You should see output similar to this:

<a href="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png"><img title="Screen shot 2011-04-17 at 10.23.12 PM" src="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-17-at-10.23.12-PM.png" alt="" width="500" height="70" /></a>

&nbsp;

This starts the test node.js socket.io server, which will be default listen on port 8080. To see the demo, navigate to

<span style="font-family: monospace;">http://localhost:8080</span>

in any web browser and poke around. There is a nice chat example that will allow you to watch server output in the terminal as communications between the client (your browser) and the server commence.

Now you have a working node.js and socket.io installation on OSX, and have possibly gotten some other handy tools like brew and NPM in the process. Congratulations! Now you can dive in and look at the code of the example/server.js we just used to start the node server to try to understand the inner workings. This always falls a bit short for me - I like to get my hands dirty. So, in my next post we'll build a small node server and client, adding to it as we go to illustrate the basic socket.io API and the basic functionality of socket.io and node.js.

Until then...

Continue <a href="http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/">here</a> if you are using Socket.io v0.7, v0.8, or above.

If you are working with Socket.io v0.6, continue on to <a href="http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/">this version</a> of the tutorial.]]></content:encoded>
		<excerpt:encoded><![CDATA[Like many developers out there, I've been interested in the potential of real-time, high-throughput client/server communication in web apps using <a title="node.js" href="http://nodejs.org/">node.js</a> for some time. 

In this post I'll go through the installation of node.js and socket.io on OSX, then in my next post we'll make a simple test app from scratch (which helps me to learn far better than just running a pre-made example). ]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2011-04-17 22:58:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-04-18 02:58:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-node-js-and-socket-io-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[310009391]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://media.tumblr.com/tumblr_l974955BoN1qdqxmk.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://media.tumblr.com/tumblr_l974955BoN1qdqxmk.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The first post in my two-part tutorial on learning to use node.js and socket.io. These posts builds a small example app using node.js and then adding in socket.io, illustrating the basic concepts and techniques as we progress through building and testing the code. Knowledge of javascript and the basic http protocol will be helpful in understanding this content.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Getting Started With node.js and socket.io - Part 1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The first post in my two-part tutorial on learning to use node.js and socket.io. These posts builds a small example app using node.js and then adding in socket.io, illustrating the basic concepts and techniques as we progress through building and testing the code. Knowledge of javascript and the basic http protocol will be helpful in understanding this content.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://media.tumblr.com/tumblr_l974955BoN1qdqxmk.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://media.tumblr.com/tumblr_l974955BoN1qdqxmk.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The first post in my two-part tutorial on learning to use node.js and socket.io. These posts builds a small example app using node.js and then adding in socket.io, illustrating the basic concepts and techniques as we progress through building and testing the code. Knowledge of javascript and the basic http protocol will be helpful in understanding this content.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>307</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas Sileo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thomas.sileo@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-16 21:59:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-16 21:59:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great introduction!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313477426]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>308</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-16 23:41:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-16 23:41:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>307</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313477426]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313554624]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Codehenge &raquo; Blog Archive &raquo; Getting Started With node.js and socket.io &#8211; Part 2]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-01 10:08:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-01 14:08:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] my last post I went through installation and setup of some great new tools: node.js and socket.io. Now that we [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>380</wp:comment_id>
			<wp:comment_author><![CDATA[Getting Started With node.js and socket.io (v0.7+) &#8211; Part 2 | Codehenge]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-18 14:09:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-18 19:09:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] my last post I went through installation and setup of some great new tools: node.js and socket.io. Now that we [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324235341.9192";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324236063.9651";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>451</wp:comment_id>
			<wp:comment_author><![CDATA[DS kanth]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dskanth.99@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.65.132.34]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-13 02:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-13 06:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wanna try this...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[496046700]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>529</wp:comment_id>
			<wp:comment_author><![CDATA[Camron Roberts]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[camron.roberts@yahoo.co.uk]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[90.204.199.236]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-17 14:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-17 19:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hello i am having a bit of trouble while trying to install socket this message came up 

[ws v0.4.22] Attempting to compile blazing fast native extensions.
[ws v0.4.22] Native code compile failed (but the module will still work):
[ws v0.4.22] The native extensions are faster, but not required.
[ws v0.4.22] On Windows, native extensions require Visual Studio and Python.
[ws v0.4.22] On Unix, native extensions require Python, make and a C++ compiler.
[ws v0.4.22] Start npm with --ws:verbose to show compilation output (if any).

then when i entered this in the terminal: /usr/local/lib/node/socket.io/example/

i received this: -bash: /usr/local/lib/node/socket.io/example/: No such file or directory

I then tried this: node server.js 

and got this: 

module.js:340
    throw err;
          ^
Error: Cannot find module '/Users/camron/server.js'
    at Function.Module._resolveFilename (module.js:338:15)
    at Function.Module._load (module.js:280:25)
    at Module.runMain (module.js:492:10)
    at process.startup.processNextTick.process._tickCallback (node.js:244:9)
(null):~ camron$ 


Can you please help thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[712802697]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-17 15:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-17 20:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Cameron. The issue you are having is that the examples are no longer packaged with socket.io. Since it looks like you have Node, npm, and socket.io installed ok, just move on to the next part of the tutorial:

http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/

Here I will be showing you how to build something form scratch using node and socket.io.

Cheers!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>529</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[712802697]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[712842808]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Customizing Android ListView Item Layout</title>
		<link>http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/</link>
		<pubDate>Mon, 23 May 2011 00:14:22 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today I'm going to go step by step through an example of using a ListView, and customizing the visual layout of items within. <a href="http://developer.android.com/reference/android/widget/ListView.html">ListView</a> is one of the primary UI components in the <a href="http://developer.android.com/sdk/index.html">Android SDK</a>. Its a great tool, providing you with scrolling lists and selection functionality right out of the box. With very little code, you can have a ListView displaying a list of objects for you. Just toss something like</p>

<div>
  <code lang="xml">
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent">
    <ListView 
        android:id="@+id/ListViewId"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"/>
</LinearLayout>
</code>
</div>

<p>in your layout file (e.g. main.xml, for a simple application), and something like</p>

<div>
  <code lang="java">
setContentView(R.layout.main);
        
String[] items = {"red", "blue","green"};

ListView listView = (ListView) findViewById(R.id.ListViewId);
listView.setAdapter(new ArrayAdapter&lt;String>(this, android.R.layout.simple_list_item_1, items));
</code>
</div>

<p>on the java side in your onCreate() method. Easy, huh? Running this application will produce the following:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-21-at-5.57.31-PM1-180x300.png" alt="" title="Screen shot 2011-05-21 at 5.57.31 PM" width="180" height="300" class="aligncenter size-medium wp-image-51" /></a> Now, the default ListView style in android is fine...until you need more than a snippet of text displayed for each item. It happens to us all. Luckily, when this time comes, the Android API is nicely prepared. Just a few tweaks, and you can have a ListView with items showing images, a couple lines of text, whatever your heart desires. And I'm going to show you how. Let's start with the simple example from above. Let's say we want to make our list display users of our app, instead of colors. For each user, we'd like to display username, email address, and an avatar. But how do we configure the ListView to display this content, and how do we set the layout? First, let's set the layout we'd like for our ListView items. To keep things orderly, create a new file in the layouts directory called listitem.xml. Put the following code in listitem.xml:</p>

<div>
  <code lang="xml">
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_height="wrap_content" 
    android:gravity="left|center"
    android:layout_width="wrap_content" 
    android:paddingBottom="5px"
    android:paddingTop="5px" 
    android:paddingLeft="5px">

    <ImageView
        android:id="@+id/avatar"
        android:layout_width="wrap_content"
        android:layout_height="fill_parent"
        android:layout_marginRight="6dip"
        android:src="@drawable/icon" />
    <LinearLayout
        android:orientation="vertical"
        android:layout_width="0dip"
        android:layout_weight="1"
        android:layout_height="fill_parent">
        
        &lt;TextView android:id="@+id/username"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="center"/>
    <TextView android:id="@+id/email" 
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content"
        android:layout_marginLeft="10px" 
        android:textColor="#0099CC"/>
    </LinearLayout>
</LinearLayout>
</code>
</div>

<p>This may look a bit complicated, but its really not. This xml will just define the layout of our items, so each selection in the ListView will have this layout within it. We've created a linear layout as our root layout (note: since we didn't specify, this layout will have a horizontal orientation for components inside of it). Inside of this base structure, we have two sub-components: an ImageView, which will display a single image, and a LinearLayout components with a vertical orientation. In this inner LinearLayout, we have two TextView components. This will display two text fields, one on top of the other, horizontally adjacent to the ImageView. Take a look at the ImageView definition. We have to tell the ImageView what image it will display. We tell it this with the android:src parameter. For simplicity, we are giving this a value of "@drawable/icon", which will tell it to use a file named icon.* (any image extension) found in one of the "res/drawable-*" directories. This icon file is included in any new android project created through eclipse, making it an easy target - you could just as easily point it at any image file you chose to put in these directories. In a real application to display user avatars, we would want to change this value in our java code to place a different avatar image in each ListView item. Now we just have to create a new Adapter class that will tell our ListView how to user this new item layout. To make things easier, I'll first create a small UserRecord class to allow us to pass our user item data around easily. Here it is:</p>

<div>
  <code lang="java">
public class UserRecord {
    public String username;
    public String email;
        
    public UserRecord(String username, String email) {
        this.username = username;
        this.email = email;
    }
}
</code>
</div>

<p>Now for the adapter, which is a bit more complex:</p>

<div>
  <code lang="java">
public class UserItemAdapter extends ArrayAdapter&lt;UserRecord> {
    private ArrayList&lt;UserRecord> users;

    public UserItemAdapter(Context context, int textViewResourceId, ArrayList&lt;UserRecord> users) {
        super(context, textViewResourceId, users);
    this.users = users;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;
    if (v == null) {
            LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            v = vi.inflate(R.layout.listitem, null);
    }
            
    UserRecord user = users.get(position);
    if (user != null) {
            TextView username = (TextView) v.findViewById(R.id.username);
            TextView email = (TextView) v.findViewById(R.id.email);

        if (username != null) {
                username.setText(user.username);
        }

        if(email != null) {
            email.setText("Email: " + user.email );
        }
    }
    return v;
    }
}
</code>
</div>

<p>So what are we doing here? Let's take a look. We are creating an adapter class which extends ArrayAdapter<UserRecord>, meaning this adapter will take an array of UserRecord objects as input. In the constructor, we just call the superclass constructor to handle any background initialization issues that we don't want to worry about, and take the list of UserRecords given as an input parameter and save it to a local variable for safekeeping. The main thing we are doing here is overriding the getView() method with our own version - this will allow us to specify how to set the values of the UI components ourselves, since we are the ones who created this UI layout. When our app is displaying a ListView, it will call getView() for each item in the input array. getView() takes three parameters:</p>

<ul>
<li>int position - the position of the item in the array we want to display</li>
<li>a View - the view that will display the item in question</li>
<li>a ViewGroup parent - the group our view belongs to. We won't need to deal with this for the task at hand. We do a little handling at the top in case the View object passed in is null (it shouldn't be in this example), and then we can set some values. Since we grabbed the list of UserRecord objects and stored it in a member variable in the UserItemAdapter constructor, we just get the objects at the specified position to have access to all of the values we want (just username and email, here, but obviously it could be much more data). Using a few findViewById() calls on our View, we get the UI components (TextView objects, in this case) that we want to use to displat our data, and set their text values using the specified UserRecord object. Return the View, and viola! Our ListView now looks like: </li>
</ul>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png" alt="" title="Screen shot 2011-05-22 at 7.40.23 PM" width="181" height="300" class="aligncenter size-medium wp-image-52" /></a> Remember that we specified the image to be displayed in our layout XML file, so each item has the same image. If we wanted a different avatar image for each user, we would just store some more data in our UserRecord objects and set the source image for the ImageView object in the same manner as for the TextViews. Thanks for reading! Below are some links to download source files for today's example. Stay tuned for more future posts illustrating some more advanced customizations for ListViews, and other cool Android programming tricks. <br>Download the source: <a href="http://codehenge.net/blog/wp-content/uploads/2011/06/customizing-android-listview-example.zip">customizing-android-listview-example.zip</a></p>

<p><strong>Get 50% off my Node.js course <a href="http://developer.android.com/sdk/index.html">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Today I'm going to go step by step through an example of using a ListView, and customizing the visual layout of items within.]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date><![CDATA[2011-05-22 20:14:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-23 00:14:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[customizing-android-listview-item-layout]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[311004361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-22-at-7.40.23-PM-181x300.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>328</wp:comment_id>
			<wp:comment_author><![CDATA[JLong]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jlong@treddy.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-26 11:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-26 15:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi how can we add a onclick listener to this please?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345748858]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>320</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Thompson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mark.thompson19@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-16 14:35:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-16 18:35:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a very helpful post! Much appreciated.

I did notice one thing though:

LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);

This line causes a compilation error for me unless I change it to:

LayoutInflater vi = (LayoutInflater) this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);

I don't know if this is an error on my part, but I just wanted to put that out there.

Thanks Again!!

MT]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[336120654]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>216</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 18:30:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 18:30:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting read. I actually hadn't heard the argument that LinearLayout was less efficient or could lead to performance degradation before, so thanks for the tip! I'll be sure to do some testing and see if I can quantify a performance difference.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>214</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228319695]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228423995]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>214</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[johnlicheng@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 16:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 16:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why not use a RelativeLayout, as described here

http://android-developers.blogspot.com/2009/02/android-layout-tricks-1.html]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228319695]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[Codehenge &raquo; Blog Archive &raquo; Android Programming Tutorial &#8211; A Simple Twitter Feed Reader]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-31 20:21:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-01 00:21:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] expand the simple example app from my last post to display twitter posts instead of a hard-coded list of users. The layout from the previous [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307452692.0889";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1306887667.592";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[Codehenge &raquo; Blog Archive &raquo; Android Programming Tutorial &#8211; A Simple Twitter Feed Reader]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/04/android-programming-tutorial-a-simple-twitter-feed-reader/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-30 16:32:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-30 20:32:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Last week I demonstrated designing and implementing customized layouts for Android ListView items, including some simple example code. This time around I&#8217;d like to expand on that code to make something a little closer to an actual app, illustrating some new tools and concepts in the process such as working with JSON data and the Android BitmapFactory. [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306787565.2193";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1306792423.762";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[casinos en ligne france]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://aiguilledespenitents.xn--remontw-q0a.olecko.pl/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[64.120.40.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-31 04:15:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-31 08:15:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>casino en ligne...</strong>

[...]below you’ll find the link to some sites that we think you should visit[...]… casino en ligne paypal...

[WORDPRESS HASHCASH] The comment's server IP (64.120.40.238) doesn't match the comment's URL host IP (178.19.96.5) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307452709.8797";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306829734.4194";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306829734.4215";s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[Dan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dan@axelby.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-23 15:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-23 15:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How can I set up Eclipse to use that color scheme?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[209895413]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine A. Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/ConstantineCois</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-23 15:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-23 15:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You mean the one in the code snippets? Those aren't screen grabs, they are <code> blocks colored by the CodeColorer (http://kpumuk.info/projects/wordpress-plugins/codecolorer/) Wordpress plugin, using the 'Vibrant Ink' color scheme. 

Here's a reference on how to get the same color scheme in Eclipse: http://blog.codefront.net/2006/09/28/vibrant-ink-textmate-theme-for-eclipse/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>187</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[209895413]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[209914652]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[Dan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dan@axelby.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-23 17:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-23 17:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great. Thanks.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>188</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[209914652]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[209987946]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[Scott A Garman]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/scottagarman</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-24 05:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-24 05:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You should add a section on how to use the ViewHolder method described in the googleio talks to create more efficient lists. http://www.youtube.com/watch?v=wDBM6wVEO70&amp;t=17m38s]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[210404563]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[/r/android, I&#8217;m starting a series of android development tutorial posts &#8211; here&#8217;s the first &raquo; App Crow]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.appcrow.com/2011/05/randroid-im-starting-a-series-of-android-development-tutorial-posts-heres-the-first/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[69.195.142.69]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-24 06:12:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-24 10:12:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] of android development tutorial posts &#8211; here&#8217;s the first  submitted by  Codehenge   [link] [15 comments]PostedMay 23rd, 2011Filed Android RedditNo CommentsLeave a Comment Click here to [...]

[WORDPRESS HASHCASH] The comment's server IP (69.195.142.69) doesn't match the comment's URL host IP (69.195.142.66) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306355595.9538";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>386</wp:comment_id>
			<wp:comment_author><![CDATA[Singh Abhi4690]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[singh.abhi4690@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-17 10:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-17 15:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How Can we add ListItemClickListener please???]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[413420586]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>388</wp:comment_id>
			<wp:comment_author><![CDATA[Oraculum]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[damon.abdiel@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.oraculum.blog.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-25 07:21:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-25 12:21:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks !!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[420476020]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>389</wp:comment_id>
			<wp:comment_author><![CDATA[Oraculum]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[damon.abdiel@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.oraculum.blog.br</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-25 07:21:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-25 12:21:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[private OnItemClickListener clickList = new OnItemClickListener() {
		@Override
		public void onItemClick(AdapterView arg0, View v, int position,
				long arg3) {
	        Endereco end = ((Endereco)list.getItemAtPosition(position));
	        String id = end.id.toString();

	        Intent i = new Intent(ListarFamiliaActivity.this,
					  AddFamiliaActivity.class);
			startActivityForResult(i, 0);
		}
	};]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[420476152]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>391</wp:comment_id>
			<wp:comment_author><![CDATA[Mystrious112]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mystrious112@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-06 00:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-06 05:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice!!!!! it worked well]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[430601465]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>404</wp:comment_id>
			<wp:comment_author><![CDATA[Franklin Peña]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jfranklin.pena@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-16 15:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-16 20:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You don't need 

private ArrayList users;

Since the adapter holds a an implicit collection of this type by way of extends declaration

and the following lines must go away after taking out the users member above

this.users = users;

The following line

UserRecord user = users.get(position);

gets substituted by

UserRecord user = this.getItem(position);

Otherwise it all works!

Thanks and keep the good work.

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[441248978]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>407</wp:comment_id>
			<wp:comment_author><![CDATA[oskar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mail@oskarlind.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[130.229.132.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-20 06:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-20 11:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Using android.R.layout.simple_list_item_1 is misleading since you're making your own, customized list item. A better way would be to rename the listitem.xml to mycustomizedlistitem.xml and refer it as R.layout.mycustomizedlistitem. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[443947866]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>408</wp:comment_id>
			<wp:comment_author><![CDATA[Oskar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mail@oskarlind.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[130.229.132.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-20 06:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-20 11:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[oups, you already did that. my bad :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[443948217]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>430</wp:comment_id>
			<wp:comment_author><![CDATA[ravich]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ravichandiran22@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.172.37.229]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-15 08:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-15 12:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how to display icon in menu view i am try to this code but no display icon......


 private void CreateMenu(Menu menu)
    {
        menu.setQwertyMode(true);
        MenuItem mnu1 = menu.add(0, 0, 0, "Item 1").setIcon(R.drawable.ssss);
        
        {
            mnu1.setAlphabeticShortcut('a');
            mnu1.setIcon(R.drawable.ssss);            
        }
        MenuItem mnu2 = menu.add(0, 1, 1, "Item 2");
      {
            mnu2.setAlphabeticShortcut('b');
            mnu2.setIcon(R.drawable.sample_1);            
        }
        MenuItem mnu3 = menu.add(0, 2, 2, "Item 3");
        {
            mnu3.setAlphabeticShortcut('c');
            mnu3.setIcon(R.drawable.sample_2);
        }
        MenuItem mnu4 = menu.add(0, 3, 3, "Item 4");
        {
            mnu4.setAlphabeticShortcut('d');                    
        }
      
    }*/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[465911084]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>432</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan1488]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ivan1488@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.15.255.44]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-18 17:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-18 21:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi how can we add a onItemClick to this please?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[468572390]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>448</wp:comment_id>
			<wp:comment_author><![CDATA[Anudeep]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anudeep@yahoo.co.in]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[115.119.248.254]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-05 03:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-05 07:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[can we save the list item in ListView  and retrieve the item and place in next acticity but how????
?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[486757248]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[Ahmad Abo Rjelah]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/people/Ahmad-Abo-Rjelah/577202935</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[46.28.136.49]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-24 03:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-24 07:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yea i faced the same problem ,,,, thanks for your post]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>320</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[336120654]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[507697120]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>457</wp:comment_id>
			<wp:comment_author><![CDATA[Jamie Welch]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[flapjack.fiasco@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[97.100.204.217]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-09 14:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-09 18:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Same problem here, thanks for the tip!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>320</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[336120654]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[524636545]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>458</wp:comment_id>
			<wp:comment_author><![CDATA[vixo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zaren_l23@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[189.161.138.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-10 14:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-10 18:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[no funciona tu codigo]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[525655055]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>464</wp:comment_id>
			<wp:comment_author><![CDATA[Neo An]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dalinkhoangan@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[123.16.228.27]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-28 04:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-28 08:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So clearly code! Thanks for sharing, man :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540160179]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>483</wp:comment_id>
			<wp:comment_author><![CDATA[Gigel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gigel@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.77.165.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-21 05:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-21 09:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AWESOME.

Might want to add a complete project too. Nevertheless, thank you!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[563470618]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>491</wp:comment_id>
			<wp:comment_author><![CDATA[Babubujji27]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[babubujji27@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[117.193.235.234]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-06 10:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-06 14:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[had the same problem. but solved when I created the Adapter class in the Activity file itself, instead of a separate file. Dont know what does that mean, am new to OOPS, but problem solved]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>320</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[336120654]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[578608914]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>502</wp:comment_id>
			<wp:comment_author><![CDATA[-W]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lsokkflksdj@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.9.51.178]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-06 16:56:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-06 20:56:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great example! Saved me a lot of time. Thanks.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[611359540]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>503</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-06 19:21:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-06 23:21:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're welcome!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>502</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[611359540]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[611484470]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[buka]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rukbadr@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.195.18.203]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-22 00:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-22 04:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[After playing with it for plenty of hours, finally worked with in me this way:


 ListView lv = (ListView) findViewById(R.id.listView1);
        lv.setAdapter(new UserItemAdapter(this, android.R.layout.simple_list_item_1, users));
        
        lv.setOnItemClickListener(new AdapterView.OnItemClickListener(){

			@Override
			public void onItemClick(AdapterView parent, View itemClicked, int position,
					long id) {
				// TODO Auto-generated method stub
				
				
				if (position == 0 ){
				startActivity(new Intent(getApplicationContext(), R1.class));
				}else
			    if (position == 1){
			    	startActivity(new Intent(getApplicationContext(), R2.class));
			    }else
		        if (position == 2){
				   	startActivity(new Intent(getApplicationContext(), R3.class));
				    }]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>328</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345748858]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[625438857]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>506</wp:comment_id>
			<wp:comment_author><![CDATA[buka]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rukbadr@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[107.195.18.203]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-22 00:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-22 04:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks that example was the best among what I’ve went through, Thanks a lot.

For adding click response to the items I came up with this way:

 ListView lv = (ListView) findViewById(R.id.listView1);
        lv.setAdapter(new UserItemAdapter(this, android.R.layout.simple_list_item_1, users));
        
        lv.setOnItemClickListener(new AdapterView.OnItemClickListener(){

			@Override
			public void onItemClick(AdapterView parent, View itemClicked, int position,
					long id) {
				// TODO Auto-generated method stub
				
				
				if (position == 0 ){
				startActivity(new Intent(getApplicationContext(), R1.class));
				}else
			    if (position == 1){
			    	startActivity(new Intent(getApplicationContext(), R2.class));
			    }else
		        if (position == 2){
				   	startActivity(new Intent(getApplicationContext(), R3.class));
				    }]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[625440297]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>516</wp:comment_id>
			<wp:comment_author><![CDATA[Zonamsss]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zonamsss@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.72.185.113]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-18 06:25:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-18 10:25:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Simple but precise; good one ma8:)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[654355278]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>517</wp:comment_id>
			<wp:comment_author><![CDATA[vidu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hbs@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.134.186.132]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-28 02:56:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-28 06:56:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good tutorial............]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[665318137]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>518</wp:comment_id>
			<wp:comment_author><![CDATA[Xotic Jerk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[label952@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[117.18.231.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-28 23:14:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-29 03:14:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How can i change the each object value by user input manually?any method or something else?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[666016454]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[OhadGros]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ohadgros@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.250.4.41]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-12-21 00:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-12-21 05:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how can i add a button to the listView and make an event when the button item is clicked
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[744522619]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[Digvijay Girase]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[digvijay.girase@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[110.226.50.51]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-06 13:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-06 18:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks man. it is just what i needed]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[757923789]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>546</wp:comment_id>
			<wp:comment_author><![CDATA[oppa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[lsac_2@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.116.243.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-17 15:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-17 20:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good and helpful for me!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[771207511]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>547</wp:comment_id>
			<wp:comment_author><![CDATA[Duy Ha]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[h_k_duy@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[18.189.87.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-21 14:40:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-21 19:40:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great thanks for your excellent tutorial !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[774179818]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[JonC]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[drumline064@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.23.243.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-16 23:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-17 03:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just want to thank you so much for posting this. Downloading your source code and implementing the list into my project was very easy and intuitive. I have searched hours for a simple solution to using subitems in a listview and yours works perfectly. Thank you!!!!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[865706441]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>642</wp:comment_id>
			<wp:comment_author><![CDATA[Android | Pearltrees]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pearltrees.com/edgardogambande/android/id13610005/item138387278</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.184.35.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-24 08:56:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-24 13:56:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] listA new View is returned and displayed. Android: xml layout for a listview with different items. » Customizing Android ListView Item Layout. Today I’m going to go step by step through an example of using a ListView, and customizing the [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (93.184.35.43) doesn't match the comment's URL host IP (93.184.35.40) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424786196.2893751;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424786196.29036;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>650</wp:comment_id>
			<wp:comment_author><![CDATA[Gowtham Raj]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[resortstains@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.215.120.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-25 02:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-25 06:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[can we use listitem.xml like that given in this page where the listitem is designed instead of simple_list_item_1.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>407</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[443947866]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[2273201620]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Android Development Tutorial - A Simple Twitter Feed Reader</title>
		<link>http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/</link>
		<pubDate>Mon, 30 May 2011 20:41:53 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float:left;margin:0 10px 5px 0;">
  <img src="http://9.mshcdn.com/wp-content/uploads/2009/10/twitter-android.jpg" alt="" title="codehenge" width="150" height="150" class="alignleft size-thumbnail wp-image-75" /></a><a href="http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/"></div>

<p></a></p>

<p>Last week I demonstrated designing and implementing customized layouts for Android ListView items, including some simple example code. This time around I'd like to expand on that code to make something a little closer to an actual app, illustrating some new tools and concepts in the process such as working with JSON data and the Android BitmapFactory.</p>

<p>In this post I'll show you how to implement a Twitter feed reader for Android. Let's start by familiarizing ourselves with the <a href="http://dev.twitter.com/doc/get/search">Twitter Search API</a> Say we wanted to see what Twitter users have to say about Android today. A Twitter API search query would look something like:</p>

<p><a href="http://search.twitter.com/search.json?q=@android" target="_blank">http://search.twitter.com/search.json?q=@android</a></p>

<p>Twitter's Search API allows up to 100 results to be returned per query, which is more than enough for our example today, but which introduces some interesting challenges as we want to display more data in a user-friendly fashion - more on that later. For today's purposes, I'll restrict return data to 25 results, using the following query:</p>

<p><a href="http://search.twitter.com/search.json?q=@android&rpp=25&page=1" target="_blank">http://search.twitter.com/search.json?q=@android&amp;rpp=25&amp;page=1</a></p>

<p>The "page" parameter can be incremented to step through chunks of 25 results in sequential queries. Go ahead and click on that link (will open a new window/tab) to check out the JSON data returned. There's a lot of data values in there, but for simplicity we'll be focusing on the following values:</p>

<ul>
<li>from_user</li>
<li>text</li>
<li>profile_image_url</li>
</ul>

<p>I'll expand the simple example app from my <a href="http://codehenge.net/blog/2011/05/customizing-android-listview-item-layout/">last post</a> to display twitter posts instead of a hard-coded list of users. The layout from the previous tutorial can be easily repurposed by changing the icon to the Twitter user's avatar, placing the twitter username in the "username" field, and placing the tweet in the message field. Our goal is something like:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-10.48.03-AM.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-10.48.03-AM-191x300.png" alt="" title="Twitter UI screenshot" width="191" height="300" class="aligncenter size-medium wp-image-67" /></a></p>

<p>So how do we get there? Let's go through it, step by step. First, we edit the listitem.xml file to give the View components more helpful names/IDs:</p>

<div><code lang="xml">
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
  android:layout_height="wrap_content" 
  android:gravity="left|center"
  android:layout_width="wrap_content" 
  android:paddingBottom="5px"
  android:paddingTop="5px" 
  android:paddingLeft="5px">

  <ImageView
    android:id="@+id/avatar"
    android:layout_width="wrap_content"
    android:layout_height="fill_parent"
    android:layout_marginRight="6dip"
    android:src="@drawable/icon" />
  <LinearLayout
    android:orientation="vertical"
    android:layout_width="0dip"
    android:layout_weight="1"
    android:layout_height="fill_parent">
    <TextView android:id="@+id/username"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:gravity="center"/>
    <TextView android:id="@+id/message" 
      android:layout_width="wrap_content" 
      android:layout_height="wrap_content"
      android:layout_marginLeft="10px" 
      android:textColor="#0099CC"/>
  </LinearLayout>
</LinearLayout>
</code>
</div>

<p>We can keep the main.xml from the previous post, since all we are changing is the layout within each item. Now we need some workhorse code to manage calling the Twitter API and formatting the return data for easy use. Let's wrap our returned tweets in a simple Tweet class:</p>

<div><code lang="java">
public class Tweet {
  public String username;
  public String message;
  public String image_url;

  public Tweet(String username, String message, String url) {
    this.username = username;
    this.message = message;
    this.image_url = url;
  }
}
</code></div>

<p>I've also written a simple getTweets(searchTerm, page) method to generate the API call and process the return data into our Tweet objects. Here goes:</p>

<div><code lang="java">
public ArrayList&lt;Tweet> getTweets(String searchTerm, int page) {
  String searchUrl = 
        "http://search.twitter.com/search.json?q=@" 
        + searchTerm + "&rpp=100&page=" + page;&lt;/p>

  ArrayList<Tweet> tweets = 
        new ArrayList<Tweet>();

  HttpClient client = new  DefaultHttpClient();
  HttpGet get = new HttpGet(searchUrl);

  ResponseHandler&lt;String> responseHandler = 
        new BasicResponseHandler();

  String responseBody = null;
  try {
    responseBody = client.execute(get, responseHandler);
  } catch(Exception ex) {
    ex.printStackTrace();
  }

  JSONObject jsonObject = null;
  JSONParser parser=new JSONParser();

  try {
    Object obj = parser.parse(responseBody);
    jsonObject=(JSONObject)obj;
  }catch(Exception ex){
    Log.v("TEST","Exception: " + ex.getMessage());
  }

  JSONArray arr = null;

  try {
    Object j = jsonObject.get("results");
    arr = (JSONArray)j;
  } catch(Exception ex){
    Log.v("TEST","Exception: " + ex.getMessage());
  }

  for(Object t : arr) {
    Tweet tweet = new Tweet(
      ((JSONObject)t).get("from_user").toString(),
      ((JSONObject)t).get("text").toString(),
      ((JSONObject)t).get("profile_image_url").toString()
    );
    tweets.add(tweet);
  }

  return tweets;
}
</code></div>

<p>The code above is using the <a href="http://code.google.com/p/json-simple/">json-simple library</a>, a nice lightweight tool for JSON encoding and decoding. I don't have time now, but I may do some demos/examples using json-simple in a later post if there is interest. Aside from exception handling, all the code above does is formats the Twitter search request url from the input parameters "searchTerm" and "page", makes an HTTP GET request using the generate url, parses the JSON return value, and stuffs the data into Tweet objects.</p>

<p>Notice that the Twitter user avatar data (profile_image_url) returned is simply a url to the user's avatar. We need one more processing step to get the actual image, since Android ImageViews can't display an image directly from the web without downloading it. (good thing too, or offline usage would be quite dull!) Let's see how few lines we can do this in:</p>

<div><code lang="java">
public Bitmap getBitmap(String bitmapUrl) {
  try {
    URL url = new URL(bitmapUrl);
    return BitmapFactory.decodeStream(url.openConnection().getInputStream()); 
  }
  catch(Exception ex) {return null;}
}
</code></div>

<p>May not break any records, but the code above is fairly compact. It uses another handy Android API tool called the BitmapFactory. The BitmapFactory lives and breathes bitmaps, its sole purpose in life being to return a bitmap from whatever source data you give it. File, filestream, byte array, you name it. Because of this, I don't have to put any thought at all into bits, bytes, files, http requests, or anything else to accomplish this task. Rock on, BitmapFactory.</p>

<p>Now we have all of the tools we need to refactor the ItemAdapter from last week's post to display our Tweet objects. Here we go:</p>

<div><code lang="java">
public class TweetItemAdapter extends ArrayAdapter<Tweet> {
  private ArrayList<Tweet> tweets;

  public TweetItemAdapter(Context context, int textViewResourceId, ArrayList<Tweet> tweets) {
    super(context, textViewResourceId, tweets);
    this.tweets = tweets;
  }

  @Override
  public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView;
    if (v == null) {
      LayoutInflater vi = 
         (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
      v = vi.inflate(R.layout.listitem, null);
    }

    Tweet tweet = tweets.get(position);
    if (tweet != null) {
      TextView username = (TextView) v.findViewById(R.id.username);
      TextView message = (TextView) v.findViewById(R.id.message);
      ImageView image = (ImageView) v.findViewById(R.id.avatar);

      if (username != null) {
        username.setText(tweet.username);
      }

      if(message != null) {
        message.setText(tweet.message);
      }

      if(image != null) {
        image.setImageBitmap(getBitmap(tweet.image_url));
      }
    }

    return v;
  }
}
</code></div>

<p>Not too many changes from the original, but the changes we have made are important. Let's go through them. No conceptual changes in the constructor, so I'll skip that. getView() is where the magic happens. Now, since we are setting the avatar image independently for each user, we are grabbing an ImageView object as well as two TextView objects from our View. Since we already parsed the Twitter JSON data in the getTweets() method and packaged it nicely into our Tweet objects, all we need to do here is put the extracted values from the relevant Tweet object into the text field for our TextView objects. For the ImageView, we need to set a bitmap value, which is exactly what we wrote the getBitmap(url) method to return. That's it!</p>

<p>For the sake of completeness, here is the onCreate() method for this example - this illustrates setting the adapter and passing some data to the ListView as our app is launched.</p>

<div><code lang="java">
@Override
public void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  setContentView(R.layout.main);&lt;/p>

  ArrayList<Tweet> tweets = getTweets("android", 1);

  ListView listView = (ListView) findViewById(R.id.ListViewId);
  listView.setAdapter(new TweetItemAdapter(this, R.layout.listitem, tweets));
}
</code></div>

<p>For this example, we only ever get a single API call's worth of data, a limitation I will address in a follow-up tutorial. Let's take a screenshot of the finished product for posterity:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-11.38.04-AM.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-05-30-at-11.38.04-AM-180x300.png" alt="" title="Screen shot 2011-05-30 at 11.38.04 AM" width="180" height="300" class="aligncenter size-medium wp-image-68" /></a></p>

<p>There you have it: a working Twitter feed reader, based on the Twitter search API. There are plenty of directions you could take this code, from allowing the user to specify search terms to changing the way data is aggregated or adding some persistent data features. If these are the types of things you are interested in, I hope this tutorial helps! Feel free to leave a comment or drop me a line if you have any questions. As always, you can download code using the links at the bottom of this post to try things out for yourself.</p>

<p>In my next post I'll continue working on this Twitter app to add user scrolling detection and auto-expansion of the ListView, so we can continually add to the ListView as the user scrolls through. This is a handy trick that can be useful in many scenarios. Stay tuned!</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Example1.java">Example.java</a> <a href="http://codehenge.net/blog/wp-content/uploads/2011/05/listitem1.xml">listitem.xml</a> <a href="http://codehenge.net/blog/wp-content/uploads/2011/05/main1.xml">main.xml</a></p>

<p><strong>Get 50% off my Node.js course <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Last week</a> I demonstrated designing and implementing customized layouts for Android ListView items, including some simple example code. Today i'll expand on that code to make something a little closer to an actual app: a Twitter feed reader for Android. I'll use this exercise to illustrate some new tools and concepts in the process such as working with JSON data and the Android BitmapFactory.
]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date><![CDATA[2011-05-30 16:41:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-30 20:41:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-programming-tutorial-a-simple-twitter-feed-reader]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Android Development Tutorial - A Simple Twitter Feed Reader]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This post builds on my previous Custom Android ListView tutorial to create a simple Android Twitter feed reader app. Using this app as an example, this tutorial introduces concepts like JSON deserialization, the Android BitmapFactory, and independent image icons for ListView items.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, json, deserialization, bitmap, bitmapfactory, twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://9.mshcdn.com/wp-content/uploads/2009/10/twitter-android.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://9.mshcdn.com/wp-content/uploads/2009/10/twitter-android.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This post builds on my previous Custom Android ListView tutorial to create a simple Android Twitter feed reader app. Using this app as an example, this tutorial introduces concepts like JSON deserialization, the Android BitmapFactory, and independent image icons for ListView items.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, json, deserialization, bitmap, bitmapfactory, twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_sociableoff]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://9.mshcdn.com/wp-content/uploads/2009/10/twitter-android.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://9.mshcdn.com/wp-content/uploads/2009/10/twitter-android.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This post builds on my previous Custom Android ListView tutorial to create a simple Android Twitter feed reader app. Using this app as an example, this tutorial introduces concepts like JSON deserialization, the Android BitmapFactory, and independent image icons for ListView items.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, json, deserialization, bitmap, bitmapfactory, twitter]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>358</wp:comment_id>
			<wp:comment_author><![CDATA[Duo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dj_duo@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-26 11:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-26 16:20:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This isn't working for me unfortunately, can someone post a .ZIP of the folder containing it?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[372787401]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>352</wp:comment_id>
			<wp:comment_author><![CDATA[Lars Van de Donk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/lars.vandedonk</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-14 07:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-14 12:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uhm, I'm quiet a noob with Java... 
Should it be something like

((JSONObject)t).get("created_at").toString(DateTime)  ??]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>350</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362511235]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362744968]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>350</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-13 17:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 22:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ya, just parse that string into a DateTime, and you should be able to set the display to whatever you want easily.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>348</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362259328]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362511235]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>348</wp:comment_id>
			<wp:comment_author><![CDATA[Lars Van de Donk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/lars.vandedonk</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-13 05:51:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 10:51:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I used ((JSONObject)t).get("created_at").toString() to get the date but it displays like:
Sat, 12 Nov 2011 22:03:42 +0000

But I actually want it to display like : 13 hours ago like on twitter itself.
Any ideas?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362259328]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>345</wp:comment_id>
			<wp:comment_author><![CDATA[Durgeshpathakk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[durgeshpathakk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-11 01:08:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-11 06:08:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sir i am not able do that please guide me to show time of tweets in my android emulator]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360856659]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>344</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 08:28:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 13:28:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In the tutorial I am using the Search API call, which is just used to search for keywords. Sounds like you want either the User Timeline or Public Timeline call:

https://dev.twitter.com/docs/api/1/get/statuses/user_timeline

https://dev.twitter.com/docs/api/1/get/statuses/public_timeline]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>264</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[283318348]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360010074]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>343</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 08:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 13:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks like you need to include the json-simple libraries:

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>340</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[359986099]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360007636]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>341</wp:comment_id>
			<wp:comment_author><![CDATA[Durgeshpathakk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[durgeshpathakk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 08:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 13:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how to display the time of tweet pls send the code at my email id durgeshpathakk@gmail.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360002823]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>342</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 08:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 13:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Durgeshpathakk. Take a look at the Twitter Search API docs, or check out this sample query from the tutorial:

http://search.twitter.com/search.json?q=@android

In the results JSON you will see a created_at value for each tweet that shows the time it was created.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>341</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360002823]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[360006376]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>340</wp:comment_id>
			<wp:comment_author><![CDATA[Durgeshpathakk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[durgeshpathakk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 07:27:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 12:27:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i am getting error pls help me
Can only iterate over an array or an instance of java.lang.Iterablefor(Object t : arr) {
Tweet tweet = new Tweet(
((JSONObject)t).get("from_user").toString(),	
((JSONObject)t).get("text").toString(),
((JSONObject)t).get("profile_image_url").toString()
);
tweets.add(tweet);
}]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[359986099]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>338</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Bochenek]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/tomasz.bochenek</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-05 11:28:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-05 15:28:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OK, I'm gonna reply to myself - I've made one of those stupid mistakes - I had two similarly named layouts and choosen the wrong one...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>337</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[355583924]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[356513466]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>337</wp:comment_id>
			<wp:comment_author><![CDATA[Tomek Bochenek]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/tomasz.bochenek</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-04 07:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-04 11:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unfortunately I'm having the same issues as @Bferreira . Can anybody help us? All I can say about the null pointer is that it is returned somewhere during the adapter setting in onCreate... ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>323</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[342008683]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[355583924]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>323</wp:comment_id>
			<wp:comment_author><![CDATA[Bferreira Info]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bferreira.info@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-23 14:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-23 18:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[in my compile ok and i have the permission but

10-23 17:50:36.272: ERROR/AndroidRuntime(3571): java.lang.RuntimeException: Unable to start activity ComponentInfo{teste.teste1/teste.teste1.Example}: java.lang.NullPointerException
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1736)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1752)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread.access$1500(ActivityThread.java:123)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:993)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.os.Handler.dispatchMessage(Handler.java:99)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.os.Looper.loop(Looper.java:126)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread.main(ActivityThread.java:3997)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at java.lang.reflect.Method.invokeNative(Native Method)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at java.lang.reflect.Method.invoke(Method.java:491)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at dalvik.system.NativeStart.main(Native Method)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571): Caused by: java.lang.NullPointerException
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at teste.teste1.Example.getTweets(Example.java:130)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at teste.teste1.Example.onCreate(Example.java:37)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1700)
10-23 17:50:36.272: ERROR/AndroidRuntime(3571):     ... 11 more

can u help plz?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>240</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245116215]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[342008683]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>319</wp:comment_id>
			<wp:comment_author><![CDATA[Niels]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[niels_len@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-06 08:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-06 12:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>315</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[324941432]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[327915041]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>317</wp:comment_id>
			<wp:comment_author><![CDATA[Six3sixweb]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[six3sixweb@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-02 10:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-02 14:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nevermind the first issue. Fixed that. Still want to know how to display the timeline of just one user, though.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>313</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[321651561]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[325000213]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>316</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-02 09:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-02 13:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I bet you are declaring some other JSONParser object instead of the JSONParser from the json-simple library - unfortunately, it has the same class name as some others out there, they just reside in different namespaces.

Make sure you have downloaded the json-simple library and included the jar as a dependency, and then check that the namespace on your declared object is: org.json.simple.parser.JSONParser.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>314</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[324938322]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[324992042]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>314</wp:comment_id>
			<wp:comment_author><![CDATA[Jestinjoy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jestinjoy@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-02 10:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-02 10:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How you fixed it? I am having the same problem]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>272</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838807]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[324938322]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>315</wp:comment_id>
			<wp:comment_author><![CDATA[tux]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jestinjoy@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-02 10:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-02 10:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Getting error in the first line of following code:

for(Object t : arr) {
			Tweet tweet = new Tweet(
					((JSONObject)t).get("from_user").toString(),			
					((JSONObject)t).get("text").toString(),
					((JSONObject)t).get("profile_image_url").toString()
					);
			tweets.add(tweet);
		}

It says

Can only iterate over an array or an instance of java.lang.Iterable.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[324941432]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>312</wp:comment_id>
			<wp:comment_author><![CDATA[Yoganandh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/Venom_Vendor</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-21 13:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-21 13:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tried including json-library still i have error in this line 

JSONParser parser = new JSONParser();

Error:
Cannot instantiate the type JSONParser

Can u plz explain me how to Overcome this]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[316628505]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>313</wp:comment_id>
			<wp:comment_author><![CDATA[Six3sixweb]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[six3sixweb@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-28 11:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-28 11:20:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For some reason,I'm only getting one Tweet result. Not sure why. Also, how do I make this so it shows just the timeline of one Twitter account?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[321651561]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>311</wp:comment_id>
			<wp:comment_author><![CDATA[Bpsingh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bpsingh216@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-21 12:57:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-21 12:57:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great tutorial .
thanks ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[316617775]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>304</wp:comment_id>
			<wp:comment_author><![CDATA[sx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stenoxu@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-14 04:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-14 04:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how do you solve this problem?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>272</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838807]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[309310783]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>305</wp:comment_id>
			<wp:comment_author><![CDATA[borislemke]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dimaslemke@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-15 09:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-15 09:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there a complete guide/tutorial on making a fully functional twitter client for android? I mean something from OAuth to get tweets, mentions, notifications, message and so on.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[311175471]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>278</wp:comment_id>
			<wp:comment_author><![CDATA[jhoncw]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[neburline@yahoo.es]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-22 12:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-22 12:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do you implement a Row Click Listener that open the tweet url using the web browser?
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292964315]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>271</wp:comment_id>
			<wp:comment_author><![CDATA[medevil13]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[medevil13@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-18 04:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-18 04:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[for(JSONObject t : arr) 
gives this error
Can only iterate over an array or an instance of java.lang.Iterable.
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838012]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>272</wp:comment_id>
			<wp:comment_author><![CDATA[medevil13]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[medevil13@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-18 04:51:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-18 04:51:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry fixed the problem
wrong imports
thanks for the tutorial thought
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>271</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838012]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838807]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>595</wp:comment_id>
			<wp:comment_author><![CDATA[LittleGirl]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vilacap15_521@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[77.227.64.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-24 09:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-24 13:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good afternoon,

As this application can run with the modification of the api v1.1.

If I try to access: http://search.twitter.com/search.json?q = @ android

I skip the following error:

{"errors": [{"message": "The Twitter REST API v1 is no longer active. Please migrate to API v1.1. https://dev.twitter.com/docs/api/1.1/overview." "code": 68}]}

For they understand that you must change this.

Someone please help me? thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[940143039]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>264</wp:comment_id>
			<wp:comment_author><![CDATA[Markopolodev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[markopolodev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-11 07:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-11 07:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tutorial, very useful! I am trying to display tweets from one user. I am able to do this from twitter4j, but I am not able to modify your code to do it. As far as I can tell, simply substituting the URL should work, but it throws errors. Any ideas? ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[283318348]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>250</wp:comment_id>
			<wp:comment_author><![CDATA[John Bakalarczyk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[john.bakalarczyk@kaplan.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-20 16:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-20 16:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[need json_simple-1.1.jar.... i had the same error with just json_simple.jar]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>201</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223320097]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[258787074]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>241</wp:comment_id>
			<wp:comment_author><![CDATA[Jitsnik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[teddyeb2001@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-07 15:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-07 15:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeeiii !!!, it worked, thanks. yes that was the problem. Thanks a million, nice looking app too. Great work]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>240</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245116215]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245165555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>240</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-07 14:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-07 14:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks like your app can't communicate with search.twitter.com. Do you have <a href="http://developer.android.com/reference/android/Manifest.permission.html#INTERNET" rel="nofollow">internet permissions</a> enabled in the manifest?

Check your AndroidManifest.xml file and add:



if its not there already.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>239</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245088043]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245116215]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>239</wp:comment_id>
			<wp:comment_author><![CDATA[Jitsnik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[teddyeb2001@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-07 14:26:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-07 14:26:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I tried running the application too using the debugger and I have an and exception "java.net.UnknownHostException: search.twitter.com "

at 
             try{
		 responseBody = client.execute(get, responseHandler);
		}catch(Exception ex) {
			ex.printStackTrace();
		}

Kindly advice]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>205</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223338242]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245088043]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>228</wp:comment_id>
			<wp:comment_author><![CDATA[bttung]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tungfcb@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-30 07:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-30 07:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks it solved the problem!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>202</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223323311]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238507737]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>212</wp:comment_id>
			<wp:comment_author><![CDATA[Freic1989]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[freic1989@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 13:27:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 13:27:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any idea to solve this issue? i got the same problem too. can anyone tell me where i must put this code StringReader myStringReader = new StringReader(responseBody);  ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>200</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223305326]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228182588]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[Roman Kl]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[roman777555@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-04 16:01:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-04 16:01:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for useful information. It would be useful to know about Sigma Ukraine, IT outsourcing software development company that provides premium <a href="http://sigmaukraine.com" rel="nofollow">software development services</a>. Also try <a href="http://homeownersinsurancem.com" rel="nofollow">cheapest homeowners insurance</a>.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[241865720]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>205</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 18:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 18:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You have a null pointer exception in there. Can you run the debugger and see which object is null?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>204</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223328529]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223338242]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[Waza_be]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/Waza_Be</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 17:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 17:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice stuff!

Unfortunately, project cannot compile:

At line: Object obj = parser.parse(responseBody);

Eclipse tells me: The method parse(Reader) in the type JSONParser is not applicable for the arguments (String)

Any idea?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223305326]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 18:09:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 18:09:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks!

My first guess is that you are declaring some other JSONParser object instead of the JSONParser from the json-simple library - unfortunately, it has the same class name as some others out there, they just reside in different namespaces.

Make sure you have downloaded the <a href="http://code.google.com/p/json-simple/downloads/list" rel="nofollow">json-simple library</a> and included the jar as a dependency, and then check that the namespace on your declared object is: org.json.simple.parser.JSONParser.

Let me know if this fixes it!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>200</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223305326]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223320097]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[Waza_be]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/Waza_Be</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 18:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 18:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This one just fixed everything:

StringReader myStringReader = new StringReader(responseBody);]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>201</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223323311]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223320097]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[Scottyomalley]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[scottyomalley@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-05 01:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-05 01:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any chance you can change the code blocks to show all the code, I dispise scrolling within a page...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[218372224]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-05 12:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-05 12:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm searching for a new theme with wider columns to solve that issue. Hopefully I find a workable one soon. Sorry for the inconvenience, but know that it will be fixed!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>197</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[218372224]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[218507035]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-06 17:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-06 17:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Problem solved! With my traditional degree of overkill, I've revamped the site entirely. Now, in addition to having a wider column in which to display posts (which should take care of the majority of these scroll cases), I've also allowed a fluid width on the main column. So, if nothing else, you can now full screen the browser and get enough extra width in code blocks to encompass any reasonable width for code.  Cheers!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>197</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[219284154]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[218372224]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 18:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 18:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So you are passing the StringReader into the JSONParser object now? Thanks for the update!

 I'll look into it and see if they have changed the library since I posted this, and update the tutorial accordingly. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>202</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223323311]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223326370]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>204</wp:comment_id>
			<wp:comment_author><![CDATA[Jatinpreet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jatinpreet@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 18:27:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 18:27:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I just tried the code. The code is compiled without errors but the application force closes when run on the device. Any suggestions? 

This is the logcat:

06-10 23:40:12.671: ERROR/AndroidRuntime(200): Uncaught handler: thread main exiting due to uncaught exception
06-10 23:40:12.781: VERBOSE/MediaProvider(146): /sdcard volume ID: 383979293
06-10 23:40:12.812: ERROR/AndroidRuntime(200): java.lang.RuntimeException: Unable to start activity ComponentInfo{reade.feed.twitter/reade.feed.twitter.Feeds}: java.lang.NullPointerException
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2401)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2417)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread.access$2100(ActivityThread.java:116)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1794)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.os.Handler.dispatchMessage(Handler.java:99)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.os.Looper.loop(Looper.java:123)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread.main(ActivityThread.java:4203)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at java.lang.reflect.Method.invokeNative(Native Method)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at java.lang.reflect.Method.invoke(Method.java:521)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:791)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:549)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at dalvik.system.NativeStart.main(Native Method)
06-10 23:40:12.812: ERROR/AndroidRuntime(200): Caused by: java.lang.NullPointerException
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at reade.feed.twitter.Feeds.getTweets(Feeds.java:133)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at reade.feed.twitter.Feeds.onCreate(Feeds.java:43)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1123)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2364)
06-10 23:40:12.812: ERROR/AndroidRuntime(200):     ... 11 more
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[223328529]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>360</wp:comment_id>
			<wp:comment_author><![CDATA[Erwan Gereec]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[egereec@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-01 14:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-01 19:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have the same issues as @Bferreira. Please tell me what exactly resolve the problem for you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>338</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[356513466]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[376946645]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>361</wp:comment_id>
			<wp:comment_author><![CDATA[Erwan Gereec]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[egereec@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-01 14:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-01 19:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I used the code in attachement and i have an error :

E/AndroidRuntime(884): FATAL EXCEPTION: main
    java.lang.RuntimeException: Unable to start activity ComponentInfo{fr.enstb.tp2/fr.enstb.tp2.TweetsActivity}: java.lang.NullPointerException
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1955)
    at android.app.ActivityThread.startActivityNow(ActivityThread.java:1796)
    at android.app.LocalActivityManager.moveToState(LocalActivityManager.java:135)
    at android.app.LocalActivityManager.startActivity(LocalActivityManager.java:347)
    at android.widget.TabHost$IntentContentStrategy.getContentView(TabHost.java:682)
    at android.widget.TabHost.setCurrentTab(TabHost.java:346)
    at android.widget.TabHost$2.onTabSelectionChanged(TabHost.java:150)
    at android.widget.TabWidget$TabClickListener.onClick(TabWidget.java:540)
    at android.view.View.performClick(View.java:3460)
    at android.view.View$PerformClick.run(View.java:13955)
    at android.os.Handler.handleCallback(Handler.java:605)
    at android.os.Handler.dispatchMessage(Handler.java:92)
    at android.os.Looper.loop(Looper.java:137)
    at android.app.ActivityThread.main(ActivityThread.java:4340)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:511)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)
    at dalvik.system.NativeStart.main(Native Method)
    Caused by: java.lang.NullPointerException
    at fr.enstb.tp2.TweetsActivity.getTweets(TweetsActivity.java:126)
    at fr.enstb.tp2.TweetsActivity.onCreate(TweetsActivity.java:36)
    at android.app.Activity.performCreate(Activity.java:4465)
    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1049)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1919)
    ... 18 more


Please help me..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[376978891]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>366</wp:comment_id>
			<wp:comment_author><![CDATA[Lars Van de Donk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/lars.vandedonk</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-08 09:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-08 14:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I got a white background. 
But when I scroll it turns black, and when I hit one of the tweets it turns blue.
Can I edit this with a layout XML? Or is there an other way?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[382018491]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>376</wp:comment_id>
			<wp:comment_author><![CDATA[Iambalu Jampana]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[iambalu.jampana@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-16 00:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-16 05:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[U need to format the date to standard date format...becoz twitter replies date like jsva Script format...enjoy]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>348</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362259328]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387811120]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>382</wp:comment_id>
			<wp:comment_author><![CDATA[Selim Namsi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[selim.namsi@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-05 20:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-06 01:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello ,
to disable the black color when you scroll back , you have to modify the layout xml where you had defined your Listview and put this in the ListView:

android:drawSelectorOnTop="false"
android:cacheColorHint="#00000000"

you can find more explanation here :http://android-developers.blogspot.com/2009/01/why-is-my-list-black-android.html

and to change the blue color when you hit one of the tweets , you have to add this to the ListView in the layout XML

android:listSelector="put the color here"
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>366</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[382018491]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[401884542]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>383</wp:comment_id>
			<wp:comment_author><![CDATA[dude18]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[arisprung@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-09 16:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-09 21:20:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[having same problem .Where did you put the code-StringReader myStringReader = new StringReader(responseBody); ?

also what jar did you use? json-simple or json-simple 1.1?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>212</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228182588]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[406565199]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>384</wp:comment_id>
			<wp:comment_author><![CDATA[dude18]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[arisprung@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-10 03:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-10 08:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Lars
I tried doing the same thing but my image create time is not showing any idea?
how did you define your xml?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>352</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362744968]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[406890071]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>385</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-10 08:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-10 13:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No, you use a date formatter. There's a nice example here:

http://www.roseindia.net/java/java-conversion/StringToDate.shtml

Cheers!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>352</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362744968]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[407033537]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>387</wp:comment_id>
			<wp:comment_author><![CDATA[Ramesh D]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ramesh.d@xlabz.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-01-19 02:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-01-19 07:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i done it.. super one though]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[415049738]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>394</wp:comment_id>
			<wp:comment_author><![CDATA[BinaryLaux]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/BinaryLaux</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-08 21:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-09 02:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This Tutorial Helps Me A lot Thanks Cacois ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433560166]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>398</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-09 09:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-09 14:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>394</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433560166]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433962729]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>400</wp:comment_id>
			<wp:comment_author><![CDATA[Vijay]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[popviji@gmaol.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-10 00:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-10 05:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[the way you explain the example is really interesting. Great lines.. Thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[434875908]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>401</wp:comment_id>
			<wp:comment_author><![CDATA[ahmed ebeid]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ahmedebeid73@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-13 17:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-13 22:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am just wondering .. where would I put a twitter name to retrieve only that user's feeds, instead of just general feeds. Thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[438127470]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>402</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-13 21:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-14 02:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Check out this api call for non-protected user feeds:

https://dev.twitter.com/docs/api/1/get/statuses/public_timeline]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>401</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[438127470]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[438332789]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>403</wp:comment_id>
			<wp:comment_author><![CDATA[Roljohn Villanueva]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/maharlikanglila</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-15 15:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-15 20:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How come some twitter accounts cant be parsed by this parsing method? 
btw thanks for the good tutorial :D]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[440086509]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>409</wp:comment_id>
			<wp:comment_author><![CDATA[Girish]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[girish.koundinya126@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[117.211.83.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-21 07:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-21 12:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, 
 I used the code in my program on clicking an image i swithched it to the main.xml above and then used your code. i only get a blank screen. Please help.
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[444702577]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>419</wp:comment_id>
			<wp:comment_author><![CDATA[dipu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dipupatel6@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[123.237.230.127]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-02 01:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-02 06:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hey,
 i have some problem in above code...
  i have getting error in json parser..
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[454291627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>420</wp:comment_id>
			<wp:comment_author><![CDATA[Mskudla]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mskudla@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.63.132.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-04 17:12:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-04 22:12:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ Hey I am getting an error that says ListViewID can not be resolved or is not a type.  R is auto-generated and I can't declare anything in it so how do I declare this?  Thanks

  ListView listView = (ListView) findViewById(R.id.ListViewId);]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[456273045]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[Mskudla]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mskudla@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.63.132.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-04 17:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-04 22:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, figured it out.  I forgot to change my main.xml in this project to have the listview in it.

However I still get a null pointer error at        
listView.setAdapter(new TweetItemAdapter(this, R.layout.listitem, tweets));]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>420</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[456273045]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[456278444]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>427</wp:comment_id>
			<wp:comment_author><![CDATA[manahmanah]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[janberka@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[88.227.241.242]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-11 13:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-11 17:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey it works on 2.0.1 alright. but on 4.0.3 it doesn't work. People tells about android.os.NetworkOnMainThreadException thing can you update it?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[462791833]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>433</wp:comment_id>
			<wp:comment_author><![CDATA[Vanngoc712]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vanngoc712@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.162.165.55]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-21 14:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-21 18:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey it works on 1.0 alright. but on 4.0.3 it doesn't work. Please !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[472642739]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>434</wp:comment_id>
			<wp:comment_author><![CDATA[chu du]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vanngoc712@gmail.con]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.162.165.55]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-21 14:50:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-21 18:50:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It works on 1.6 alright, but on not 1.6 it doesn't work.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[472644502]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>437</wp:comment_id>
			<wp:comment_author><![CDATA[Bonestarr2k]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bonestarr2k@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.174.216.245]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-23 12:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-23 16:20:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This code doesn't work for me, im running it on sdk version 7, and I have left the code identical to yours and I am able to compile but it closes unexpectedly and I get these errors:


03-23 16:14:02.253: E/AndroidRuntime(215): Uncaught handler: thread main exiting due to uncaught exception

03-23 16:14:02.263: E/AndroidRuntime(215): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.uwe.bus/com.uwe.bus.InfoActivity}: java.lang.NullPointerException
03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2496)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2512)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread.access$2200(ActivityThread.java:119)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1863)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.os.Handler.dispatchMessage(Handler.java:99)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.os.Looper.loop(Looper.java:123)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread.main(ActivityThread.java:4363)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at java.lang.reflect.Method.invokeNative(Native Method)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at java.lang.reflect.Method.invoke(Method.java:521)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:860)

03-23 16:14:02.263: E/AndroidRuntime(215): Caused by: java.lang.NullPointerException

03-23 16:14:02.263: E/AndroidRuntime(215): 	at com.uwe.bus.InfoActivity.getTweets(InfoActivity.java:133)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at com.uwe.bus.InfoActivity.onCreate(InfoActivity.java:39)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)

03-23 16:14:02.263: E/AndroidRuntime(215): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2459)

03-23 16:14:02.263: E/AndroidRuntime(215): 	... 11 more


Line 39:
 ArrayList tweets = null;
		try {
			tweets = getTweets("android", 1);
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

Line 133:
for(int i = 0; i &lt; arr.length(); i++) {
			   JSONObject t = (JSONObject) arr.get(i);
			   Tweet tweet = new Tweet(
			     t.get(&quot;from_user&quot;).toString(),
			     t.get(&quot;text&quot;).toString(),
			     t.get(&quot;profile_image_url&quot;).toString()
			   );
			   tweets.add(tweet);
			 }

I had to change those parts in order to compile, as I kept getting this error: Can only iterate over an array or an instance of java.lang.Iterable

http://stackoverflow.com/questions/9839961/can-only-iterate-over-an-array-or-an-instance-of-java-lang-iterable

Please help, thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[474578753]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-23 12:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-23 16:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ya, I think there may be some incompatibilities with the latest version. I'm working on debugging and pushing a new version out soon. When I do, I'll put a note in this post to link to the new post I write. If anyone else comes up with any fixes, feel free to issue a pull request to github.

Thanks for your patience!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>437</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[474578753]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[474603949]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>439</wp:comment_id>
			<wp:comment_author><![CDATA[Bonestarr2k]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bonestarr2k@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.174.216.245]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-23 14:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-23 18:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That would be great as this was probably the best explained example online, its a shame that there was a few bugs, good luck fixing it and I hope you get it all fixed soon. Great work...!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>438</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[474603949]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[474689829]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>440</wp:comment_id>
			<wp:comment_author><![CDATA[vinod]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kumar.vinod1214@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.82.150.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-26 07:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-26 11:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[just add     json_simple-1.1.jar file in your project the application runs fine
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>212</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228182588]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[476328303]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>441</wp:comment_id>
			<wp:comment_author><![CDATA[Dinakaran407]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dinakaran407@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.82.150.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-26 07:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-26 11:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[add the following

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

download simple jason parser jar file 1.1]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>271</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838012]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[476329605]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>449</wp:comment_id>
			<wp:comment_author><![CDATA[ThomasPeters]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thomaspeters@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.176.219.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-05 17:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-05 21:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tutorial, only problem is, when I try to run this code for Ice Cream Sandwich it crashes for no apparent reason throwing an illegal exception error.

Anyone else tried this with Android sdk level 15 and had success?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[487705842]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>455</wp:comment_id>
			<wp:comment_author><![CDATA[Albertorusso90]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[albertorusso90@hotmail.co.uk]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[89.98.39.128]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-26 10:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-26 14:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, thanks for the guide but I got a question, I been trying to run the code, everything its same as urs, but it doesnt work, it shows "Invalid cookie header: "Set-Cookie: k=89.98.39.128.3b2c85d516545ba5; path=/; expires=Thu, 03-May-2012 13:56:52 UTC; domain=.search.twitter.com; httponly". Unable to parse expires attribute; Thu, 03-May-2012 13:56:52 UTC" 

Please let me know whats wrong...it just keeps crashing as soon as it runs, it looks like it is searching for the tweets but then app just crashes]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[509740416]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>456</wp:comment_id>
			<wp:comment_author><![CDATA[Hemendraajmera1337]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hemendraajmera1337@gmial.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[117.200.255.88]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-05 02:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-05 06:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi,
i want to implement rss reader application ,can u provide such king of complete tutorial and source code.
Thanks in advanced'
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[519856793]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>459</wp:comment_id>
			<wp:comment_author><![CDATA[Aaa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aaa@aaa.aaa]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.174.88.118]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-17 18:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-17 22:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The code compiled without any error. Then the Emulator gives this error. I think the path for the Jar file for the JSON library is correctly set up, I can not understand why I am getting this error :(

Could not find class 'org.json.simple.parser.JSONParser', referenced from method ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[531552124]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>460</wp:comment_id>
			<wp:comment_author><![CDATA[kennedynyaga]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[knchabz@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[197.237.7.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-23 12:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-23 16:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know this is much much later but if we all perhaps pitch in we could update it. So here is me first.




1.) create JSONParser.java as follows


package com.mikiko;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;
 import android.util.Log;
 public class JSONParser {
 
    static InputStream is = null;
    static JSONObject jObj = null;
    static String json = "";
 
    // constructor
    public JSONParser() {
 
    }
 
    public JSONObject getJSONFromUrl(String url) {
 
        // Making HTTP request
        try {
            // defaultHttpClient
            DefaultHttpClient httpClient = new DefaultHttpClient();
            HttpPost httpPost = new HttpPost(url);
 
            HttpResponse httpResponse = httpClient.execute(httpPost);
            HttpEntity httpEntity = httpResponse.getEntity();
            is = httpEntity.getContent();          
 
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
 
        try {
            BufferedReader reader = new BufferedReader(new InputStreamReader(is), 8);
            StringBuilder sb = new StringBuilder();
            String line = null;
            while ((line = reader.readLine()) != null) {
                sb.append(line + "n");
            }
            is.close();
            json = sb.toString();
        } catch (Exception e) {
            Log.e("Buffer Error", "Error converting result " + e.toString());
        }
 
        // try parse the string to a JSON object
        try {
            jObj = new JSONObject(json);
        } catch (JSONException e) {
            Log.e("JSON Parser", "Error parsing data " + e.toString());
        }
 
        // return JSON String
        return jObj;
 
    }
}














2.) Then integrate it to the above code as follows

package com.mikiko;



import java.net.URL;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONObject;
import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

public class MickoActivity extends Activity {

	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        ArrayList tweets = getTweets("ihub", 20);
        
        ListView listView = (ListView) findViewById(R.id.listView01);
        listView.setAdapter(new UserItemAdapter(this, R.layout.listitem, tweets));
    }

	public class UserItemAdapter extends ArrayAdapter {
		private ArrayList tweets;

		public UserItemAdapter(Context context, int textViewResourceId, ArrayList tweets) {
			super(context, textViewResourceId, tweets);
			this.tweets = tweets;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {
				LayoutInflater vi = (LayoutInflater)this.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				v = vi.inflate(R.layout.listitem, null);
			}

			Tweet tweet = tweets.get(position);
			if (tweet != null) {
				TextView username = (TextView) v.findViewById(R.id.username);
				TextView message = (TextView) v.findViewById(R.id.message);
				ImageView image = (ImageView) v.findViewById(R.id.avatar);

				if (username != null) {
					username.setText(tweet.username);
				}

				if(message != null) {
					message.setText(tweet.message);
				}
				
				if(image != null) {
					image.setImageBitmap(getBitmap(tweet.image_url));
				}
			}
			return v;
		}
	}

	public Bitmap getBitmap(String bitmapUrl) {
		try {
			URL url = new URL(bitmapUrl);
			return BitmapFactory.decodeStream(url.openConnection() .getInputStream()); 
		}
		catch(Exception ex) {return null;}
	}
	
	public ArrayList getTweets(String searchTerm, int page) {
		String URL ="http://search.twitter.com/search.json?q=@"+searchTerm;
		 ArrayList tweets = new ArrayList();
		 JSONParser jParser = new JSONParser();
		 JSONObject json = jParser.getJSONFromUrl(URL);
		 
	
            JSONArray ja = null;
            try{
                 ja = json.getJSONArray("results");
            for (int i = 0; i &lt; ja.length(); i++) {
                 Tweet tweet = new Tweet(
                 ((JSONObject) ja.get(i)).get(&quot;from_user&quot;).toString(),
                 ((JSONObject) ja.get(i)).get(&quot;text&quot;).toString(),
                  ((JSONObject) ja.get(i)).get(&quot;profile_image_url&quot;).toString()
                  );

                	    tweets.add(tweet);
            }
        }catch(Exception e){
        
        }
  
    


    

    return tweets;
}
	

	public class Tweet {
		public String username;
		public String message;
		public String image_url;
		
		public Tweet(String username, String message, String url) {
			this.username = username;
			this.message = message;
			this.image_url = url;
		}
	}
}







]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[536650378]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>468</wp:comment_id>
			<wp:comment_author><![CDATA[Yuri]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[crv_yurica@yahoo.es]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.240.106.37]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-29 21:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-30 01:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tutorial. But I have a doubt: if I want only appear tweets made ​​by the author of the account I have to change the url?
  http://search.twitter.com/search.json?q = @ android &amp; rpp = 25 &amp; page = 1

Can you do that?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[541497133]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>482</wp:comment_id>
			<wp:comment_author><![CDATA[nickolang]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[okcin_nicko_pulido@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.106.43.54]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-20 00:11:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-20 04:11:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[is this working?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[562494173]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>495</wp:comment_id>
			<wp:comment_author><![CDATA[Frank Jr 619]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[frank.jr.619@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.61.96.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-17 07:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-17 11:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i wanna ask, if i display image like that you do, when i scroll it , it very2 lag. how to solve that problem?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[590063382]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>525</wp:comment_id>
			<wp:comment_author><![CDATA[minal patil]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/patilminal8</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[27.106.12.151]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-16 02:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-16 06:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i was add simple jason parser jar into program but still get error on 

for(JSONObject t:arr)

an only iterate over an array or an instance of java.lang.Iterable

what to do??? plz replyyyyyyyyyy]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>271</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289838012]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[683822277]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>542</wp:comment_id>
			<wp:comment_author><![CDATA[CuriousAndry]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spare.othermail@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.100.53.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-08 14:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-08 19:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice. Thanks for this. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[760265491]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>544</wp:comment_id>
			<wp:comment_author><![CDATA[Hendi Ananta]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hendi.ananta@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.247.51.126]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-15 02:29:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-15 07:29:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how about with twitter feed reader with Get the timeline of user]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[768352538]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>555</wp:comment_id>
			<wp:comment_author><![CDATA[RunningCoder]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[iwalker77@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.43.99.96]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-11 10:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-11 15:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you actually got it running with this code?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>460</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[536650378]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795499344]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>570</wp:comment_id>
			<wp:comment_author><![CDATA[Nandu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nandukishun@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.172.31.135]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-03-26 01:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-03-26 05:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Use this code you will get it exactly what u want..

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class Post {
    public static String twitterHumanFriendlyDate(String dateStr) {
        // parse Twitter date
        SimpleDateFormat dateFormat = new SimpleDateFormat(
                "EEE, d MMM yyyy HH:mm:ss Z", Locale.ENGLISH);
        dateFormat.setLenient(false);
        Date created = null;
        try {
            created = (Date) dateFormat.parse(dateStr);
            //created=(Date) dateFormat.parse(dateStr, null);
        } catch (Exception e) {
            return "Something";
        }
 
        // today
        Date today = new Date();
 
        // how much time since (ms)
        Long duration = today.getTime() - created.getTime();
 
        int second = 1000;
        int minute = second * 60;
        int hour = minute * 60;
        int day = hour * 24;
 
        if (duration &lt; second * 7) {
            return &quot;right now&quot;;
        }
 
        if (duration &lt; minute) {
            int n = (int) Math.floor(duration / second);
            return n + &quot; seconds ago&quot;;
        }
 
        if (duration &lt; minute * 2) {
            return &quot;about 1 minute ago&quot;;
        }
 
        if (duration &lt; hour) {
            int n = (int) Math.floor(duration / minute);
            return n + &quot; minutes ago&quot;;
        }
 
        if (duration &lt; hour * 2) {
            return &quot;about 1 hour ago&quot;;
        }
 
        if (duration  day &amp;&amp; duration &lt; day * 2) {
            return &quot;yesterday&quot;;
        }
 
        if (duration &lt; day * 365) {
            int n = (int) Math.floor(duration / day);
            return n + &quot; days ago&quot;;
        } else {
            return &quot;over a year ago&quot;;
        }
    }

}]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>348</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362259328]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[842475430]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>598</wp:comment_id>
			<wp:comment_author><![CDATA[Nidhi Gupta]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nidhigupta.hippiebrains@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.173.131.187]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-27 03:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-27 07:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi. i used ur code but it gives error in logcat..

08-27 03:27:35.762: W/dalvikvm(3754): threadid=1: thread exiting with uncaught exception (group=0x414c4700)

08-27 03:27:35.822: E/AndroidRuntime(3754): FATAL EXCEPTION: main

08-27 03:27:35.822: E/AndroidRuntime(3754): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.twitter_demo_project/com.twitter_demo_project.TweetsListActivity}: java.lang.RuntimeException: Your content must have a ListView whose id attribute is 'android.R.id.list'

08-27 03:27:35.822: E/AndroidRuntime(3754): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2211)

08-27 03:27:35.822: E/AndroidRuntime(3754): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2261)

08-27 03:27:35.822: E/AndroidRuntime(3754): 	at android.app.ActivityThread.access$600(ActivityThread.java:141)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>460</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1018921081]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[536650378]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>612</wp:comment_id>
			<wp:comment_author><![CDATA[evab]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tolentinoevan_s@yaho.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.197.128.18]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-11 17:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-11 21:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[remove the setcontentview()]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>460</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[536650378]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1280562567]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>613</wp:comment_id>
			<wp:comment_author><![CDATA[andrewdmackenzie]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andrew@mackenzie-serres.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.50.125.158]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-04-12 09:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-04-12 13:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The search described seems to be API v1 at Twitter and now deprecated.
http://search.twitter.com/search.json?q=@android]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1333208828]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>603</wp:comment_id>
			<wp:comment_author><![CDATA[Bob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[good_people@live.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.30.44.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-12 10:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-12 15:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can any of you who could run this project successfully, share thier codes as zip file? Please?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1119674701]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>604</wp:comment_id>
			<wp:comment_author><![CDATA[Bob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[good_people@live.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.30.44.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-12 10:09:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-12 15:09:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I also want a zip file which does work!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>358</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[372787401]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1119676927]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>605</wp:comment_id>
			<wp:comment_author><![CDATA[Bob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[good_people@live.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.30.44.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-14 07:56:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-14 12:56:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know it is two years ago, still asking this question: can you send me your working code to good_people@live.nl ? Please!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>449</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[487705842]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1122744343]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>606</wp:comment_id>
			<wp:comment_author><![CDATA[Bob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[good_people@live.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.30.44.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-14 07:59:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-14 12:59:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know this is 2 years ago but I still ask this question: Can you please me your working codes to good_people@live.nl? thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>394</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433560166]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1122749836]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>607</wp:comment_id>
			<wp:comment_author><![CDATA[Bob]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[good_people@live.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[81.30.44.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-14 08:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-14 13:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, can you please send your working codes? my email is good_people@live.nl. Thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>542</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[760265491]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1122754491]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>626</wp:comment_id>
			<wp:comment_author><![CDATA[linda]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[faizah.021@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.46.129.15]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-11-07 04:34:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-11-07 09:34:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes i need the complete code to run it]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>358</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[372787401]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1681024864]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>627</wp:comment_id>
			<wp:comment_author><![CDATA[Makone Madriles]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[makonemadriles@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.29.56.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-11-11 10:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-11-11 15:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This isn´t found, now the sotion is http://thebestandroide.blogspot.com.es/2014/11/mi-aplicacion-android-con-twitter-feed.html]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1687828130]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>641</wp:comment_id>
			<wp:comment_author><![CDATA[Homepage]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.Ld7QcjKQv.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[87.117.231.143]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-29 06:17:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-29 11:17:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>... [Trackback]</strong>

[...] Informations on that Topic: codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/ [...]

[WORDPRESS HASHCASH] The comment's server IP (87.117.231.143) doesn't match the comment's URL host IP (www.Ld7QcjKQv.com) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422530259.514688;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422530259.5156269;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>639</wp:comment_id>
			<wp:comment_author><![CDATA[Jyotsna Aggrawal]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tomthopper@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[117.199.157.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-16 02:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-16 07:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[vry nice article!

this may also help u :

http://www.mindstick.com/Articles/7aa8b64d-c337-404c-9d30-348c6a387980/Simple%20Search%20implementation%20in%20android]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1795354036]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>640</wp:comment_id>
			<wp:comment_author><![CDATA[luottoa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://luottoa.webnode.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[91.236.75.102]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-18 15:10:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-18 20:10:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>luottoa</strong>

Mark

[WORDPRESS HASHCASH] The comment's server IP (91.236.75.102) doesn't match the comment's URL host IP (193.85.184.38) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_pro_tip]]></wp:meta_key>
				<wp:meta_value><![CDATA[discard]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421611845.3336439;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421611845.3345029;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>633</wp:comment_id>
			<wp:comment_author><![CDATA[twitter search url json - Search Yours]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.searchurs.com/twitter-search-url-json/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-09 08:25:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-09 13:25:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1420809928.0317039;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>634</wp:comment_id>
			<wp:comment_author><![CDATA[twitter api for android | pxlnet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pxlnet.info/twitter-api-for-android/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-12 22:48:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-13 03:48:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421120894.2418029;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421120894.2426159;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>635</wp:comment_id>
			<wp:comment_author><![CDATA[twitter api tutorial python | pxlnet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pxlnet.info/twitter-api-tutorial-python/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-13 05:57:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-13 10:57:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421146632.0857289;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421146632.0865531;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>636</wp:comment_id>
			<wp:comment_author><![CDATA[twitter xml feed | pxlnet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pxlnet.info/twitter-xml-feed/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-13 07:30:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-13 12:30:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421152201.2104051;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421152201.2113061;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>637</wp:comment_id>
			<wp:comment_author><![CDATA[twitter api android | pxlnet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pxlnet.info/twitter-api-android/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-13 14:36:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-13 19:36:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421177796.743356;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421177796.7443011;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>638</wp:comment_id>
			<wp:comment_author><![CDATA[twitter search url json | pxlnet]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.pxlnet.info/twitter-search-url-json/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[162.213.251.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-14 10:17:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-14 15:17:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] » android development tutorial – a simple twitter feed [&#8230;]

[WORDPRESS HASHCASH] The comment's server IP (162.213.251.154) doesn't match the comment's URL host IP (162.213.251.158) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421248654.2932019;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421248654.2941091;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>646</wp:comment_id>
			<wp:comment_author><![CDATA[lån trots skuld hos kronofogden]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://xn--banklnse-e0a.eu/banklan-trots-betalningsanmaerkning/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.1.22.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-12 09:06:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-12 13:06:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>lån trots skuld hos kronofogden</strong>

Tidigare upp till en punkt , att det var knepigt att kalla de ekonomiska situation men det var inte att svart

[WORDPRESS HASHCASH] The comment's server IP (78.1.22.86) doesn't match the comment's URL host IP (81.19.185.210) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1434114400.244817;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1434114400.2460999;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>647</wp:comment_id>
			<wp:comment_author><![CDATA[snabb lån]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://xn--banklnse-e0a.eu/banklan-betalningsanmaerkning/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.143.3.131]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-13 08:30:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-13 12:30:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>snabb lån</strong>

Recensioner pa premier och extra kostnader pa dessa finansieringsalternativ att välja en bra ger dig

[WORDPRESS HASHCASH] The comment's server IP (93.143.3.131) doesn't match the comment's URL host IP (81.19.185.210) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1434198645.0844009;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1434198645.0855529;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Getting Started With node.js and socket.io - Part 2</title>
		<link>http://codehenge.net/blog/2011/05/getting-started-with-node-js-and-socket-io-part-2/</link>
		<pubDate>Sun, 01 May 2011 14:08:22 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="note">
  <strong>Deprecation Notice: Socket.io is now at version v0.7+. The content in this tutorial applies only to Socket.io v0.6. If you are using Socket.io v0.7 or above, see <a href="http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/">this version</a> of the tutorial.</strong>
</div>

<div style="float: left; margin: 0 10px 5px 0;">
  <img class="alignleft" title="node.js" src="http://static.bagcheck.org/e978f11a641cd2e9786512d3278047224217be82_300x300.jpg" alt="" width="250" height="250" />
</div>

<p>In my <a href="http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/" title="Getting Started with node.js and socket.io - Part 1">last post</a> I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I'll be writing a simple http server and some client-side html/javascript to go with it. (Note: I'm assuming readers have a basic understanding of html and javascript)</p>

<p>My goal here is to go step by step, to see each piece fit together. People more experienced with client/server programming concepts may want to skim a little. You can also download the test code created here as files at the bottom of the post.</p>

<p>As a sanity check, make sure node is installed and in your path by typing</p>

<pre><code>node -v
</code></pre>

<p>You should see something like</p>

<p><img class="alignleft size-full wp-image-34" title="Screen shot 2011-04-29 at 11.37.30 PM" src="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png" alt="" width="500" height="28" />    </p>

<p>Now we're ready to write some code. Let's start with the server. Navigate to the directory you want to test out of, and make a file called server_test.js for your test server:  </p>

<pre><code>touch server_test.js
</code></pre>

<p>Open this file in your favorite text editor. Start by defining some variables at the top:  </p>

<pre><code>var http = require('http'),
url = require('url'),
io = require('/usr/local/lib/node/socket.io'),
server;
</code></pre>

<p>We're only including the bare essentials here, enough to start our server, receive requests, and use socket.io (we won't even use socket.io yet, but we'll get to that soon). Now let's define the server  </p>

<pre><code>server = http.createServer(function(req, res){ 
  // server code 
  var path = url.parse(req.url).pathname; 
  switch (path) {
    case '/': 
      res.writeHead(200, {'Content-Type': 'text/html'}); 
      res.write('Hello!\n'); 
      res.end(); 
      break; 
    default: send404(res); 
  } 
}), 

send404 = function(res){ 
  res.writeHead(404); 
  res.write('404'); 
  res.end(); 
}; 

server.listen(8080);
</code></pre>

<p>Ok, check out the block of code. We are creating an http server object by instantiating that server variable we defined above using the http library. We are then defining its behavior by parsing any urls it receives and throwing the path of the url into a switch/case statement. Notice that we could define this behavior based on anything we wanted, not necessarily the url path. Here we have just defined a case for path '/', so our server will only respond to requests to the root path. For these requests, it will send "Hello!" back to the client. For all requests to other paths, we have defined the send404 function, which will return 404 to the client. We will add more path handling as we go on.</p>

<p>Finally, we have told our server to listen on port 8080. Now, fire up the server!  </p>

<pre><code>node server_test.js
</code></pre>

<p><strong>Want to master Node.js?</strong> Try my highly-rated online course <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>. <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">Click here</a> to get 50% off on screencasts, interactive projects, and more!</p>

<p>You won't see any output in the server terminal window, but the server is now running. Bring up a second terminal window to issue some requests to test the server. In a second command window, send a root request to the server with</p>

<pre><code>curl localhost:8080
</code></pre>

<p>You should get a response similar to:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png"><img class="alignleft size-full wp-image-44" title="Screen shot 2011-05-01 at 9.55.45 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png" alt="" width="500" height="29" /></a>  </p>

<p>I'm using this snazzy blue terminal window for client-side commands, and sticking with green-on-black window for server output. Now we know our server can respond. Huzzah! Celebrate as necessary, and then its time to move on to bigger and better things. This server doesn't do much, and our client is just a command line. Let's start by adding some functionality to our server, courtesy of socket.io.</p>

<pre><code>var http = require('http'),
url = require('url'),
fs = require('fs'),
io = require('/usr/local/lib/node/socket.io'),
server;

server = http.createServer(function(req, res){ 
  // your normal server code 
  var path = url.parse(req.url).pathname; 

  switch (path) {
    case '/': 
      res.writeHead(200, {'Content-Type': 'text/html'});
      res.write('&amp;lt;h1&gt;Hello! Try the &lt;a href="/socket-io_test.html"&gt;Socket.io Test&lt;/a&gt;&lt;/h1&gt;');
      res.end(); 
      break; 
    case '/socket-io-test.html': 
      fs.readFile(__dirname + path, function(err, data) { 
        if (err) return send404(res); 
        res.writeHead(200, {'Content-Type': path == 'json.js' ? 'text/javascript' : 'text/html'}) 
        res.write(data, 'utf8'); 
        res.end(); 
      }); 
      break; 
    default: send404(res); 
  } 
}), 

send404 = function(res) { 
  res.writeHead(404); 
  res.write('404'); 
  res.end(); 
};

server.listen(8080); 

// socket.io, I choose you 
var io = io.listen(server); 
io.on('connection', function(client){ 
  // now we have a client object! 
  console.log("Connection accepted."); 
  client.on('message', function(message){ 
    console.log("Recieved message: " + message + " - from client " + client.sessionId); 
  }); 
  client.on('disconnect', function(){ 
    console.log("Connected " + client.sessionId + "terminated."); 
  }); 
});
</code></pre>

<p>We've added quite a few things here, let's take stock. First, I've required the fs library, to access to some file I/O functions. I've also changed the response values to html, since this is an http server, after all. I've also created a path for a socket-io-test.html page, which I'll create next, and put a link to that page in the response for the root path.</p>

<p>Most importantly, I've added some socket.io code, which you can see at the bottom of the page. First, we tell socket.io to listen to our server object. Now it has access to all traffic coming over that server, and can perform tasks based on it. Then I just tell socket.io what to do for the various events it will encounter: 'connection', 'message', and 'disconnect'. In this case, I'm just going to have it send some output to the console logs that we can follow. Clean and simple, right? That's the beauty of socket.io. Now I have to write that client socket-io-test.html page I've lead everyone to believe exists. Ok, I can man up. Here goes:</p>

<pre><code>&lt;h1&gt;Socket.io Test&lt;/h1&gt;
&lt;div&gt;
  &lt;p id="status"&gt;Waiting for input&lt;/p&gt;
&lt;/div&gt;

&lt;button id="connect" onclick="connect()"&gt;Connect&lt;/button&gt;
&lt;button id="disconnect" onclick="disconnect()"&gt;Disconnect&lt;/button&gt; 
&lt;button id="send" onclick="send()"&gt;Send Message&lt;/button&gt;
</code></pre>

<p>Take a look at the html/javascript above. First, on the html side, we just have three buttons and a div. These will perform standard actions from client to server. The div is for displaying status from our socket.io object. In javascript, we've defined a client-side socket.io object, which looks like:</p>

<pre><code>new io.Socket(host, [options]);
</code></pre>

<p>Since we are using localhost, we pass in null for the host parameter. We could also pass in 'localhost' to achieve the same effect. We then define behaviors of the socket object using</p>

<pre><code>socket.on(action, function() )
</code></pre>

<p>For example,</p>

<pre><code>socket.on('connect', function(){ status_update("Connected"); });
</code></pre>

<p>which calls our status_update javascript function when the socket connects. Ok, time for a test. Start your node server again, to get all of the changes we made (shut it down if it was still running, then restart). Check the server command line - since we now have socket.io running on the server, startup output should look something like</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png"><img title="Screen shot 2011-05-01 at 9.18.51 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.18.51-AM.png" alt="" width="500" height="75" /></a>  </p>

<p>Open up a browser and go to <a href="http://localhost:8080">http://localhost:8080</a>.  You will see</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png"><img title="Screen shot 2011-05-01 at 9.50.23 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png" alt="" width="412" height="57" /></a></p>

<p>Theres the link we added to the root path server response of the server - click it to go to the socket.io test page we just finished. You should see:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png"><img title="Screen shot 2011-05-01 at 9.25.59 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png" alt="" width="289" height="161" /></a>  </p>

<p>Now click the Connect button. You will see "Waiting for input" change to "Connected", meaning our socket.on('connect') function was invoked. Go back to the server terminal window:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png"><img title="Screen shot 2011-05-01 at 9.28.40 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.28.40-AM.png" alt="" width="500" height="45" /></a>   We can see that the connection was initiated via websocket, and the server has assigned me a client session id. Since its socket.io, the connection could have been initiated via nay number of technologies, depending on my browser and network situation. Go ahead and try out the Disconnect and Send Message buttons as well, which will also show output on the server</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png"><img title="Screen shot 2011-05-01 at 9.31.22 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.31.22-AM.png" alt="" width="500" height="84" /></a>   The above output is the result of disconnecting our initial session, connecting again (note the new client session id), and sending a message of "Hello Server!".</p>

<p>That's it! Now you have a working socket.io server and a client page to interact with it. We've gone through the basics of client/server communication, and you should be able to expand this example code into something much more functional with a little javascript.  </p>

<p>Download Files:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/06/socket-io-demo.zip">socket-io-demo.zip</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[In my <a title="Getting Started with node.js and socket.io - Part 1" href="http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/">last post</a> I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I'll be writing a simple http server and some client-side html/javascript to go with it. ]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date><![CDATA[2011-05-01 10:08:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-05-01 14:08:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-node-js-and-socket-io-part-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[309749715]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[In my <a title="Getting Started with node.js and socket.io - Part 1" href="http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/">last post</a> I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I'll be writing a simple http server and some client-side html/javascript to go with it. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Getting Started With node.js and socket.io - Part 2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://static.bagcheck.org/e978f11a641cd2e9786512d3278047224217be82_300x300.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://static.bagcheck.org/e978f11a641cd2e9786512d3278047224217be82_300x300.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This is the second post in my two-part tutorial on using node.js and socket.io. In this post I create a simple http server, step by step, as an example application to show off these tools. In the end, the reader following along should have a functioning http server, and understand both the server and client side programming necessary to leverage socket.io and node.js for asynchronous, real-time communication within web applications.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://static.bagcheck.org/e978f11a641cd2e9786512d3278047224217be82_300x300.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://static.bagcheck.org/e978f11a641cd2e9786512d3278047224217be82_300x300.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This is the second post in my two-part tutorial on using node.js and socket.io. In this post I create a simple http server, step by step, as an example application to show off these tools. In the end, the reader following along should have a functioning http server, and understand both the server and client side programming necessary to leverage socket.io and node.js for asynchronous, real-time communication within web applications.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[socket.io, node.js, javascript, programming, development, code, example, tutorial]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>359</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-29 08:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-29 13:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Since the release of Socket.io 0.7,  there are a number of outdated methods in this tutorial. I'm working on an updated one, which should be out very soon.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>356</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[368087791]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[374846737]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>356</wp:comment_id>
			<wp:comment_author><![CDATA[Pwecker]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pwecker@g.risd.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-18 23:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-19 04:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice tutorial! thanks!

but you will want to change line 37 of socket-io-test.html 

from 'new io.Socket' to 'io.connect']]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[368087791]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>274</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-21 01:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-21 01:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm...are you running it through a local web server, or just trying to connect through some sort of share drive to the page?  My first thought it to make sure the script address:



is directed properly for dealing with a non-local resource.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>257</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[276505199]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292115940]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>257</wp:comment_id>
			<wp:comment_author><![CDATA[Spencer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spencer@biggreen.ca]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-03 23:38:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-03 23:38:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually I changed the code, now it works with..

var io = require('socket.io').listen(server);

io.sockets.on('connection', function (socket) {
  socket.on('message', function (message) {console.log("Recieved message: " + message);});
  socket.on('disconnect', function () { });
});

Thanks for the quick reply though


My next task is to get it to work with 'Web Sharing' on my mac.

It works locally on my machine but I'm trying to allow any device on my router to be able to access the web page that connects to the socket.io server. It will go to the webpage and request 'served static /socket.io.js'. But does not connect.

Any thoughts?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>256</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[275556694]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[276505199]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>256</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-03 00:09:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-03 00:09:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When you click the 'Connect' button, do you see this message in the server terminal?:


2 Aug 20:07:57 - Initializing client with transport "websocket"
2 Aug 20:07:57 - Client 7028937395662069 connected
Connection accepted.
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>255</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[274736191]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[275556694]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>255</wp:comment_id>
			<wp:comment_author><![CDATA[Spencer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spencer@biggreen.ca]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-02 17:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-02 17:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I start up the node server_test.js

--------------------------------------------------
Spencers-MacBook-Pro:examples spencer$ node server_test.js
   info  - socket.io started
   debug - served static /socket.io.js
--------------------------------------------------

And open http://localhost:8080
..click the link but the last page with the connection button doesn't seem to do anything

How do I get the page to start sending information?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[274736191]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-22 00:28:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-22 00:28:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ya, I should make a note of the version I was using. Things have changed a bit since npm v0.3.18, which is what I was using when that tutorial was made.

Thanks for the note!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>218</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[231297177]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[231414174]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[Alex Oshchepkov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/profile.php?id=1491961761</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-21 20:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-21 20:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[if you do npm install socket.io is installes socket.io in current_folder/node_modules/socket.io 

so it won't find it in /usr/local/lib/node/socket.io

You didn't mention it in part1]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[231297177]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[Codehenge &raquo; Blog Archive &raquo; Getting Started With node.js and socket.io &#8211; Part 1]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-05-25 12:16:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-05-25 16:16:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Part 2 is now available!   Share and Enjoy: [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306340163.0435";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306355597.4323";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>379</wp:comment_id>
			<wp:comment_author><![CDATA[Getting Started With node.js and socket.io (v0.7+) &#8211; Part 2 | Codehenge]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-18 14:08:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-18 19:08:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] TweetVersion Note: This tutorial applies to Socket.io v0.7+. If you are using Socket.io v0.6, see this version of the tutorial [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1324235300.242";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1324236023.7745";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>435</wp:comment_id>
			<wp:comment_author><![CDATA[Halcyon G3]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[halcyon.g3@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[135.11.3.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-22 01:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-22 05:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I tried running your code. But my client doesn't connect to the server. The text that is displayed on the console is : socket.io started.What could be wrong?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[473277923]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>436</wp:comment_id>
			<wp:comment_author><![CDATA[Halcyon G3]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[halcyon.g3@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[135.11.3.4]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-22 01:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-22 05:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get this on the console every time i run the .html page : served static content /socket.io.js]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[473281106]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Website Update</title>
		<link>http://codehenge.net/blog/2011/06/website-update/</link>
		<pubDate>Sun, 05 Jun 2011 14:02:41 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[Just a quick note - I am in the process of updating the site based on reader feedback and some layout issues i've been having. The new layout should limit scrolling within code blocks, and hopefully provide a better reader experience. 

I'm interested in any feedback readers have on these changes, and thanks for your patience as I worked to fix these issues!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date><![CDATA[2011-06-05 10:02:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-05 14:02:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[website-update]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[322815823]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>251</wp:comment_id>
			<wp:comment_author><![CDATA[William Curtis]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[william.curtis@comcast.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-22 00:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-22 00:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In getView()  the line "LayoutInflater vi = (LayoutInflater)getSystemService(Context.yadayada

where is this method getSystemService in the demo code?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[260202520]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Android Development Tutorial: Asynchronous Lazy Loading and Caching of ListView Images</title>
		<link>http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images/</link>
		<pubDate>Thu, 16 Jun 2011 02:19:58 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=82</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In my</p>

<p><a href="http://codehenge.net/blog/2011/05/android-programming-tutorial-a-simple-twitter-feed-reader/">last post</a> I created a simple Android Twitter feed reader based on the <a href="http://search.twitter.com/api/">Twitter Search API</a>, demonstrating an application of custom ListView layouts and integration of internet data sources. Any readers who tried out the code would immediately notice that, though functional, the implementation produced significant lag in the UI when scrolling through the tweets. This is because the getView() method of a ListView adapter can be called one or more times each time a ListView item comes into view - we are given no guarantees on when or how this method will be called. Therefore, downloading the Twitter profile images within getView() was extremely inefficient, as each image was being downloaded by the UI thread as the ListView item came into view, and was usually downloaded repeatedly after that. Today I'll refactor the Twitter example to add asynchronous lazy loading and caching of images (Twitter profile images, in our case). Some of the code included has been based on the excellent</p>

<p><a href="https://github.com/thest1/LazyList">demonstration</a> provided by Github user <a href="https://github.com/thest1">thest1</a>. Through this example, I'll demonstrate asynchronous operations in Android, using local storage for caching data, ViewHolders, and a few other advanced techniques for optimizing app performance. First, let's recall where we left off last time. We were using a custom ArrayAdapter to set the view components of each item in our custom ListView:</p>

<div>
<code lang="java">
public class TweetItemAdapter extends ArrayAdapter<Tweet> {
  private ArrayList<Tweet> tweets;

  public TweetItemAdapter(Context context, int textViewResourceId, 
                                          ArrayList<Tweet> tweets) {
    super(context, textViewResourceId, tweets);
    this.tweets = tweets;
  }

  @Override
  public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView;
    if (v == null) {
      LayoutInflater vi = 
         (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
      v = vi.inflate(R.layout.listitem, null);
    }

    Tweet tweet = tweets.get(position);
    if (tweet != null) {
      TextView username = (TextView) v.findViewById(R.id.username);
      TextView message = (TextView) v.findViewById(R.id.message);
      ImageView image = (ImageView) v.findViewById(R.id.avatar);

      if (username != null) {
        username.setText(tweet.username);
      }

      if(message != null) {
        message.setText(tweet.message);
      }

      if(image != null) {
        image.setImageBitmap(getBitmap(tweet.image_url));
      }
    }
    return v;
  } 
}
</code></div>

<p>Each time getView() was called, a method getBitmap(url) was initiated, which reached out to the web to pull down the image required:</p>

<div>
<code lang="java">
public Bitmap getBitmap(String bitmapUrl) {
  try {
    URL url = new URL(bitmapUrl);
    return BitmapFactory.decodeStream(url.openConnection().getInputStream()); 
  }
  catch(Exception ex) {return null;}
}
</code></div>

<p>Since all of this is happening on the UI thread, massive UI lag resulted, which would create a poor user experience for a production app. The root problems are:</p>

<ol>
<li>Images are being downloaded from the UI thread</li>
<li>Images are being downloaded many, many more times than they need to be, since getView() is called as often as Android feels like calling it</li>
</ol>

<p>So, what can we do?</p>

<p>First, Problem #1. The obvious solution is to download the image and set it to the ImageView in a separate thread. Easy, right? This is the first thing every developer tries when they encounter this problem. Unfortunately, its not so simple. The Android UI is absolutely, completely,</p>

<p><a href="http://developer.android.com/resources/articles/painless-threading.html">not thread-safe</a>. So, calling the ImageView in a worker thread could lead to your <a href="http://www.kongregate.com/games/mike_id/doom-1">DOOM</a>. Ok, ok...it could lead to weird bugs that are tough to track down. Either way, undesirable. Additionally, if we have a lot of tweets in our ListView, we may end up downloading a large number of profile images that our user never scrolls down to see, wasting network data usage and battery power, two things we want to minimize use of in mobile apps. The best solution to this issue is to lazy load the images in a separate thread, while placing them in our ImageViews with the main UI thread. A good solution is to cache the images somewhere the UI thread can access them, and let the UI thread know when they are available for display. This approach has the added benefit of addressing Problem #2, as well as our inefficient network/battery use, by downloading each image once and storing it in a local cache.</p>

<p>To start, we'll be adding a class to manage both our local image cache and a download queue for the images. Let's call this class ImageManager, and get it started:</p>

<div>
<code lang="java">
public class ImageManager { 
  private HashMap<String, Bitmap> imageMap = new HashMap<String, Bitmap>();
  private File cacheDir;

  public ImageManager(Context context) {
    // Make background thread low priority, to avoid affecting UI performance
    imageLoaderThread.setPriority(Thread.NORM_PRIORITY-1);

    // Find the dir to save cached images
    String sdState = android.os.Environment.getExternalStorageState();
    if (sdState.equals(android.os.Environment.MEDIA_MOUNTED)) {
      File sdDir = android.os.Environment.getExternalStorageDirectory();        
      cacheDir = new File(sdDir,"data/codehenge");
    }
    else
      cacheDir = context.getCacheDir();

    if(!cacheDir.exists())
      cacheDir.mkdirs();
  } 
} 
</code></div>

<p>I've added the first things we know we will need, which are a map (imageMap) to store images for display, and reference to the directory where the longer-term image cache will be stored. In the constructor, find this directory by querying the device to see if external storage is mounted, and if not, by getting the default cache location. If we are using external storage (e.g. an SD card), we create a directory called "data/codehenge" for our app's cache.</p>

<p>Now we will need a few classes to manage a proper queue of images for download. For each image put into the queue, we need to know the URL to find it at, and we will eventually need to know the ImageView to put it in. Here'a an ImageRef class to take care of that:</p>

<div>
<code lang="java">
private class ImageRef {
  public String url;
  public ImageView imageView;

  public ImageRef(String u, ImageView i) {
    url=u;
    imageView=i;
  }
}
</code> 
</div>

<p>I'm making this a private class in my ImageManager class, but you could separate it out if you wanted to. For the actual queue, I'm using a stack of ImageRef objects. However, I'm wrapping this in its own class so I can add extra functionality. Because we know getView() can be called arbitrarily and often, for now I'll add the ability to clear all ImageRef objects from the queue that are pointing to a given ImageView, so we don't get too bottled up.</p>

<div>
<code lang="java">
private class ImageQueue {
  private Stack<ImageRef> imageRefs = new Stack<ImageRef>();

  //removes all instances of this ImageView
  public void Clean(ImageView view) {
    for(int i = 0 ;i < imageRefs.size();) {
      if(imageRefs.get(i).imageView == view)
        imageRefs.remove(i);
      else ++i;
    }
  }
}
</code> 
</div>

<p>We need a way to add images to the queue, so let's write a small queueImage() method:</p>

<div>
<code lang="java">
private void queueImage(String url, ImageView imageView) {
  // This ImageView might have been used for other images, so we clear 
  // the queue of old tasks before starting.
  imageQueue.Clean(imageView);
  ImageRef p=new ImageRef(url, imageView);

  synchronized(imageQueue.imageRefs) {
    imageQueue.imageRefs.push(p);
    imageQueue.imageRefs.notifyAll();
  }

  // Start thread if it's not started yet
  if(imageLoaderThread.getState() == Thread.State.NEW)
    imageLoaderThread.start();
}
</code> 
</div>

<p>Using the method above we're able to push an imageRef for an image into the queue (remember to lock this action!) and start the background imageLoaderThread, if it isn't already started.</p>

<p>Now we're ready to start some asynchronous coding. Basically, we need a thread to run in the background, watch the queue, and get images (either from our semi-persistent cache, or by downloading them) as they are queued. For this, let's create an ImageQueueManager class:</p>

<div>
<code lang="java">
private class ImageQueueManager implements Runnable {
  @Override
  public void run() {
    try {
      while(true) {
        // Thread waits until there are images in the 
        // queue to be retrieved
        if(imageQueue.imageRefs.size() == 0) {
          synchronized(imageQueue.imageRefs) {
            imageQueue.imageRefs.wait();
          }
        }

        // When we have images to be loaded
        if(imageQueue.imageRefs.size() != 0) {
          ImageRef imageToLoad;

          synchronized(imageQueue.imageRefs) {
            imageToLoad = imageQueue.imageRefs.pop();
          }

          Bitmap bmp = getBitmap(imageToLoad.url);
          imageMap.put(imageToLoad.url, bmp);

          // TODO: Display image in ListView on UI thread

        }
        
        if(Thread.interrupted())
          break;
      }
    } catch (InterruptedException e) {}
  }
}
</code></div>

<p>This is a big one, but not too complex. Basically, this class is meant to run as a single background thread, so its implementing the Runnable interface and overriding its run() method. When run, this thread process will loop until interrupted, waiting for an image to show up in the queue. When an image is queued, it pops each imageRef from the stack in turn and calls getBitmap() (which we have yet to define) to get an Bitmap object, puts the image in our map, and will, once we define it, fire off a process on the UI thread to display the image in the ListView. I've put a TODO comment here, we'll come back to it in a little bit.</p>

<p>For now, we know what getBitmap() needs to do, so let's define it:</p>

<div>
<code lang="java">
private Bitmap getBitmap(String url) {
  String filename = String.valueOf(url.hashCode());
  File f = new File(cacheDir, filename);

  // Is the bitmap in our cache?
  Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());
  if(bitmap != null) return bitmap;

  // Nope, have to download it
  try {
    bitmap = 
      BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream());
    // save bitmap to cache for later
    writeFile(bitmap, f);

    return bitmap;
  } catch (Exception ex) { ex.printStackTrace(); return null; } 
}

private void writeFile(Bitmap bmp, File f) {
  FileOutputStream out = null;

  try { 
    out = new FileOutputStream(f); 
    bmp.compress(Bitmap.CompressFormat.PNG, 80, out); 
  } catch (Exception e) { e.printStackTrace(); } 
  finally { 
    try { 
      if (out != null ) out.close(); 
    } catch(Exception ex) {}
  }
}
</code></div>

<p>If you remember my last tutorial, some of this will look familiar. Namely, I have taken the BitmapFactory code straight out of the custom TweetItemAdapter and dropped it here, with some added functionality around it. Now, if we have the bitmap file cached locally, get it from there. If not, we use BitmapFactory to download it, and write it to the cache for next time. Note that in the writeFile() method we are compressing the bitmap into PNG format at 80% quality to save storage space and time. You can tweak this however you like, and check out the performance difference for your application.</p>

<p>We're now done with ImageManager, and can move on to integrating it with our UI components.</p>

<p>There are two paths we can take to display our image. First, if we have it sitting in our cache and available when getView() asks for it, we can just display it and move on. Alternatively, if we have to queue the download of the image, we need to be able to jump back into the UI thread as soon as the image is available to push it into view. Starting with the first path, let's look at an updated version of TweetItemAdapter:</p>

<div>
<code lang="java">
public class TweetItemAdapter extends ArrayAdapter<Tweet> {
  private ArrayList<Tweet> tweets;
  private Activity activity;
  private static LayoutInflater inflater = null;
  public ImageManager imageManager;

  public TweetItemAdapter(Activity a, int textViewResourceId, 
                                          ArrayList<Tweet> tweets) {
    super(a, textViewResourceId, tweets);
    this.tweets = tweets;
    activity = a;

    imageManager = 
      new ImageManager(activity.getApplicationContext());
  }

  public static class ViewHolder{ 
    public TextView username;
    public TextView message;
    public ImageView image;
  }

  @Override public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView; 
    ViewHolder holder; 
    
    if (v == null) { 
      LayoutInflater vi = (LayoutInflater) activity.getSystemService(Context.LAYOUT\_INFLATER\_SERVICE);
      v = vi.inflate(R.layout.listitem, null);
      holder = new ViewHolder();
      holder.username = (TextView) v.findViewById(R.id.username);
      holder.message = (TextView) v.findViewById(R.id.message);
      holder.image = (ImageView) v.findViewById(R.id.avatar);
      v.setTag(holder); 
    } else holder=(ViewHolder)v.getTag();

    final Tweet tweet = tweets.get(position);
    
    if (tweet != null) {
      holder.username.setText(tweet.username);
      holder.message.setText(tweet.message);
      holder.image.setTag(tweet.image_url);
      imageManager.displayImage(tweet.image_url, activity, holder.image);
    }
    return v;
  } 
}
</code></div>

<p>There are a few changes to this class since<a href="">last time</a>, but nothing severe. Out adapter now needs an instance of our ImageManager, and it also needs a reference to its Activity object, which you'll recall has to be passed to the ImageManager when it displays an image. We've also introduced the usage of a ViewHolder, which is a handy tool that optimizes performance a bit. Using a ViewHolder basically means we don't have to call findViewById for every single view, every time we want it, which adds up to a decent amount of computational savings. For some more information on ViewHolders and why you want to use them, check out <a href="http://www.screaming-penguin.com/node/7767">this post</a> by Charlie Collins. You'll also notice that when initially populating the View for a given Tweet, I now set the tag of the ImageView to the url of the image to be displayed. We'll use this later to verify that we are setting the image in the correct ImageView. Look at the end of getView() and you'll see where we address the "display the image immediately is possible" path. When we have both a Tweet object and a View that are not null, we call a method called displayImage() through the ImageManager:</p>

<p><code lang="java">
public void displayImage(String url, Activity activity, ImageView imageView) {
  if(imageMap.containsKey(url))
    imageView.setImageBitmap(imageMap.get(url));
  else {
    queueImage(url, imageView);
    imageView.setImageResource(R.drawable.icon);
  }
}
</code> This is the place where we set the bitmap immediately if it is in our imageMap, or push it into our queue and instead put a placeholder there. The placeholder, R.drawable.icon, is a default Android icon you will probably find automatically included in your project. The reason for the placeholder is that we expect this method to be invoked anytime getView() is called, whether or not the image has been downloaded yet. So, if it hasn't, the placeholder will be displayed until we have a proper Twitter avatar. If you like, you can make this placeholder a different image, a blank image, or nothing at all.</p>

<p>Now we need address our second path by writing some code to display the bitmap in the ListView, using the UI thread. As before, this is easily implemented as a class using the Runnable interface, like so:</p>

<div>
<code lang="java">
//Used to display bitmap in the UI thread
private class BitmapDisplayer implements Runnable {
  Bitmap bitmap;
  ImageView imageView;

  public BitmapDisplayer(Bitmap b, ImageView i) {
    bitmap=b;
    imageView=i;
  }

  public void run() {
    if(bitmap != null)
      imageView.setImageBitmap(bitmap);
    else
      imageView.setImageResource(R.drawable.icon);
  }
}
</code> 
</div>

<p>Now we have a class that can be run on a thread, that is instantiated with a bitmap and an ImageView it needs to be displayed in, whose run() method sets in the ImageView or replaces it with a placeholder image. Let's add this into the space we left for it in ImageQueueManager:</p>

<div>
<code lang="java">
private class ImageQueueManager implements Runnable {
  @Override
  public void run() {
    try {
      while(true) {
        // Thread waits until there are images in the 
        // queue to be retrieved
        if(imageQueue.imageRefs.size() == 0) {
          synchronized(imageQueue.imageRefs) {
            imageQueue.imageRefs.wait();
          }
        }

        // When we have images to be loaded
        if(imageQueue.imageRefs.size() != 0) {
          ImageRef imageToLoad;

          synchronized(imageQueue.imageRefs) {
            imageToLoad = imageQueue.imageRefs.pop();
          }

          Bitmap bmp = getBitmap(imageToLoad.url);
          imageMap.put(imageToLoad.url, bmp);
          Object tag = imageToLoad.imageView.getTag();

          // Make sure we have the right view - thread safety defender
          if(tag != null && ((String)tag).equals(imageToLoad.url)) {
            BitmapDisplayer bmpDisplayer = 
              new BitmapDisplayer(bmp, imageToLoad.imageView);

            Activity a = 
              (Activity)imageToLoad.imageView.getContext();

            a.runOnUiThread(bmpDisplayer);
          }
        }

        if(Thread.interrupted())
          break;
      }
    } catch (InterruptedException e) {}
  } 
} 
</code></div>

<p>The ImageQueueManager class is now complete. Remember, when we have images in the queue, we get the bitmap from cache or download, then put it in our map. Now we continue by checking the tag to verify the bitmap we have belongs in this ImageView, create a new BitmapDisplayer object, get the activity from the ImageView, and use it to run the BitmapDisplayer operations in the UI thread. Notice the check of the ImageView tag: This allows us to be absolutely certain that we are putting the bitmap we have into the ImageView that wants it, which is basically our last stand against the inexplicable behavior of ListViews and getView().</p>

<p>Last, but not least, is our Activity class, which remains basically unchanged from the previous tutorial. Here it is, for the sake of completeness:</p>

<div>
<code lang="java">
public class Example extends Activity {

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    ArrayList<Tweet> tweets = getTweets("android", 1);

    ListView listView = (ListView) findViewById(R.id.ListViewId);
    listView.setAdapter(new TweetItemAdapter(this, R.layout.listitem, tweets));
  }

  public ArrayList<Tweet> getTweets(String searchTerm, int page) { 
    String searchUrl = "http://search.twitter.com/search.json?q=@" + searchTerm + "&rpp=25&page=" + page;

    ArrayList<Tweet> tweets = new ArrayList<Tweet>();
    
    HttpClient client = new  DefaultHttpClient();
    HttpGet get = new HttpGet(searchUrl);
    
    ResponseHandler<String> responseHandler = new BasicResponseHandler();
    
    String responseBody = null;
    try {
      responseBody = client.execute(get, responseHandler);
    } catch(Exception ex) {
      ex.printStackTrace();
    }
    
    JSONObject jsonObject = null;
    JSONParser parser=new JSONParser();
    
    try {
      Object obj = parser.parse(responseBody);
      jsonObject=(JSONObject)obj;
    
    } catch(Exception ex) {
      Log.v("TEST","Exception: " + ex.getMessage());
    }
    
    JSONArray arr = null;
    
    try {
      Object j = jsonObject.get("results");
      arr = (JSONArray)j;
    } catch(Exception ex) {
      Log.v("TEST","Exception: " + ex.getMessage());
    }
    
    for(Object t : arr) {
      Tweet tweet = new Tweet(
        ((JSONObject)t).get("from_user").toString(),
        ((JSONObject)t).get("text").toString(),
        ((JSONObject)t).get("profile_image_url").toString()
      );
      tweets.add(tweet);
    }
    
    return tweets;
  }

  /** Classes **/

  public class Tweet { 
    public String username; public String message; public String image_url;

    public Tweet(String username, String message, String url) {
      this.username = username;
      this.message = message;
      this.image_url = url;
    }
  } 
} 
</code></div>

<p>And we're done! The code is complete, and ready to run. You will see a notable increase in UI responsiveness, and should really not notice any lag at all unless you swipe through a large list at warp speed.</p>

<p>I've put the full project from this tutorial up on</p>

<p><a href="https://github.com/cacois/TweetView">Github</a>, so go ahead and grab it, fork it, try it out for yourself. Happy coding!</p>

<p><strong>Get 50% off my Node.js course <a href="http://search.twitter.com/api/">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[In my last post I created a simple Android Twitter feed reader based on the Twitter Search API, demonstrating an application of custom ListView layouts and integration of internet data sources. 

Today I'll refactor the Twitter example to add asynchronous lazy loading and caching of images (Twitter profile images, in our case). ]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date><![CDATA[2011-06-15 22:19:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-16 02:19:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="listview"><![CDATA[listview]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[twitter]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, bitmap, image, bitmapfactory, twitter, lazy loading, asynchronous, viewholder, optimization, ui, cache, caching]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Today I'll rebuild the Twitter example to add asynchronous lazy loading and caching of images (Twitter profile images, in our case). Through this example, I'll demonstrate asynchronous operations in Android, using local storage for caching data, ViewHolders, and a few other advanced techniques for optimizing app performance. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Android Development Tutorial: Asynchronous Lazy Loading and Caching of ListView Images]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Today I'll rebuild the Twitter example to add asynchronous lazy loading and caching of images (Twitter profile images, in our case). Through this example, I'll demonstrate asynchronous operations in Android, using local storage for caching data, ViewHolders, and a few other advanced techniques for optimizing app performance. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, bitmap, image, bitmapfactory, twitter, lazy loading, asynchronous, viewholder, optimization, ui, ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[86]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[333521559]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[gr_overridden]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/android-logo_lazy.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Today I'll rebuild the Twitter example to add asynchronous lazy loading and caching of images (Twitter profile images, in our case). Through this example, I'll demonstrate asynchronous operations in Android, using local storage for caching data, ViewHolders, and a few other advanced techniques for optimizing app performance. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, listview, bitmap, image, bitmapfactory, twitter, lazy loading, asynchronous, viewholder, optimization, ui, ]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>357</wp:comment_id>
			<wp:comment_author><![CDATA[stephen]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dgenerationb4u@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-22 02:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-22 07:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i m getting an error on jsonparser
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[369911357]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>354</wp:comment_id>
			<wp:comment_author><![CDATA[Aaa]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aaa@bcd.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-18 09:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-18 14:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you please post the other changes you had to do to make it work ?
Thanks !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>347</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362129124]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[367554528]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>355</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan R]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ryan.ram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-18 10:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-18 15:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I replaced the HashMap with the one used in the Progress_bar branch.

Basically just use:
private HashMap imageMap = new HashMap();

You will need to fix a few spots in the code where a SoftReference is passed instead of a bitmap. Check out the Progress_bar sample to get it to work.

Not sure what disadvantages this has, but I've been testing my code all week and it seems to be fine.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>354</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[367554528]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[367595345]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>353</wp:comment_id>
			<wp:comment_author><![CDATA[Juan Diego Pérez]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pekechis@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://profiles.google.com/pekechis</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-15 19:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-16 00:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it's not the tutorial...such a great, clean and elegant code...thank you so much]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[364108780]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>351</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sohan_al@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-14 04:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-14 09:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great Tutorial.. Does this code handle ListView's  recycled views properly? 
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362709249]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>349</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-13 17:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 22:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you may be right - but i'm not completely sure why the softreferences would fix it, either. I can't reproduce the behavior in either branch. If you find out any information on what was gong on and what changes with softreferences, I'd be very interested to hear about it!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>347</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362129124]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362510416]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>347</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan R.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ryan.ram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-12 21:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 02:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm, this bug does not show up when I use the progress_bar branch. I think it has something to do with the SoftReference in the hashmap within ImageManager.java...

Master:
private HashMap&lt;String, SoftReference&gt; imageMap = new HashMap&lt;String, SoftReference&gt;();

vs.

Progress_bar branch
private HashMap imageMap = new HashMap();

Using the latter, the images do not disappear when scrolling. Not sure why?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>346</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362125451]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362129124]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>346</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan R.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ryan.ram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-12 21:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-13 02:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey guys I am encountering a strange bug where the images load fine but when I scroll around some pictures disappear and are gone. I'm running the code unaltered from the github. Check out this screen here: http://dl.dropbox.com/u/3679180/listasyncbug.png]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362125451]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>339</wp:comment_id>
			<wp:comment_author><![CDATA[Durgeshpathakk]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[durgeshpathakk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-10 06:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-10 11:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[  I AM GETTING THIS ERRO  Can only iterate over an array or an instance of java.lang.Iterable pls help]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[359972345]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>335</wp:comment_id>
			<wp:comment_author><![CDATA[Adam]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[geestring_3@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-03 16:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-03 20:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes you are right. I had to add the permission for external storage Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>333</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[352094652]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[355078916]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>334</wp:comment_id>
			<wp:comment_author><![CDATA[Sarinaditya]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sarinaditya@rediff.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-03 00:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-03 04:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes good tutorial.Loved the the other tutorials too]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[354419503]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>332</wp:comment_id>
			<wp:comment_author><![CDATA[Adam]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[geestring_3@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-31 00:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-31 04:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is this actually working for people? In my implementation images load, then when I scroll down and scroll back up they're gone. And some images don't load at all]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[351762619]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>333</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-31 13:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-31 17:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you tried the project from Github? Does it exhibit the same behavior?  Sounds like you may not have the tag being set properly, or your app doesn't have appropriate filesystem permissions for caching...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>332</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[351762619]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[352094652]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>331</wp:comment_id>
			<wp:comment_author><![CDATA[Carl]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rice.carl@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-30 14:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-30 18:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was in the same boat, made it a singleton right off the bat. Only issue is I get crashes after about 120 - 200 images. Probably needs more edits to be a proper singleton implementation, free up its memory.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>262</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281057885]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[350788065]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>329</wp:comment_id>
			<wp:comment_author><![CDATA[Gustavo Uach]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gustavo.uach@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-27 23:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-28 03:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[holy sh1t, great article man..... just love it]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[347606855]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>330</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tiran133@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-28 12:11:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-28 16:11:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, first thanks for that arcticle! Helped me a lot.
But I having a problem with it.
If you scroll fast through the list, there is a point were no image at all are displayed.
And after that even if you scroll normal or slow no image gets loaded again.
The only thing that help is to remove the image from the imagemap after setting it to the view.
But even then this problem remains but not so often.

Anyone expiricend this problem to?
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[348291523]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>325</wp:comment_id>
			<wp:comment_author><![CDATA[Dann Rees]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dann.rees@btinternet.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-26 07:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-26 11:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there, great article. However for some reason getView() isn't getting called for me and so the list appears empty. Any suggestions? Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345241420]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>326</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-26 08:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-26 12:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[getView() isn't being called? That has to be some sort of problem with your adapter. Are you using the github code, or is this from your own implementation?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>325</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345241420]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345447674]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>327</wp:comment_id>
			<wp:comment_author><![CDATA[Dann Rees]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dann.rees@btinternet.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-26 08:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-26 12:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, I'm using pretty much the same code. Just changed slightly...

public class JobItemAdapter extends ArrayAdapter {
		private ArrayList jobs;
		private Activity activity;
		public ImageManager imageManager;

		public JobItemAdapter(Activity a, int textViewResourceId, ArrayList thejobs) {
			super(a, textViewResourceId, thejobs);
			this.jobs = thejobs;
			activity = a;
			
			imageManager = 
				new ImageManager(activity.getApplicationContext());
		}

		
		@Override
		public int getCount()
		{
			Log.v("Dann","getCount: "+jobs.size());
			return jobs.size();
			
		}
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			ViewHolder holder;
			Log.v("Dann","getView: "+v);
			if (v == null) {		
				LayoutInflater vi = 
					(LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
				v = vi.inflate(R.layout.list_item, null);
				holder = new ViewHolder();
				holder.jobtitle = (TextView) v.findViewById(R.id.txtJobTitle);
				holder.location = (TextView) v.findViewById(R.id.txtLocation);
				holder.image = (ImageView) v.findViewById(R.id.imageView1);
				v.setTag(holder);
			}
			else
				holder=(ViewHolder)v.getTag();

			final Job thejob = jobs.get(position);
			if (thejob != null) {
				holder.jobtitle.setText(Job.jobtitle);
				holder.location.setText(Job.location);
				holder.image.setTag(thejob.image_url);
				imageManager.displayImage(thejob.image_url, activity, holder.image);
			}
			return v;
		}]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>326</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345447674]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[345470956]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>324</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ryan.ram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-24 02:34:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-24 06:34:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow that was my issue, and I just happened to stumble upon your comment! Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>270</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289032047]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[342296150]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>322</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-19 10:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-19 14:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi This is nice tutorial .
I have separated the functionality of file cache from the ImageManager class. For this I have developed new class i.e. FileCache class and create object of same class in ImageManager class to access this funtionality.
 here I have to implement the functionality like to download the images from the server . first check if  file is in SD-card or not? if yes, then check the last-modified date of file(image file) in SD-card and  compare it with server last-updated file date using timestamp. If the server updated file is newer than the SD-card file then download it from server to SD-card and display else return the SD-card file . Because of this it's  increase the speed to display the file in list view. 
I have some problem with this i.e. to implement the HEAD method to get the meta-information (i.e. "last-modified" date and "modifiedSince")from the server of particular file. could you help how to implement this class.
here is my code:

public class FileCache {
		
	File sdDir;
	
	public FileChache(Activity  activity)
	{

		String sdState = android.os.Environment.getExternalStorageState();
		
		 if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED))	
		 {
			 sdDir=new File(android.os.Environment.getExternalStorageDirectory(),"sa");
		 }
		else
				 sdDir=activity.getCacheDir();
			 	
			 	if(!sdDir.exists())
					sdDir.mkdirs();		 
		}
	

	public File getFile(String url)
	{
            String filename= String.valueOf(url.hashCode());		
		System.out.println("The File name is:"+filename);
                File f= new File(sdDir,filename);
		if(f.exists())
		{		
			//Check the last update of file
			

try
			{
				
				HttpClient client= new DefaultHttpClient();
				//HttpGet get = new HttpGet(url);
				HttpHead method = new HttpHead(url);
				HttpResponse response= client.execute(method);
								
				Header[] s=response.getAllHeaders();
				System.out.println("THe header from the httpclient:");
				for(int i=0; i &lt; s.length; i++){
				Header hd = s[i];
							
				System.out.println(&quot;Header Name: &quot;+hd.getName()
						+&quot;       &quot;+&quot; Header Value: &quot;+ hd.getValue());
				}

// here I am getting problem i.e. to implement the HEAD  method to get &quot;last-modified&quot; date or &quot;modified-since&quot;

how to get that header date into date format for comparison.
please have a look and reply me for the same. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[339141019]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>318</wp:comment_id>
			<wp:comment_author><![CDATA[Anton westbom]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anton.westbom@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-06 02:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-06 06:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great stuff worked like a charm with the manager and an imageButton only thing I missed was to set the Tag of the imageButton to the url.
thank you!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[327827293]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>309</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-17 01:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-17 01:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good idea!  This will allow the app to update profile pics when they are changed, without re-downloading pics every time. It would be fantastic if you would fork the <a href="https://github.com/cacois/TweetView" rel="nofollow">github project</a>, add this feature, and issue a pull request. I promise I'll accept the new feature quickly!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>306</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313148397]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313621609]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>306</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-16 13:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-16 13:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How To Download a File Only If It Has Been Updated in this example.

For that I have created Separate FileCache class &amp; get all the file  functionality from ImageManager class . it's work properly .

I have to do following functionality with this:

1. Create a HTTP HEAD request.
2. Read the "Last-Modified" header and convert the string 
3. Read the last modification timestamp of the local file.
4. Compare the two timstamps.
5. Download the file from the server if it has been updated.
6.Save the downloaded file.
7. Set the last modification timestamp of the file to match the "Last-Modified" header on the server.

please reply]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[313148397]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>303</wp:comment_id>
			<wp:comment_author><![CDATA[Evan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[evan.eustace@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-14 01:31:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-14 01:31:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Done, also converted to use SoftReference in the cache map, as I was getting OOM errors with an endless scrolling adapter until I changed that.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>302</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[308757406]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[309077734]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>302</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-13 17:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-13 17:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good idea!  If you have time, toss that in a fork of the Github project and issue a pull request. That's a good thing to add to the baseline demo for other devs to use.

Thanks for the improvement!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>301</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[308695139]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[308757406]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>301</wp:comment_id>
			<wp:comment_author><![CDATA[Evan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[evan.eustace@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-13 16:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-13 16:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff, but there's a potential for wasting memory with the imageMap.
You don't need to keep the reference to the object in imageMap after you add it to the imageview. I have an endless scrolling adapter, and the map can just grow and grow.

I just added a line to remove the Bitmap from the map after it was added to the ImageView like so:

public void displayImage(String url, Activity activity, ImageView imageView) {
  if(imageMap.containsKey(url))
    imageView.setImageBitmap(imageMap.get(url));
    imageMap.remove(url); // we don't need to keep this on the map
  else {
    queueImage(url, imageView);
    imageView.setImageResource(R.drawable.icon);
  }
}

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[308695139]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>299</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 12:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 12:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[could you tell me how this line is works and how to get the value of activity class

Activity a = (Activity)imageToLoad.imageView.getContext();]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>227</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238069573]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304147977]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>298</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 12:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 12:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[there are 2 more XMK files of needed reply me
thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>295</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304111153]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304131184]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>297</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 12:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 12:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[there are 2 more xml files if needed I will send you
thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>287</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301602041]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304130955]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>296</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 11:59:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 11:59:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I getting the tag value , but on the next line I getting error again in ImageQueueManager class:

Activity a = (Activity)imageToLoad.imageView.getContext(); 

I think , I have remove activity object from the display() method , is it write?
here is my code:
imgdownloader.displayImage(country.getUri(), iv);

This is my getView:

public View getView(int position, View convertView, ViewGroup parent) {


if(convertView == null)
convertView = mInflater.inflate(mViewResourceId, null);

Country country = getItem(position);

ImageView iv = (ImageView)convertView.findViewById(R.id.option_icon);



TextView tv = (TextView)convertView.findViewById(R.id.option_text);

tv.setText(country.getName());

imgdownloader.displayImage(country.getUri(), iv);

return convertView;

}



how the Activity is set here: 

Activity a = (Activity)imageToLoad.imageView.getContext();


package com.test;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ListActivity;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.os.Bundle;

public class AdvancedListViewActivity extends ListActivity{
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.main1);

Context ctx = getApplicationContext();
Resources res = ctx.getResources();

MyImageLoader myimageloader;

Bundle bun= this.getIntent().getExtras();
String name=bun.getString("name1");
int icn=bun.getInt("name2");

String url="http://farm7.static.flickr.com...";
List countryList=new ArrayList();	

Country cntrynew =new Country();

cntrynew.setUri(url);
cntrynew.setName(name);	
countryList.add(cntrynew);



String[] countryNames = res.getStringArray(R.array.country_names);
String[] countryFlagUrls = res.getStringArray(R.array.nameurl);

for(int ii=0; ii&lt;countrynames.length;ii++){	
Country cntry =new Country();

cntry.setUri(countryFlagUrls[ii]);
cntry.setName(countryNames[ii]);	
countryList.add(cntry);
}	
TypedArray icons = res.obtainTypedArray(R.array.country_icons);

int nn=icons.length();

MyImageLoader img=new MyImageLoader(getApplicationContext());

setListAdapter(new ImageAndTextAdapter(ctx, R.layout.main_list,countryList,img));

}

}




package com.test;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;
import java.util.WeakHashMap;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.widget.ImageView;

public class MyImageLoader {

private HashMap imageMap = new HashMap();
// private Map imageViews=Collections.synchronizedMap(new WeakHashMap());

private ImageQueue imageQueue = new ImageQueue();
private Thread imageLoaderThread = new Thread(new ImageQueueManager());
private File cacheDir;


public MyImageLoader(Context context) {
// Make background thread low priority, to avoid affecting UI performance
imageLoaderThread.setPriority(Thread.NORM_PRIORITY-1);

// Find the dir to save cached images
String sdState = android.os.Environment.getExternalStorageState();
if (sdState.equals(android.os.Environment.MEDIA_MOUNTED)) {
File sdDir = android.os.Environment.getExternalStorageDirectory();
//	 cacheDir = new File(sdDir,"data/codehenge");
cacheDir = new File(sdDir,"sash");

}
else
cacheDir = context.getCacheDir();

if(!cacheDir.exists())
cacheDir.mkdirs();
}

static int i = 0; 

//Provides classes to manage a variety of visual elements that are intended for display only, such as bitmaps and gradients. 
/*public static Drawable downLoad(String url)
{*/

private class ImageQueue {
private Stack imageRefs = new Stack();

//removes all instances of this ImageView
public void Clean(ImageView view)
{	
for(int i = 0 ;i &lt; imageRefs.size();)
{
if(imageRefs.get(i).imageView == view)
imageRefs.remove(i);
else 
++i;
}
}
}
private class ImageRef {
public String url;
public ImageView imageView;

public ImageRef(String u, ImageView i) {
url=u;
imageView=i;
}
}	
private class ImageQueueManager implements Runnable 
{
public void run() {
try {
while(true) 
{	
if(imageQueue.imageRefs.size() == 0) {
synchronized(imageQueue.imageRefs) {
imageQueue.imageRefs.wait();
}
}	
// When we have images to be loaded
if(imageQueue.imageRefs.size() != 0) 
{
ImageRef imageToLoad;	
synchronized(imageQueue.imageRefs) {
imageToLoad = imageQueue.imageRefs.pop();
}
System.out.println(&quot;Going to Downlad Image from URL &quot; + imageToLoad.url);
Bitmap bmp = getBitmap(imageToLoad.url);//get the url
/*....testing Image...*/
if(bmp!=null)
{
System.out.println(&quot;Image is here....&quot;);
}
else
{
System.out.println(&quot;Image is not present is this variable..&quot;);
}

//it is a object of hashmap
imageMap.put(imageToLoad.url, bmp);
//we store to check wheter it is write



Object tag = imageToLoad.imageView.getTag();	

//Display image in ListView on UI thread
// Make sure we have the right view - thread safety defender
if(tag!=null &amp;&amp; ((String)tag).equals(imageToLoad.url)) 
{
//take 2 arg i.e.imageview ,bitmap
BitmapDisplayer bmpDisplayer = 
new BitmapDisplayer(bmp, imageToLoad.imageView);

Activity a = (Activity)imageToLoad.imageView.getContext();

a.runOnUiThread(bmpDisplayer);
}
}	
if(Thread.interrupted())
break;
}
} catch (InterruptedException e) {}
}
}
private Bitmap getBitmap(String url)
{
String filename = String.valueOf(url.hashCode());
System.out.println("the filename object contain:"+filename);
File f = new File(cacheDir, filename);
System.out.println("The file content is:"+f.getName());	

// Is the bitmap in our cache?
Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());
//	 System.out.println("The file content is:"+bitmap.toString());

if(bitmap!=null)
{
System.out.println("The bitmap image is here");
}
else
{
System.out.println("The image is not here....");
}

if(bitmap != null)
return bitmap;

// Hope, have to download it
try {
bitmap =BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream());
// save bitmap to cache for later
if(bitmap!=null)
{
System.out.println("The bitmap image is here");
}
else
{
System.out.println("The image is not here....");
}

writeFile(bitmap, f);

return bitmap;
} 
catch (Exception ex) {
ex.printStackTrace();
return null;
}
}

private void writeFile(Bitmap bmp, File f) {
FileOutputStream out = null;

try {
out = new FileOutputStream(f);
bmp.compress(Bitmap.CompressFormat.PNG, 80, out);
} catch (Exception e) {
e.printStackTrace();
}
finally { 
try { if (out != null )
out.close(); }
catch(Exception ex) {} 
}
}

private class BitmapDisplayer implements Runnable {
Bitmap bitmap;
ImageView imageView;	
public BitmapDisplayer(Bitmap b, ImageView i)
{
bitmap=b;
imageView=i;
}

public void run() {
if(bitmap != null)
imageView.setImageBitmap(bitmap);
else
imageView.setImageResource(R.drawable.icon);
}
}

public void displayImage(String url,ImageView imageView)
{
if(imageMap.containsKey(url))
imageView.setImageBitmap(imageMap.get(url));
else {
imageView.setTag(url);
//	queueImage(url,imageView);
queueImage(url,imageView);
imageView.setImageResource(R.drawable.icon);
}
}

private void queueImage(String url, ImageView imageView) {
// This ImageView might have been used for other images, so we clear 
// the queue of old tasks before starting.
imageQueue.Clean(imageView);
ImageRef p=new ImageRef(url, imageView);

synchronized(imageQueue.imageRefs) {
imageQueue.imageRefs.push(p);
imageQueue.imageRefs.notifyAll();
}

// Start thread if it's not started yet
if(imageLoaderThread.getState() == Thread.State.NEW)
imageLoaderThread.start();
} 

}




package com.test;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.res.TypedArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;


//public class ImageAndTextAdapter extends ArrayAdapter
public class ImageAndTextAdapter extends ArrayAdapter
{

private LayoutInflater mInflater;

private int icon;
//The Activity recall has to be passed to the MyImageLoader when it displays an image.
//private Activity activity;
MyImageLoader imgdownloader = null;


private int mViewResourceId;
private Context ct;
String mUrl;
TypedArray[] mIcon;
List countryList=null;

//public ImageAndTextAdapter(Context ctx, int viewResourceId,String[] strings, TypedArray icons,int icn)
//public ImageAndTextAdapter(Context ctx, int viewResourceId,List lst,MyImageLoader imgldr,TypedArray[] img)
public ImageAndTextAdapter(Context ctx, int viewResourceId,List lst,MyImageLoader imgldr)

{
//super(ctx, viewResourceId, list);
super(ctx, viewResourceId, lst);

mInflater = (LayoutInflater)ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

ct=ctx;	
//mIcon=img;
countryList=lst;

mViewResourceId = viewResourceId;
//mUrl=url;	
imgdownloader=imgldr;

//	activity=a;




}



public int getCount() 
{
return countryList.size();
}	
public Country getItem(int position) 
{
return (Country) countryList.get(position);
}	
public long getItemId(int position) 
{
return position;
}

//Using a ViewHolder means we don’t have to call findViewById
//for every single view, every time , 
//which adds up to a decent amount of computational savings
public static class ViewHolder{

public ImageView image;
}


public View getView(int position, View convertView, ViewGroup parent) {


if(convertView == null)
convertView = mInflater.inflate(mViewResourceId, null);

Country country = getItem(position);

ImageView iv = (ImageView)convertView.findViewById(R.id.option_icon);




TextView tv = (TextView)convertView.findViewById(R.id.option_text);


tv.setText(country.getName());

imgdownloader.displayImage(country.getUri(), iv);


return convertView;

}
}



package com.test;

import android.net.Uri;

public class Country {

public String mName=null;
//public int mImage;
public String mUri=null;

/*public Country(String name, String uri )
{
this.mName=name;
this.mUri=uri;
}*/

public void setName(String nm)
{
this.mName=nm;
}
public String getName()
{
return mName;
}

/*public void setImage(int img)
{
this.mImage=img;
}
public int getImage()
{
return mImage;
}*/


public void setUri(String url)
{
this.mUri=url;
}
public String getUri()
{
return mUri;

}


}



countries.xml





Bhutan
Colombia
Italy
Jamaica
Kazakhstan
Kenya


@drawable/bhutan
@drawable/colombia
@drawable/italy
@drawable/jamaica
@drawable/kazakhstan
@drawable/kenya



http://farm5.static.flickr.com...
http://farm4.static.flickr.com...
http://farm4.static.flickr.com...
http://farm5.static.flickr.com...
http://farm5.static.flickr.com...
http://farm4.static.flickr.com...



&lt;/countrynames.length;ii++){
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>290</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303002563]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304130709]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>294</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 07:57:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 07:57:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how the Activity is set here: 

Activity a = (Activity)imageToLoad.imageView.getContext(); ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>293</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304052965]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304059690]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>295</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 11:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 11:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[package com.test;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ListActivity;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.os.Bundle;

public class AdvancedListViewActivity extends ListActivity{
	 public void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.main1);
	       
	        Context ctx = getApplicationContext();
			Resources res = ctx.getResources();
			
			MyImageLoader myimageloader;
			 
			Bundle bun= this.getIntent().getExtras();
			String name=bun.getString("name1");
			int icn=bun.getInt("name2");
			
			String url="http://farm7.static.flickr.com/6083/6041682945_13abc15d66_s.jpg";
			List countryList=new ArrayList();		
			
			Country cntrynew =new Country();
			
			cntrynew.setUri(url);
			cntrynew.setName(name);			
			countryList.add(cntrynew);
			
					
			
			String[] countryNames = res.getStringArray(R.array.country_names);
			String[] countryFlagUrls = res.getStringArray(R.array.nameurl);
			
			 for(int ii=0; ii&lt;countryNames.length;ii++){
				 
				 Country cntry =new Country();
					
					cntry.setUri(countryFlagUrls[ii]);
					cntry.setName(countryNames[ii]);			
					countryList.add(cntry);
				}	
			 TypedArray icons = res.obtainTypedArray(R.array.country_icons);
		
			int nn=icons.length();
			
			MyImageLoader img=new MyImageLoader(getApplicationContext());
			
			setListAdapter(new ImageAndTextAdapter(ctx, R.layout.main_list,countryList,img));
			
	 }

}





package com.test;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;
import java.util.WeakHashMap;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.widget.ImageView;

public class MyImageLoader {
	
	private HashMap imageMap = new HashMap();
 //   private Map imageViews=Collections.synchronizedMap(new WeakHashMap());

	private ImageQueue imageQueue = new ImageQueue();
	private Thread imageLoaderThread = new Thread(new ImageQueueManager());
	private File cacheDir;
	
	
	public MyImageLoader(Context context) {
		// Make background thread low priority, to avoid affecting UI performance
		imageLoaderThread.setPriority(Thread.NORM_PRIORITY-1);

		// Find the dir to save cached images
		String sdState = android.os.Environment.getExternalStorageState();
		if (sdState.equals(android.os.Environment.MEDIA_MOUNTED)) {
			File sdDir = android.os.Environment.getExternalStorageDirectory();		
//			cacheDir = new File(sdDir,"data/codehenge");
			cacheDir = new File(sdDir,"sash");
			
		}
		else
			cacheDir = context.getCacheDir();
		
		if(!cacheDir.exists())
			cacheDir.mkdirs();
	}
	
	static int i = 0;   
	
	//Provides classes to manage a variety of visual elements that are intended for display only, such as bitmaps and gradients. 
	/*public  static Drawable downLoad(String url)
	{*/
	
	private class ImageQueue {
		private Stack imageRefs = new Stack();

		//removes all instances of this ImageView
		public void Clean(ImageView view)
		{			
			for(int i = 0 ;i &lt; imageRefs.size();)
			{
				if(imageRefs.get(i).imageView == view)
						imageRefs.remove(i);
				else 
						++i;
			}
		}
	}
	private class ImageRef {
		public String url;
		public ImageView imageView;
		
		public ImageRef(String u, ImageView i) {
			url=u;
			imageView=i;
		}
	}	
private class ImageQueueManager implements Runnable 
{
			public void run() {
				try {
					while(true) 
					 {						
						if(imageQueue.imageRefs.size() == 0) {
							synchronized(imageQueue.imageRefs) {
								imageQueue.imageRefs.wait();
							}
						}						
						// When we have images to be loaded
						if(imageQueue.imageRefs.size() != 0) 
						{
							ImageRef imageToLoad;							
							synchronized(imageQueue.imageRefs) {
								imageToLoad = imageQueue.imageRefs.pop();
							}
							System.out.println(&quot;Going to Downlad Image from URL &quot; + imageToLoad.url);
							Bitmap bmp = getBitmap(imageToLoad.url);//get the url
							/*....testing Image...*/
							if(bmp!=null)
							{
								System.out.println(&quot;Image is here....&quot;);
							}
							else
							{
								System.out.println(&quot;Image is not present is this variable..&quot;);
							}
														
							//it is a object of hashmap
							imageMap.put(imageToLoad.url, bmp);
							//we store to check wheter it is write
						
							
							
						Object tag = imageToLoad.imageView.getTag();						
						
							//Display image in ListView on UI thread
							// Make sure we have the right view - thread safety defender
							if(tag!=null &amp;&amp; ((String)tag).equals(imageToLoad.url)) 
							{
								//take 2 arg i.e.imageview ,bitmap
								BitmapDisplayer bmpDisplayer = 
									new BitmapDisplayer(bmp, imageToLoad.imageView);
								
								Activity a = (Activity)imageToLoad.imageView.getContext();
								
								a.runOnUiThread(bmpDisplayer);
							}
						}						
						if(Thread.interrupted())
							break;
					}
				} catch (InterruptedException e) {}
			}
		}
private Bitmap getBitmap(String url)
{
	String filename = String.valueOf(url.hashCode());
	System.out.println("the filename object contain:"+filename);
	File f = new File(cacheDir, filename);
	System.out.println("The file content is:"+f.getName());		  

		  // Is the bitmap in our cache?
		  Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());
//		  		System.out.println("The file content is:"+bitmap.toString());
		  		
		  if(bitmap!=null)
		  {
			  System.out.println("The bitmap image is here");
		  }
		  else
		  {
			  System.out.println("The image is not here....");
		  }
		  
		  if(bitmap != null)
			  	return bitmap;

		  // Hope, have to download it
		  try {
		    bitmap =BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream());
		    // save bitmap to cache for later
			    if(bitmap!=null)
				  {
					  System.out.println("The bitmap image is here");
				  }
				  else
				  {
					  System.out.println("The image is not here....");
				  }
			  
		    writeFile(bitmap, f);
		      
		    return bitmap;
		  } 
		  catch (Exception ex) {
		    ex.printStackTrace();
		    return null;
		  }
		}
		
		private void writeFile(Bitmap bmp, File f) {
			FileOutputStream out = null;
			
			try {
				out = new FileOutputStream(f);
				bmp.compress(Bitmap.CompressFormat.PNG, 80, out);
			} catch (Exception e) {
				e.printStackTrace();
			}
			finally { 
				try { if (out != null )
					out.close(); }
				catch(Exception ex) {} 
			}
		}

private class BitmapDisplayer implements Runnable {
	Bitmap bitmap;
	ImageView imageView;	
	public BitmapDisplayer(Bitmap b, ImageView i)
	{
		bitmap=b;
		imageView=i;
	}
	
	public void run() {
		if(bitmap != null)
			imageView.setImageBitmap(bitmap);
		else
			imageView.setImageResource(R.drawable.icon);
	}
}

public void displayImage(String url,ImageView imageView)
{
	if(imageMap.containsKey(url))
		imageView.setImageBitmap(imageMap.get(url));
	else {
		imageView.setTag(url);
	//	queueImage(url,imageView);
		queueImage(url,imageView);
		imageView.setImageResource(R.drawable.icon);
	}
}

private void queueImage(String url, ImageView imageView) {
	// This ImageView might have been used for other images, so we clear 
	// the queue of old tasks before starting.
	imageQueue.Clean(imageView);
	ImageRef p=new ImageRef(url, imageView);

	synchronized(imageQueue.imageRefs) {
		imageQueue.imageRefs.push(p);
		imageQueue.imageRefs.notifyAll();
	}

	// Start thread if it's not started yet
	if(imageLoaderThread.getState() == Thread.State.NEW)
		imageLoaderThread.start();
 } 
		
}
	




package com.test;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.res.TypedArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;


//public class ImageAndTextAdapter extends ArrayAdapter
public class ImageAndTextAdapter extends ArrayAdapter
{

	private LayoutInflater mInflater;
	
private int icon;
//The Activity recall has to be passed to the MyImageLoader when it displays an image.
//private Activity activity;
MyImageLoader imgdownloader = 	null;

	
	private int mViewResourceId;
	private Context ct;
	String mUrl;
	TypedArray[] mIcon;
	List countryList=null;
	
	//public ImageAndTextAdapter(Context ctx, int viewResourceId,String[] strings, TypedArray icons,int icn)
//public ImageAndTextAdapter(Context ctx, int viewResourceId,List lst,MyImageLoader imgldr,TypedArray[] img)
	public ImageAndTextAdapter(Context ctx, int viewResourceId,List lst,MyImageLoader imgldr)

	{
													//super(ctx, viewResourceId, list);
		super(ctx, viewResourceId, lst);
		
		mInflater = (LayoutInflater)ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		
		ct=ctx;		
		//mIcon=img;
		countryList=lst;
		
		mViewResourceId = viewResourceId;
		//mUrl=url;		
		imgdownloader=imgldr;
		
	//	activity=a;
		
		
		
		
	}



	public int getCount() 
	{
		return countryList.size();
	}	
	public Country getItem(int position) 
	{
		return (Country) countryList.get(position);
	}	
	public long getItemId(int position) 
	{
		return position;
	}

	//Using a ViewHolder  means we don’t have to call findViewById
	//for every single view, every time , 
	//which adds up to a decent amount of computational savings
	public static class ViewHolder{
		
		public ImageView image;
	}

	
	public View getView(int position, View convertView, ViewGroup parent) {
		
		
		if(convertView == null)
			convertView = mInflater.inflate(mViewResourceId, null);
			
		Country country = getItem(position);
		
		ImageView iv = (ImageView)convertView.findViewById(R.id.option_icon);


		
		
		TextView tv = (TextView)convertView.findViewById(R.id.option_text);
		
		
		tv.setText(country.getName());
	
		imgdownloader.displayImage(country.getUri(), iv);
		
		
		return convertView;
	
    }
}



package com.test;

import android.net.Uri;

public class Country {
	
	public String mName=null;
	//public int mImage;
	public String mUri=null;
	
	/*public Country(String name, String uri )
	{
		this.mName=name;
		this.mUri=uri;
	}*/
	
	public void setName(String nm)
	{
		this.mName=nm;
	}
	public String getName()
	{
		return mName;
	}
	
	/*public void setImage(int img)
	{
		this.mImage=img;
	}
	public int getImage()
	{
		return mImage;
	}*/
	
	
	public void setUri(String url)
	{
		this.mUri=url;
	}
	public String getUri()
	{
		return mUri;
		 
	}
	

}



countries.xml




    
        Bhutan
        Colombia
        Italy
        Jamaica
        Kazakhstan
        Kenya
    
    
        @drawable/bhutan
        @drawable/colombia
        @drawable/italy
        @drawable/jamaica
        @drawable/kazakhstan
        @drawable/kenya
    
    
     
        http://farm5.static.flickr.com/4026/4415651678_2f8d47d3a7_s.jpg
        http://farm4.static.flickr.com/3037/3043228626_cd4fdbd3ae_s.jpg
        http://farm4.static.flickr.com/3222/2838905452_44eb17e794_s.jpg
        http://farm5.static.flickr.com/4026/4424182649_233e346be0_s.jpg
        http://farm5.static.flickr.com/4026/4644890342_668f75acb1_s.jpg
        http://farm4.static.flickr.com/3361/3442412997_65aa085a59_s.jpg
    
   

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>294</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304059690]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304111153]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>293</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-07 07:34:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-07 07:34:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the reply and Sorry for the disturbance because I am new in android. I am developing list view using notification for this I am using this tutorial to download country flag from the web. This code is much helpful to achieve the same task.
 
Now I getting the tag value , but on the next line I getting error again in ImageQueueManager class:

Activity a = (Activity)imageToLoad.imageView.getContext(); 

I think , I have remove activity object from the display() method , is it write?
here is my code:
imgdownloader.displayImage(country.getUri(), iv);

This is my getView:

public View getView(int position, View convertView, ViewGroup parent) {
		
				
		if(convertView == null)
			convertView = mInflater.inflate(mViewResourceId, null);
			
		Country country = getItem(position);
		
		ImageView iv = (ImageView)convertView.findViewById(R.id.option_icon);
	
		
		
		TextView tv = (TextView)convertView.findViewById(R.id.option_text);
		
		tv.setText(country.getName());
		
			imgdownloader.displayImage(country.getUri(), iv);
		
		return convertView;
	
    }


Please reply me.

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>292</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303485735]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304052965]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>292</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-06 12:57:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-06 12:57:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So you are seeing a null value - first thing to do is to go and find where that value should be set, right?  Look for this in TweetItemAdapter.getView() in the example code. Specifically, look for the line:

holder.image.setTag(tweet.image_url);

This is where we set the tag for a given ImageView in the example. You have to have some equivalent code in your implementation, to make sure you are setting the correct image.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>291</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303383529]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303485735]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>290</wp:comment_id>
			<wp:comment_author><![CDATA[Sardeenz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sardeenz@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-05 17:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-05 17:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, this works great.  ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303002563]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>291</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-06 07:35:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-06 07:35:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi I am Shashi,
really this is  nice tutorial.
The same thing I am going to used in my project. I have implemented Imageloader class in my project but here in tag variable I getting null value, Please have a look &amp; help me.


Object tag = imageToLoad.imageView.getTag();
// value of tag =null

The tag value is null so the project get's interrupted .

if(Thread.interrupted())
break;
 ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[303383529]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>289</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-03 10:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-03 10:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi I got the FileNotFoundException in this tutorial because here in
writeFile(Bitmap bmp, File f) out object is null after execute the following line.

out = new FileOutputStream(f);

I have also change my cacheDir name ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>244</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[246682907]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301640886]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>288</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-03 10:40:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-03 10:40:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi I got the FileNotFoundException in this tutorial because here in
 writeFile(Bitmap bmp, File f)  out object is null after execute the following line.

out = new FileOutputStream(f);

I have also change my cacheDir name 

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301637339]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>287</wp:comment_id>
			<wp:comment_author><![CDATA[Shirkeshashi04 Android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shirkeshashi04.android@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-03 07:40:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-03 07:40:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am also using ImageManager class to load the image asynchronously in my project also getting url into the file object(i.e. filename) but after that when image is going to stored into the bitmap object from file the file (f) object the bitmap object shows the null value(their is no any image or value).Please reply  me on     shirkeshashi04.android@gmail.com            

 The code is here: 

private Bitmap getBitmap(String url) {
  String filename = String.valueOf(url.hashCode());// here in filename I getting url
  File f = new File(cacheDir, filename);//here is also getting url

  // Is the bitmap in our cache


  Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());
// here bitmap object is null  



  if(bitmap != null) return bitmap;

  // Nope, have to download it
  try {
    bitmap = 
    BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream());
    // save bitmap to cache for later
    writeFile(bitmap, f);
      
    return bitmap;
  } catch (Exception ex) {
    ex.printStackTrace();
    return null;
  }
}]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301602041]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>286</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-02 11:35:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-02 11:35:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At which point in the above code are you seeing the bitmap object being null?  If after the first line, it means you haven't stored anything at the designated file path.  If after the last line, it means the url you have specified does not resolve, or returns null data somehow.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>285</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301013494]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301041287]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>285</wp:comment_id>
			<wp:comment_author><![CDATA[Shashikant]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shashikant@rvmk.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-02 10:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-02 10:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi have u tried it?
but I geeting error here. could u tell me the answer.

Here , getting empty file (null data ) into the bitmap Object. could u tell me why?
reply me on shashikant@rvmk.com


Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());

if(bitmap != null) return bitmap;

// Nope, have to download it
try {

bitmap = BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream()); ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>244</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[246682907]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301013494]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>283</wp:comment_id>
			<wp:comment_author><![CDATA[Jean Jimenez]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/eljeanc</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-30 14:57:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-30 14:57:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi everybody, i'm buildind an app that needs to download images and this tutorial is amazing, I just  would like to know how i can make that the downloaded images can be reuse when i the user close the app and start it again i mean just download new ones and uses again the images that were already downloades.

Regards 
Jean]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[298719404]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>284</wp:comment_id>
			<wp:comment_author><![CDATA[Shashikant]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shashikant@rvmk.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-02 09:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-02 09:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here , getting empty file (null data ) into the bitmap Object. could u tell me why?
reply me on shashikant@rvmk.com


Bitmap bitmap = BitmapFactory.decodeFile(f.getPath());

  if(bitmap != null) return bitmap;

  // Nope, have to download it
  try {

    bitmap =     BitmapFactory.decodeStream(new URL(url).openConnection().getInputStream());]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[301009487]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>282</wp:comment_id>
			<wp:comment_author><![CDATA[Guna]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[skarthikareddy@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-29 15:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-29 15:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome article, helped me out in tough situation. Thanks a lot!!!!!!1]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[297779379]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>279</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Nodarakis]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nodarakis@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-23 15:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-23 15:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am dealing with the same thing, my application has a lot of activities and a lot of adapters. I think the solution is to make the ImageManager class singleton in order to achieve global cache.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>262</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281057885]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[293727898]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>277</wp:comment_id>
			<wp:comment_author><![CDATA[Sanket]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sanket.gupta@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-22 06:42:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-22 06:42:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks!
Actually the issue was that the inflater for the dataadapter was being created using the applicationcontext.changing this to activitycontext solved the issue.
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>276</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292734334]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292862230]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>276</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-21 23:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-21 23:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Make sure that getContext() is returning an object of type superActivity. Also, make sure that you can cast a superActivity to an Activity in another scenario. Try something like:

superActivity s = new superActivity;
Activity a = (Activity)s;

and see if you get an error.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>275</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292607192]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292734334]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>275</wp:comment_id>
			<wp:comment_author><![CDATA[Sanket]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sanket.gupta@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-21 21:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-21 21:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am getting a classcast exception at the line
Activity a = 
              (Activity)imageToLoad.imageView.getContext();

Any idea why this could be happening.
My Activity extends superActivity which in turn extends Activity]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292607192]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>273</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-21 00:54:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-21 00:54:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing this! That's definitely one of those simple, infuriating bugs that you can bang your head against for hours. I've been there way too many times. Hopefully this saves some others a few hours of frustration.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>270</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289032047]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[292089785]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>270</wp:comment_id>
			<wp:comment_author><![CDATA[Jawaad Mahmood]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/_jm</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-17 07:51:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-17 07:51:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,

First - This was _incredibly_ helpful in clearing up some problems for me; thanks!

Thought I'd drop a stupid bug I introduced in my code by not paying attention :P

Much like Umakant said earlier, it seems like I had to "scroll" the screen for it to actually update the images that are being displayed.

I couldn't figure it out so I started adding logging (etc) and then I realized I hadn't actually added the image URL tag (holder.image.setTag(o.thumbnail)).  

Hit myself in the face when I realized it and fixed it after.  Thanks for sharing dude!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289032047]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>265</wp:comment_id>
			<wp:comment_author><![CDATA[srujana kalidindi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kalidindi.srujana@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-11 13:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-11 13:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[woww!!! *bows in reverence*. I'll definitely try this out. bump yakir31. Do put together a tutorial on the onItemClicked functionality.  ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[283445212]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>263</wp:comment_id>
			<wp:comment_author><![CDATA[hemant]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hemants.iitk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-09 09:11:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-09 09:11:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice article by the way :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>262</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281057885]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281058412]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>262</wp:comment_id>
			<wp:comment_author><![CDATA[hemant]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hemants.iitk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-09 09:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-09 09:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

My app has a lot of activities and a lot of adapters. Your code basically creates a new object for every adapter and when someone goes back to the activity it starts the same process all over again. Can I implement global cache somehow?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281057885]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>253</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-28 18:50:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-28 18:50:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just a different library that I prefer. Has, IMO, easier syntax and more logical operation.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>252</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[267467421]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[267923875]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>254</wp:comment_id>
			<wp:comment_author><![CDATA[Manjunath Cy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[manjunath.cy@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-29 11:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-29 11:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice ....So nice.....am fresher....Hope i ll get such article....Thank you very much ..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[268616482]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>252</wp:comment_id>
			<wp:comment_author><![CDATA[ayub]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ayublin@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://ayublin.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-28 06:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-28 06:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice :) I have downloaded the source, what is the different of "org.json.simple" with built in "org.json" library ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[267467421]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>233</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-05 16:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-05 16:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'll look into putting together a small tutorial on that functionality.

For now, what kind of things are you trying to do when the item is clicked?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>231</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[241680249]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[242604221]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>229</wp:comment_id>
			<wp:comment_author><![CDATA[sathish]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sathya.sri69@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-30 17:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-30 17:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your quick concern. i will see and update it. thanks again]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>223</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[234353238]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238915154]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>230</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-30 17:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-30 17:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No problem. The new post is up <a href="http://codehenge.net/blog/2011/06/android-development-tutorial-progressbar-example/" rel="nofollow">here</a>. Hope it helps!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>229</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238915154]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238928676]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>227</wp:comment_id>
			<wp:comment_author><![CDATA[Jdetoni]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jdetoni@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-29 17:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-29 17:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great code!!

Thank you very much!! I was thinking about put cache in my app and your job is perfect. Congrats man, very well.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[238069573]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>226</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-25 23:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-25 23:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad its working! That may cause you problems down the line - that check is there to make sure you are loading the image into the proper view. I'm guessing what's happening is that you are unable to set the tag on the ImageView appropriately for some reason. Look for the line:

holder.image.setTag(tweet.image_url);

in the getView() method of the TweetItemAdapter class, and set a breakpoint. Make sure a non-null url is being set as the tag when a ViewHolder is being created..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>225</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[234911535]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[234945130]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>224</wp:comment_id>
			<wp:comment_author><![CDATA[Android Development Tutorial: ProgressBar Example | Codehenge]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/06/android-development-tutorial-progressbar-example/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-25 00:00:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-25 04:00:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Android Development Tutorial: Asynchronous Lazy Loading and Caching of ListView Images [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308974429.2271";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1309201507.0619";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>225</wp:comment_id>
			<wp:comment_author><![CDATA[tehfist]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tehfist@yopmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-25 22:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-25 22:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you very much, this code is awesome :)

I just had a little issue with the image displaying on the current views
on the "ImageQueueManager" class, i couldn't pass the condition
          if(tag != null &amp;&amp; ((String)tag).equals(imageToLoad.url)) {

so i removed it and i worked well for the moment !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[234911535]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>223</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-24 20:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-24 20:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a great idea for a follow-up post. I wrote the code today, I'll be putting up a new post in the next few days to illustrate adding an indeterminate progress bar while the image is loading.

In the meantime, I've checked in a new branch (progress_bar) of the <a href="https://github.com/cacois/TweetView/tree/progress_bar" rel="nofollow">TweetView project at Github</a> with this feature added so you can see how it can be done.  Enjoy!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>222</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[233217391]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[234353238]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[Sathya Sri69]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sathya.sri69@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-23 10:35:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-23 10:35:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi androidian, 
I would like to very thankful to you for this great helpful post. it is working for me great.
But i would like to suggest one thing that, before going to load actual image from url we are displaying default icon in place of imageview but i need to display progressbar to know the user what is happenning before loading image.

Can you please update me with this?

Thanks in advance

sathish,
sathya.sri69@gmail.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[233217391]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>244</wp:comment_id>
			<wp:comment_author><![CDATA[Pete Houston]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pete.houston.17187@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-09 13:38:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-09 13:38:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Seriously, awesome article!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[246682907]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>245</wp:comment_id>
			<wp:comment_author><![CDATA[Umakant Patil]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/umakant.patil</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-11 19:30:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-11 19:30:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Problem with some heavy images. It take time to load the image and after image is loaded it doesn't update image. We need to scroll the ListView for that. :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[247861501]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>246</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-11 20:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-11 20:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you need to change the image after it has been loaded, you will have to call notifyDataSetChanged() on the ListView. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>245</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[247861501]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[247913996]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chesspro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-18 16:47:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-18 16:47:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hm, k I'll try that, thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>215</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228418821]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[229359503]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>215</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 18:25:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 18:25:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My first thought is there's no reason you can't embed metadata into the tag string. Shove a delimited list of strings, or some JSON into the tag, and parse it on the other side. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>213</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228305973]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228418821]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>213</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chesspro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 16:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 16:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff! 

Let's say you want to pass the position of the tweet back from the ArrayAdapter to the main activity that set the listadapter. Normally I would do setTag(position) and a getTag() to retrieve the position...
Since you're already using the setTag for the viewholder, is there another way to do this?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[228305973]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>211</wp:comment_id>
			<wp:comment_author><![CDATA[Robert McGhee &raquo; June 17th]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://robertmcghee.co.uk/2011/june-17th/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[174.120.219.83]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-17 07:11:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-17 11:11:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Bookmarked Android Development Tutorial: Asynchronous Lazy Loading and Caching of ListView Images | Codehenge [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308309114.7805";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308315050.4322";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>210</wp:comment_id>
			<wp:comment_author><![CDATA[Android Development Tutorial: Asynchronous Lazy Loading and &#8230; | Web Host Aid]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://web-host-aid.com/2011/06/16/android-development-tutorial-asynchronous-lazy-loading-and/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[65.254.224.23]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-16 12:09:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-16 16:09:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] th&amp;#1077 first placement here: Android Development Tutorial: Asynchronous S&amp;#406&amp;#959w-moving Loading &amp;#1072n&amp;#1281 &#8230;    Posted in Hosting   | Tagged as:  add-asynchronous, and-caching, android, case, example, [...]

[WORDPRESS HASHCASH] The comment's server IP (65.254.224.23) doesn't match the comment's URL host IP (65.254.248.147) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308315057.7341";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>209</wp:comment_id>
			<wp:comment_author><![CDATA[Android Development Tutorial: Asynchronous Lazy Loading and &#8230; &laquo; Affordable Hosting Gen.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://affordablehostinggen.com/?p=154009</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[65.254.224.23]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-16 11:03:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-16 15:03:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Read extra: Android Development Tutorial: Asynchronous B&amp;#959n&amp;#1077 &amp;#1110&amp;#1281&amp;#406&amp;#1077 Loading &amp;#1072n&amp;#12... [...]

[WORDPRESS HASHCASH] The comment's server IP (65.254.224.23) doesn't match the comment's URL host IP (65.254.248.147) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308236629.4845";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308236629.5117";s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308315061.4186";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>231</wp:comment_id>
			<wp:comment_author><![CDATA[Yakir31]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[yakir31@walal.co.il]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-04 06:40:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-04 06:40:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi!
very nice code!
can you please write a code for selecting item on the list ?

i mean public void onItemClick(AdapterView parent, View view,
      	        int position, long id)

thanks!
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[241680249]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[Logan Hendershot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/logan.hendershot</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-16 14:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-16 14:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks good, saving for later!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[227326959]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>208</wp:comment_id>
			<wp:comment_author><![CDATA[Android Development Tutorial: Asynchronous Lazy Loading and &#8230; &laquo; Affordable Hosting Gen.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://affordablehostinggen.com/?p=154008</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[65.254.224.23]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-16 11:03:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-16 15:03:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Extra: Android Development Tutorial: Asynchronous B&amp;#959n&amp;#1077 &amp;#1110&amp;#1281&amp;#406&amp;#1077 Loading &amp;#1072n&amp;#12... [...]

[WORDPRESS HASHCASH] The comment's server IP (65.254.224.23) doesn't match the comment's URL host IP (65.254.248.147) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308236629.3502";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308236629.3867";s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308315059.4977";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>364</wp:comment_id>
			<wp:comment_author><![CDATA[Han Junho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cmcromance@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-06 02:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-06 07:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've changed your "displayImage(...)" function like this.

'Cause I have some problem with your code. If I got back from the other Activity, Hashmap included some null pointers(maybe cause of SoftReference), and My list activity shows blank image. So, I fixed your code some.. If HashMap returns null, I do queueImage() again. 

      public void displayImage(String url, Context context, ImageView imageView) {
		if(mImageCacheMap.containsKey(url)) {
			
			Bitmap bitmapToShow = mImageCacheMap.get(url).get();
			
			if(bitmapToShow != null) {
				//&gt; Image was cached well
				imageView.setImageBitmap(bitmapToShow);
				return;
			}
		}

		//&gt; Image was cached failed
		imageView.setImageResource(R.drawable.default_photo);
		queueImage(url, context, imageView);
	}

Thank you for your great codes, seriously. and I hope my words help you. :)
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[380146750]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>365</wp:comment_id>
			<wp:comment_author><![CDATA[Abhijit Nukalapati]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/Abhijitalways</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-06 11:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-06 16:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the great explanation! Just a tip - the runOnUiThread seems to block the UI and freeze certain phones such as Droid X. However, when I replaced it with a handler, it seemed to work without any problem.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[380382246]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>367</wp:comment_id>
			<wp:comment_author><![CDATA[Mustafaev M]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mustafaev.m@bk.ru]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 03:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 08:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Useless..Your tutorial not work. JSONParser is not found.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387048645]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>368</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rmattison1@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 09:22:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 14:22:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This appears like it will load way to many threads.  Only took a glance though.   Here is my solution, it seems to work well across the board.  http://www.ryangmattison.com/post/2011/12/15/AsynchronousImageProvider.aspx]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387193395]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>371</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 10:27:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 15:27:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It certainly can, but that entirely depends on your search parameters. This is just an instructive demonstration, and is meant to illustrate the techniques, not provide a full-firehose scalable solution.

Thanks for the link to your work, looks like an excellent resource!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>368</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387193395]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387240307]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>372</wp:comment_id>
			<wp:comment_author><![CDATA[]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rmattison1@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 10:41:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 15:41:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool.  I couldn't find a community solution, soI figured I'd give mine up.  Hopefully i'll get emails and it'll become better.  Coolest thing on the site is the Android Eclipse plugin.   Saves time .. lots of it.   http://www.ryangmattison.com/post/2011/09/01/Lazy-Android.aspx]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>371</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387240307]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387259821]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>378</wp:comment_id>
			<wp:comment_author><![CDATA[Thankful Man]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[eladnava@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-16 11:03:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-16 16:03:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thx so much bro! I got your code from Github and it worked out of the box! (Almost) Just had to change the Twitter class to my own and voila, it worked so great! And it even caches the images to the sdcard for later!!!

You rock!!! You're my hero!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[388037256]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>381</wp:comment_id>
			<wp:comment_author><![CDATA[Annonymous]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[spam@pchelphq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-27 16:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-27 21:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Removing the softreferences worked for me as well.  Couldn't figure out why, but may be noteworthy to update the git repository.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>349</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362510416]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[395204749]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>393</wp:comment_id>
			<wp:comment_author><![CDATA[sebataz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sebastien.rigoni@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-07 11:56:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-07 16:56:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This class is just what I needed, of course I adapted it for my needs. But I have a question, sometimes the call to the Clean method will cause an ArrayIndexOutOfBoundsException. I try to check the size of the stack before the actual remove, but it doesn't solve the problem.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[432005700]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>395</wp:comment_id>
			<wp:comment_author><![CDATA[Hawkhere]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hawkhere@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-09 06:54:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-09 11:54:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you need to add json_simple-1.1.jar into build path i guess]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>367</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387048645]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433888664]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>396</wp:comment_id>
			<wp:comment_author><![CDATA[Hawkhere]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hawkhere@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-09 06:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-09 11:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you need to add json_simple-1.1.jar into build path i guess
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>357</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[369911357]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433889164]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>397</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-09 08:56:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-09 13:56:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You should refrain from calling someone's work useless, if you expect to get help. Hawkhere is right, did you add json_simple-1.1.jar to the path, and make sure that your objects are using that class, instead of the org.json class?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>367</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387048645]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[433960322]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>411</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan R]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ryan.ram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.71.71.51]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-24 02:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-24 07:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How can I add an animation to the image when it loads, for example, a fade in? I tried but the animation is very choppy.
Secondly, how can we show selector states for each image view, for example, pressed and focused states.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[447659224]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>412</wp:comment_id>
			<wp:comment_author><![CDATA[Nicole]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nicole@legogreen.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[209.112.45.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-27 11:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-27 16:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I got exactly the same problem, do you find the solution? Thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>330</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[348291523]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[449999522]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>425</wp:comment_id>
			<wp:comment_author><![CDATA[Raed]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[raed@notanotherfruit.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[46.185.200.21]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-06 21:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-07 02:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are the best!!!!!!!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>270</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[289032047]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[458338019]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>426</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chris@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[99.35.103.120]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-07 22:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-08 03:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome Tutorial .. Beautifully explained Thank you very much :) ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[459460074]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>431</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Stratman]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[michaelstratman@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.11.171.16]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-15 18:34:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-15 22:34:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great tutorial, did exactly what I wanted to do. Getting rid of the soft reference fixed the issue with images being left blank after scrolling down and back up. Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>349</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362510416]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[466400710]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[Umamaheswari N]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[umamaheswari.n@netaxis.in]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[125.17.109.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-27 05:09:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-27 09:09:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks For Code . . it's Very Useful for all one .. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>294</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[304059690]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[477283981]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>447</wp:comment_id>
			<wp:comment_author><![CDATA[Jenkies]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jenkies@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.176.219.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-03 14:29:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-03 18:29:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This tutorial was going wonderfully until I had to switch to android 4.0.

Any information on why the Twitter Client Activity doesn't work beyond 2.2 for me?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484813507]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>450</wp:comment_id>
			<wp:comment_author><![CDATA[Sunjunliang52]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sunjunliang52@msn.cn]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.126.140.254]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-10 04:09:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-10 08:09:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank  u  !   good     ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[492982416]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>462</wp:comment_id>
			<wp:comment_author><![CDATA[Saltonpepper]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[x@x.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.76.202.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-25 10:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-25 14:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tutorial - matched my design pattern exactly, and worked within an hour.  Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[538387551]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>474</wp:comment_id>
			<wp:comment_author><![CDATA[Maidul Islam]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mmaidul.islam@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.209.135.47]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-01 13:21:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-01 17:21:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks I learn a lot of things from your blog.Now I am facing some problem.Please have a look that.
I uses this link.
https://maps.googleapis.com/maps/api/place/search/json?location=40.7143528,-74.0059731&amp;radius=1000&amp;types=restaurant&amp;sensor=false&amp;key=AIzaSyDbiWWIOmc08YSb9DAkdyTWXh_PirVuXpM

I want add this map.put(“icon”, “icon: ” + e.getString(“icon”));

new String[] {“icon”, “name”, “vicinity” },
new int[] {R.id.imageview1, R.id.item_title, R.id.item_subtitle });
Please look this matter.I am hang over from this from last weeks.
How can i show this images.Please let me know.
Hope fully I can expect answer from you ASAP.
Please help me.
Thanks and Regards,
Maidul]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[545115576]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>485</wp:comment_id>
			<wp:comment_author><![CDATA[Ravikumar_1111]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nayaka.ravikumar@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.83.37.41]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-27 04:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-27 08:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome code,thank you dude]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>217</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[229359503]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[568682502]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>490</wp:comment_id>
			<wp:comment_author><![CDATA[Chris R.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jfistikis@mailinator.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.130.35.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-06 04:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-06 08:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I have a strange bug that I can't pin down: When my list is populated, all icons are displayed correctly *except* the one at the top of the list. Instead a random one from the rest of the list is displayed. When I fling up and down the list, the icon is displayed correctly. This happens everytime the activity gets shown.  This behaviour appears always but stops when disk caching is commented out. Any ideas or hints? I am going crazy about this. Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[578037060]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>494</wp:comment_id>
			<wp:comment_author><![CDATA[Gyubok Baik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gyubok.baik@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.16.232.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-14 21:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-15 01:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I have two issues I cannot solve from this code.

1. Images don't initially appear, I need to scroll down and up again for the images to be updated.
2. The only image that doesn't get pulled is a .bmp and I was wondering whether this is an issue with the code]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[588197298]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>504</wp:comment_id>
			<wp:comment_author><![CDATA[Android Developer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rahul.s@intelgain.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.170.116.68]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-13 02:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-13 06:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unable to resolve error java.lang.NoClassDefFoundError: org.json.simple.parser.JSONParser on line JSONParser parser=new JSONParser(); in Example.java
I have added this jar file in my Build Path, but still not able to resolve this. Error occurs after successful compilation. Please help. Thanks in advance. 
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[617810404]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>509</wp:comment_id>
			<wp:comment_author><![CDATA[Fansher]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stevenfhh@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.176.99.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-29 08:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-29 12:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi 

I'm experiencing some problems with the code, which i have not altered but just downloaded.

I get an error with the lines
imageManager = new ImageManager(activity.getApplicationContext());

where it says "the constructor ImageManager(context) is undefined"

also i get an error with
imageManager.displayImage(tweet.image_url, activity, holder.image);

Where it says "The method displayImage(String, ImageView, int) in the type 
 ImageManager is not applicable for the arguments (String, 
 Activity, ImageView)"

Can somebody please help me with this problem?
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[633031864]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>511</wp:comment_id>
			<wp:comment_author><![CDATA[Fansher]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[stevenfhh@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.176.99.221]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-30 11:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-30 15:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Never mind, solved the problem on my own.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>509</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[633031864]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[634426297]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>512</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.226.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-30 13:40:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-30 17:40:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! Mind sharing your experience, in case someone else comes along with the same problem?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>511</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[634426297]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[634554555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>513</wp:comment_id>
			<wp:comment_author><![CDATA[Guest]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[guest@guest.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.60.239.178]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-03 12:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-03 16:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You should implement image loading on setViewBinder in the adapter this way it will be even faster and called only once]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[638662305]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>514</wp:comment_id>
			<wp:comment_author><![CDATA[ramakrishna k]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kramudu@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[125.63.77.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-07 06:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-07 10:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am trying to use this for remoteviews for my appwidget. I want to load images in my appwidget from database. But unfortunately its not working. Can you guide me how to update a remoteview using this.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[643157874]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>515</wp:comment_id>
			<wp:comment_author><![CDATA[Derric@HoodHype.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/derrichh</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[71.205.180.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-09-18 00:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-09-18 04:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am having the same problem at:
imageManager = new ImageManager(activity.getApplicationContext());

mind sharing what you did?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>509</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[633031864]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[653973942]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>531</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thomasgerard86@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.72.25.74]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-23 03:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-23 08:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes Quite
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[717349381]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>532</wp:comment_id>
			<wp:comment_author><![CDATA[truehybridx]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shippo0708@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[12.162.141.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-25 11:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-25 16:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very helpful for the tutorial thanks!!

I do believe a Stack for the ImageRefs could be improved upon, as it stands the bottom image appears and works its way to the top of the list (given the first in first out behavior of the stack)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[718787752]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>533</wp:comment_id>
			<wp:comment_author><![CDATA[Bill S]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bill.stinson@verizon.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.76.202.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-27 12:39:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-27 17:39:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am having a similar problem to the one described by Chris R.  In my case, one of the images in a list gets repeated for some reason.  It happens most but not all of the time.  Watching it closely, I can see that the right image is written to the list row initially, but then it gets overwritten by another image that actually belongs to a different row.  

Did you solve your problem?  Any suggestions?  Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>490</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[578037060]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[720471811]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>534</wp:comment_id>
			<wp:comment_author><![CDATA[Bill S]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bill.stinson@verizon.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.76.202.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-27 20:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-28 01:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found a solution to this problem.  I was getting an occasional overwritten image because getView() may be called multiple times on the same list item getView just to optimize view rendering and discard the result.  Unfortunately that's a problem for this code, since it interprets and executes every result, through a runnable if needed.  The result is that an incorrect bitmap can sometimes be written on top of a correct one.

The solution is to make sure your ListView has height set to wrap_content, instead of fill_parent.  Then ListView doesn't have to call getView() multiple times, and you don't get the occasional duplicate.

For more info, see: http://stackoverflow.com/questions/2618272/custom-listview-adapter-getview-method-being-called-multiple-times-and-in-no-co]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>533</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[720471811]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[720914460]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>535</wp:comment_id>
			<wp:comment_author><![CDATA[how to implement lazyloading in the adapter : Android Community - For Application Development]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://androiddev.orkitra.com/?p=5107</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[64.157.4.157]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-12-17 07:24:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-12-17 12:24:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching... [...]

[WORDPRESS HASHCASH] The comment's server IP (64.157.4.157) doesn't match the comment's URL host IP (68.180.151.96) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1355752728.378334;s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>540</wp:comment_id>
			<wp:comment_author><![CDATA[codefan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[prkchpxprss@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.20.140.61]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-04 09:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-04 14:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm getting an error for line "imageManager.displayImage(camera.thumbnail_url, activity, holder.image);"

The method displayImage(String, ImageView, int) in the type ImageManager is not applicable for the arguments (String, Activity, ImageView)

Any ideas?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[755619967]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>550</wp:comment_id>
			<wp:comment_author><![CDATA[Quique]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ejmedina@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[201.253.236.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-01 08:38:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-01 13:38:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! Great tutorial.
I've cloned the project from Github. 
I have an issue:
the method displayImage from ImageManager has the following form:
public void displayImage(String url, ImageView imageView, int defaultDrawableId) 
but it is called from TweetItemAdapter using the following sentence:
	imageManager.displayImage(tweet.image_url, activity, holder.image);
What should I do?

Thank you in advance.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[785741976]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>552</wp:comment_id>
			<wp:comment_author><![CDATA[Lucas F.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pock3t@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://profiles.google.com/pock3t</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[62.23.212.212]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-08 07:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-08 12:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot, I had same issue and your fix worked for me !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>347</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[362129124]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[792874401]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>609</wp:comment_id>
			<wp:comment_author><![CDATA[Untouchab1e]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[edvard.holst@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.215.144.36]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-31 10:01:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-31 15:01:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, I realized the same thing. Not sure how to solve it. The code on Github is not the same as the one described in the post here.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>550</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[785741976]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1182335040]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>610</wp:comment_id>
			<wp:comment_author><![CDATA[Untouchab1e]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[edvard.holst@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[84.215.144.36]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-31 10:17:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-31 15:17:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Would be great if you could update the code on your Github with the code described in this post. Cheers!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1182349550]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>645</wp:comment_id>
			<wp:comment_author><![CDATA[Google]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.google.com/tlrxsuhh</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.142.79.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-12 16:31:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-12 20:31:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Google</strong>

Every the moment inside a even though we pick out blogs that we study. Listed below are the latest websites that we pick out.

[WORDPRESS HASHCASH] The comment's server IP (79.142.79.92) doesn't match the comment's URL host IP (74.125.228.240) and so is spam.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431462694.3755801;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1431462694.390625;s:7:"message";s:31:"Comment status was changed to 0";s:5:"event";s:15:"status-changed0";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Android Development Tutorial: ProgressBar Example</title>
		<link>http://codehenge.net/blog/2011/06/android-development-tutorial-progressbar-example/</link>
		<pubDate>Sat, 25 Jun 2011 00:25:08 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p>The Android ProgressBar is a useful UI component that most developers will quickly find need of.  Displaying progress, even an indeterminate "loading" indicator, provides crucial feedback to a user, eliminating frustration and confusion while your app is churning away in the background. 

<p></p>Today I'll demonstrate using an indeterminate ProgressBar within a ListView while loading web content. I'll be modifying the <a href="https://github.com/cacois/TweetView">TweetView project</a> from my previous <a href="http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images/">post</a>.

<p></p>Note: You can find the full project with the ProgressBar feature in the "progress_bar" <a href="https://github.com/cacois/TweetView/tree/progress_bar">branch of the TweetView Github project</a>.

<p></p>Let's get started. Recall that the previous iteration of the TweetView app displayed a stock Android icon image by default while the Twitter avatars were loaded for each item in the ListView. Of course, this is not ideal, as it gives the user no indication of what is going on, and new images suddenly replacing the icon may be confusing. A better user experience would be to place a loading image in each ListView item until the proper avatar is retrieved and displayed. To avoid the complication of trying determine progress of an image download (especially since our avatar images are not very large, and will download fairly quickly), I'll use an indeterminate ProgressBar:

<p></p><a href="http://codehenge.net/blog/wp-content/uploads/2011/06/singleprogressbar.jpg"><img src="http://codehenge.net/blog/wp-content/uploads/2011/06/singleprogressbar.jpg" alt="" title="singleprogressbar" width="102" height="80" class="aligncenter size-full wp-image-94" /></a>

<p></p><strong>Step 1: Insert a ProgressBar UI component into our listitem.xml layout file.</strong>

<p></p>We'll put the ProgressBar element in the same spot we intend the avatar to occupy. This way, we can just set the visibility of the avatar ImageView to "gone" until the image is ready, and then switch the ImageView to "visible" and the ProgressBar to "gone" when we display the image. Here's the updated layout file:

<p></p><code lang="xml">
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
  android:layout_height="wrap_content" 
  android:gravity="left|center"
  android:layout_width="wrap_content" 
  android:paddingBottom="5px"
  android:paddingTop="5px" 
  android:paddingLeft="5px">
	
  <RelativeLayout
    android:layout_width="wrap_content"
    android:layout_height="fill_parent">
    <ImageView
      android:id="@+id/avatar"
      android:layout_width="wrap_content"
      android:layout_height="fill_parent"
      android:layout_marginRight="6dip"
      android:visibility="gone" />
    <ProgressBar
      android:id="@+id/progress_bar"
      android:layout_width="wrap_content" 
      android:layout_height="wrap_content"
      android:maxWidth="30dip"
      android:minWidth="30dip"
      android:maxHeight="30dip"
      android:minHeight="30dip"
      android:layout_marginRight="6dip"
      android:indeterminate="true" />
  <LinearLayout
    android:orientation="vertical"
    android:layout_width="0dip"
    android:layout_weight="1"
    android:layout_height="fill_parent">
    <TextView android:id="@+id/username"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:gravity="center"/>
    <TextView android:id="@+id/message" 
      android:layout_width="wrap_content" 
      android:layout_height="wrap_content"
      android:layout_marginLeft="10px" 
      android:textColor="#0099CC"/>
  </LinearLayout>
</LinearLayout>
</code>

<p></p>You'll see that i've added something more than a ProgressBar element: a RelativeLayout. If we don't set the ProgressBar's height to fill_parent, it will squish our list items vertically to match it's height. However, the ProgressBar element, unlike an ImageView, will stretch and distort if told to "fill_parent" in its layout_height or layout_width value. to avoid distortion of the indeterminate ProgressBar or the hiding of the text from our tweets, I've added the RelativeLayout to encapsulate ProgressBar and ImageView alike, providing the ability to stretch vertically and buffer our round ProgressBar with dead space. 

<p></p>Note also that I've set the sizes of the ProgressBar to match the size of the avatars we download from Twitter. You will want to change these size settings as appropriate for your app. This, combined with the layout hack above, will make our tweet items have a consistent layout, whether we are displaying avatars or a ProgressBar.

<p></p><strong>Step 2: TweetImageAdapter and our ViewHolder class need to be altered to store the ProgressBar for each list item, and pass it to the ImageManager.displayImage() method so it can be made invisible when the correct image is displayed.</strong>

<p></p>First we add a ProgressBar member to the ViewHolder class:

<p></p><code lang="java">
public static class ViewHolder {
  public TextView username;
  public TextView message;
  public ImageView image;
  public ProgressBar progress; //ADDED
}
</code>

<p></p>Then we alter the tweetItemAdapter.getView() method to retrieve and pass along this ProgressBar object to the ImageManager through the displayImage() method:

<p></p><code lang="java">
@Override
public View getView(int position, View convertView, ViewGroup parent) {
  View v = convertView;
  ViewHolder holder;
  if (v == null) {		
    LayoutInflater vi = 
      (LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
    v = vi.inflate(R.layout.listitem, null);
    holder = new ViewHolder();
    holder.username = (TextView) v.findViewById(R.id.username);
    holder.message = (TextView) v.findViewById(R.id.message);
    holder.image = (ImageView) v.findViewById(R.id.avatar);
    holder.progress = (ProgressBar) v.findViewById(R.id.progress_bar); //ADDED
    v.setTag(holder);
  }
  else
    holder=(ViewHolder)v.getTag();

  final Tweet tweet = tweets.get(position);
  if (tweet != null) {
    holder.username.setText(tweet.username);
    holder.message.setText(tweet.message);
    holder.image.setTag(tweet.image_url);
    imageManager.displayImage(tweet.image_url, activity, 
      holder.image, holder.progress); //CHANGED
  }
  return v;
}
</code>

<p></p>Ok, now our ImageManager, the class responsible for updating the image displayed when an avatar has finished downloading, has access to the ProgressBar component as well as the ImageView. We're ready for the last step.

<div class="note" style="background-color:#f2f2e6;margin-top:50px;margin-bottom:50px">
<div style="padding:5px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-style:oblique;font-size:30px;">Learn Node.js by Example</div>
<p style="padding:10px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-size:18px;"> Take my online course featuring screencasts and sample projects!</p>
<div class="signup_button">
<a href="http://www.udemy.com/learn-nodejs-by-example/">
<h3 style="color:#ffffff">Sign up now</h3>
<p>30-day money back guarantee!</p>
</a>
</div>
</div>

<p></p><strong>Step 3: Change the image display methods to manage visibility of the ImageView and ProgressBar list item components, as well as to set the appropriate source image for the ImageView. Recall that we had two methods capable of displaying an image, one that could do so immediately (if the image was found in our local cache) and one that operated asynchronously, displaying the image as soon as the background download process is complete. </strong>

<p></p>The first method, displayImage(), can be altered like so:

<p></p><code lang="java">
public void displayImage(String url, Activity activity, 
  ImageView imageView, ProgressBar progressBar) {
  
  if(imageMap.containsKey(url)) {
    imageView.setImageBitmap(imageMap.get(url));
    progressBar.setVisibility(View.GONE); //ADDED
    imageView.setVisibility(View.VISIBLE); //ADDED
  }
  else {
    queueImage(url, activity, imageView, progressBar);
    imageView.setVisibility(View.GONE); //ADDED
    progressBar.setVisibility(View.VISIBLE); //ADDED
  }
}
</code>

<p></p>Notice that the ProgressBar object is now being passed in, as designed in the last step. Using this, we are able to set visibility of the ImageView/ProgressBar UI elements (making sure only one is visible at any given time), depending on whether the image bitmap has been set or not.

<p></p>Additionally, we pass the progressBar object along into the queueImage method - more on that soon.

<p></p>The second place we need to add this visibility shuffle code is the run() method of the Runnable BitmapDisplayer class, which will be invoked on the UI thread, from the background thread, to set the image. Same basic changes - the BitmapDisplayer class now looks like:

<p></p><code lang="java">
//Used to display bitmap in the UI thread
private class BitmapDisplayer implements Runnable {
  Bitmap bitmap;
  ImageView imageView;
  ProgressBar progressBar;
		
  public BitmapDisplayer(Bitmap b, ImageView i, ProgressBar p) {
    bitmap = b;
    imageView = i;
    progressBar = p;
  }
		
  public void run() {
    if(bitmap != null) {
      imageView.setImageBitmap(bitmap);
      progressBar.setVisibility(View.GONE); //ADDED
      imageView.setVisibility(View.VISIBLE); //ADDED
    }
    else {
      imageView.setVisibility(View.GONE); //ADDED
      progressBar.setVisibility(View.VISIBLE); //ADDED
    }
  }
}
</code>

<p></p>Step 5: Last, but not least, you'll notice above that the BitmapDisplayer object needs to have a ProgressBar object passed in as an input parameter. The BitmapDisplayer object in TweetView is populated by data from ImageRef objects, so ImageRef objects now need to contain this additional object. Let's take care of that, and while we are at it, change the ImageQueueManager run() method to get the BitmapDisplayer the updated input parameters that it needs:

<p></p><code lang="java">
private class ImageRef {
  public String url;
  public ImageView imageView;
  public ProgressBar progressBar;

  public ImageRef(String u, ImageView i, ProgressBar p) {
    url = u;
    imageView = i;
    progressBar = p;
  }
}

private class ImageQueueManager implements Runnable {
  @Override
  public void run() {
    try {
      while(true) {
        // Thread waits until there are images in the 
        // queue to be retrieved
        if(imageQueue.imageRefs.size() == 0) {
          synchronized(imageQueue.imageRefs) {
            imageQueue.imageRefs.wait();
          }
        }

        // When we have images to be loaded
        if(imageQueue.imageRefs.size() != 0) {
          ImageRef imageToLoad;

          synchronized(imageQueue.imageRefs) {
            imageToLoad = imageQueue.imageRefs.pop();
          }

          Bitmap bmp = getBitmap(imageToLoad.url);
          imageMap.put(imageToLoad.url, bmp);
          Object tag = imageToLoad.imageView.getTag();

          // Make sure we have the right view - thread safety defender
          if(tag != null && ((String)tag).equals(imageToLoad.url)) {
            BitmapDisplayer bmpDisplayer = 
              new BitmapDisplayer(bmp, imageToLoad.imageView, 
                imageToLoad.progressBar);

            Activity a = 
              (Activity)imageToLoad.imageView.getContext();

            a.runOnUiThread(bmpDisplayer);
          }
        }
					
        if(Thread.interrupted())
          break;
      }
    } catch (InterruptedException e) {}
  }
}
</code>

<p></p>All done!  Now we will see a lovely perpetually spinning progress wheel, sure to delight users while they wait for Twitter avatars to be downloaded. Best of all, through some simple layout modifications, we should see no distortion or inconsistency in our item layouts, leading to a pleasant user experience.

<p></p>I've created a new branch of the TweetView Github project containing these modifications. You can find it here: <a href="https://github.com/cacois/TweetView/tree/progress_bar">progress_bar branch</a>.  Just switch to this branch to see this version of the app.

<p></p>As always, comments or questions are very welcome. Happy coding!


<p></p>
<p></p>
<small><small><small>Technorati code: 7ESRQSJMX8BM</small></small></small>]]></content:encoded>
		<excerpt:encoded><![CDATA[The Android ProgressBar is a useful UI component that most developers will quickly find need of.  Displaying progress, even an indeterminate "loading" indicator, provides crucial feedback to a user, eliminating frustration and confusion while your app is churning away in the background. 

Today I'll demonstrate using an indeterminate ProgressBar within a ListView while loading web content. I'll be modifying the <a href="https://github.com/cacois/TweetView">TweetView project</a> from my previous <a href="http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images/">post</a>. ]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date><![CDATA[2011-06-24 20:25:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-25 00:25:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[android-development-tutorial-progressbar-example]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[341620113]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Android Development Tutorial: ProgressBar Example]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, tutorial, example, listview, bitmap, image, twitter, progress bar, asynchronous, progressbar, ui]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The Android ProgressBar is a useful UI component that most developers will quickly find need of.  Displaying progress, even an indeterminate "loading" indicator, provides crucial feedback to a user, eliminating frustration and confusion while your app is churning away in the background. 

Today I'll demonstrate using an indeterminate ProgressBar within a ListView while loading web content. I'll be modifying the TweetView project from my previous post. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The Android ProgressBar is a useful UI component that most developers will quickly find need of.  Displaying progress, even an indeterminate "loading" indicator, provides crucial feedback to a user, eliminating frustration and confusion while your app is churning away in the background. 

Today I'll demonstrate using an indeterminate ProgressBar within a ListView while loading web content. I'll be modifying the <a href="https://github.com/cacois/TweetView">TweetView project</a> from my previous <a href="http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images/">post</a>. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, tutorial, example, listview, bitmap, image, twitter, progress bar, asynchronous, progressbar, ui]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_mcf_override]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_mcf_retweet]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_mcf_facebook]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_mcf_stumble]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/06/progressbar.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The Android ProgressBar is a useful UI component that most developers will quickly find need of.  Displaying progress, even an indeterminate "loading" indicator, provides crucial feedback to a user, eliminating frustration and confusion while your app is churning away in the background. 

Today I'll demonstrate using an indeterminate ProgressBar within a ListView while loading web content. I'll be modifying the <a href="https://github.com/cacois/TweetView">TweetView project</a> from my previous <a href="http://codehenge.net/blog/2011/06/android-development-tutorial-asynchronous-lazy-loading-and-caching-of-listview-images/">post</a>. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, tutorial, example, listview, bitmap, image, twitter, progress bar, asynchronous, progressbar, ui]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>336</wp:comment_id>
			<wp:comment_author><![CDATA[Adi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sarinaditya@rediff.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-11-03 22:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-11-04 02:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much . . .  your tutorials have helped me a lot .. looking  forward for newer ones.
Please add some tuts on location based services on Android...Thanks again]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[355308258]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>321</wp:comment_id>
			<wp:comment_author><![CDATA[KooL]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kool.luking4u@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-10-19 08:31:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-10-19 12:31:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot ... it helped me a lot :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[339067145]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>300</wp:comment_id>
			<wp:comment_author><![CDATA[Nsh_chatlani]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nsh_chatlani@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-13 12:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-13 12:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much. :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[308562085]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>280</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[awpflug@my.waketech.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-26 20:14:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-26 20:14:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am getting duplicate images all over the scroll when scrolling...Also, am trying to implement a default image if no image is available and getting errors...any ideas/suggestions?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[296135256]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>260</wp:comment_id>
			<wp:comment_author><![CDATA[fizo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ibro_07@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-05 22:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-05 22:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sorry i discovered the problem. forgot to add the setTag() method.. Great job mate]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>259</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[278849327]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[278865637]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>258</wp:comment_id>
			<wp:comment_author><![CDATA[Fizo]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ibro_07@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-05 22:34:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-05 22:34:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[278845537]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>259</wp:comment_id>
			<wp:comment_author><![CDATA[Hafiz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ibro_07@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-05 22:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-05 22:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi, great tutorial here. Ive got a slight problem with it though. I implemented it in my project, however, the images dont update in the listview, they only update when i scroll the listview items down or up, been trying to figure out what the cause might be]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[278849327]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>249</wp:comment_id>
			<wp:comment_author><![CDATA[sathish android]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[android.sathish@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-19 06:25:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-19 06:25:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine Aaron Cois,
I am very thankful to you for considering my suggestion and posted this new one. Thanks a lot.

I hope my ideas are very helpful to every one including me if you solve those?
By reading and understanding your solutions,beginners like me are getting very good knowledge on android development that is a great thing.

Can you please suggest a work around for the below requirement also?
Requirement:
            After showing list view with images from the urls , i want to click on one list item then needs to show camera, capture a new image using camera and update the list view with this newly captured image in place of previously selected list item's image.

Can you give me some suggestions to integrate the above requirement into our "TweetView" like project?

Thanks in advance,
Sathish.
sathya.sri69@gmail.com]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[256892333]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>242</wp:comment_id>
			<wp:comment_author><![CDATA[Weber Antoine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weber.antoine.pro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-08 07:11:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-08 07:11:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[problem solved, I was forgetting to do the imageView.setTag(url) so the Thread safety verification never called BItmapDisplayer. So i added that one in the 'else' part of the displayImage fonction, and it work like a charm. Thanks again for this great piece of code :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>238</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[244206585]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245697116]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>238</wp:comment_id>
			<wp:comment_author><![CDATA[Weber Antoine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weber.antoine.pro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-06 16:38:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-06 16:38:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[in fact, in order to improve performance I am using another type of "holder" which do the "findViewById" only if needed :

public class ListItemWrapper {
	View base;
	HashMap map = new HashMap();
	//HashMap icon = new HashMap();
	
	ListItemWrapper(View base){
		this.base = base;
	}
	
	public View getLabel(int key){
		if(!map.containsKey(key)){
			map.put(key, (View) base.findViewById(key));
		}
		return map.get(key);
	}
}

I'm really interested in keeping that sort of helper because I have lots of textView in my list items, who need to be set dynamicaly.
Have you an idea on how I could mix your ImageManager with that sort of holder? And still have the first element up to date ? ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>237</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[244159637]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[244206585]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>236</wp:comment_id>
			<wp:comment_author><![CDATA[Weber Antoine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weber.antoine.pro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-06 08:42:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-06 08:42:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Maybe we need to .invalidate() the listView (or the item in it) each time an image has been received. I will search on that and keep you posted.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>234</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243604126]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243639299]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>237</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-06 15:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-06 15:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That shouldn't be necessary, it should be updating on its own. Depending on how you add items to a ListView, it may or may not automatically invoke notifyDataSetChanged(), which is what needs to happen to force the ListView to refresh.

I'll run some tests in the github code and see if I can reproduce the issue.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>236</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243639299]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[244159637]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>235</wp:comment_id>
			<wp:comment_author><![CDATA[Weber Antoine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weber.antoine.pro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-06 08:21:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-06 08:21:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PS: the tag "/RelativeLayout" seems to miss in your first xml file. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>234</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243604126]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243607906]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>234</wp:comment_id>
			<wp:comment_author><![CDATA[Weber Antoine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[weber.antoine.pro@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-06 08:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-06 08:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello cacois,

Thanks a lot for this tutorial ( and all the previous ones) . :)
Those really helped me to understand the Asynchronous loading.

However, I'm steel getting problem with this, in fact compilation worked well, but I have progressBars still displayed until I scroll the listView (even if I know that images are allready loaded [they are small and on a local server] ). Could you tell me if I am missing something, and how i can get this code working for the first elements of the listView even whithout scrolling?

Regards,
Antoine

PS: The  tag seems to miss in your first xml file.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[243604126]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>243</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-07-08 13:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-07-08 13:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic! That would definitely do that - the tag is a little bit of a hack, but necessary to make sure the images don't get mixed up.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>242</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245697116]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245820810]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>390</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Nelson]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[n.n3ls0n@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-05 02:49:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-05 07:49:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey man your tutorials have been great for me. I have used the base concepts of your code and expanded upon it a ton. I am now pulling a whole bunch of data from a remote MySQL database and lazy loading it in a listview. Great job on these. I think I read a couple tutorials back that you said you were going to do a follow up tutorial on how to load a certain number of objects at a time and then load the next set of objects when needed (kind of like the official twitter app). Any word on if you're still doing that?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[429931326]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>392</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-06 21:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-07 02:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Nick! Thanks for the comment. I'm definitely still planning on doing a number of follow-up tutorials to this one, including the topic you mentioned. I've been super busy working on a screencast course for node.js, and as soon as its published I'll owe my android tutorials some love. 

I'll try to keep you guys posted!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>390</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[429931326]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[431439997]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>406</wp:comment_id>
			<wp:comment_author><![CDATA[Roshni]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cutypie55@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[27.107.41.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-19 02:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-19 07:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sir,
i want a tutorial on "how the data is dynamically added in database via list-view in android app"]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[443196611]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>484</wp:comment_id>
			<wp:comment_author><![CDATA[Ravikumar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nayaka.ravikumar@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.83.37.41]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-27 04:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-27 08:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome code]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>243</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[245820810]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[568681489]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>507</wp:comment_id>
			<wp:comment_author><![CDATA[Dinesh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dinesh@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[61.12.109.66]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-27 08:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-27 12:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dude change the color. Dark color is affecting eyes.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[630773296]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>528</wp:comment_id>
			<wp:comment_author><![CDATA[Kailash Pawar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/kailash.pawar</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.97.40.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-11-05 00:20:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-11-05 05:20:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am new to Android.
Hello Sir
I have to download around 36 images. I have the URL of all images.!!
Where I have to insert those URLs in code..??
please help
and want those images to be in Grid View]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[700687136]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Book Review: Ghost in the Wires: My Adventures as the World&#039;s Most Wanted Hacker by Kevin Mitnick</title>
		<link>http://codehenge.net/blog/2011/08/book-review-ghost-in-the-wires-my-adventures-as-the-worlds-most-wanted-hacker-by-kevin-mitnick/</link>
		<pubDate>Mon, 08 Aug 2011 23:03:47 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[<img alt="Ghost in the Wires" src="http://codehenge.net/blog/wp-content/uploads/2011/08/ghost-in-the-wires.jpg" title="Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker" width="300" height="300" align="left"/>Kevin Mitnick's autobiography, <a href="http://www.amazon.com/Ghost-Wires-Adventures-Worlds-Wanted/dp/0316037702">Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker</a>, reads like a classical tragedy. The hero, Mitnick, resolves as neither good nor evil, but human, displaying traits through both actions and the narration itself that underscore his normalcy. Starting the story with his childhood, Mitnick introduces behaviors and motivations that many readers will quickly recognize in younger versions of themselves or their peers. As his story progresses, Mitnick barrels relentlessly towards disaster, unable to overcome tragic flaws that can only be described as compulsion - to hack, to explore, to conquer – and a delusion of invincibility, the familiar hubris of youth. 

From his roots in phone phreaking (rigging telephone systems to receive free calls) at an early age, Mitnick steadily increases the potency of his technical exploits, gaining full access to phone company switches, mastering social engineering, absorbing computer hacking techniques and racing to decipher and conquer newer, more sophisticated operating systems and infrastructures. Hacking targets from General Telephone, to DEC, and eventually Sun Microsystems, Mitnick doggedly hunts larger game, never satisfied with his previous conquests. Though his first stint in prison lead to a brief “clean” period, Mitnick eventually stops even entertaining the idea of not hacking, even after it has caused his marriage to deteriorate and sent him on the run from numerous federal agencies. Like watching the heroine of a slasher flick descend unwittingly into a dark basement, the reader feels the tense burden of omniscience as Kevin’s hacking leads him to greater and greater risks, and as the odds of escape dwindle. Perhaps this tension, the sinking feeling upon watching a boy (who could at the onset have been myself or any of the intrinsically curious technophiles I know) dig his way farther from the safety of society is what made me unable to put this book down.

Something about this account of a life full of strange twists and turns grabbed hold of me, and refused to let go. An earnest honesty comes through as Kevin recounts his exploits; a candor that manages even to be reinforced by his occasional anger and judgment of the authorities and legal system that finally apprehend him. This is a story told by a man neither pretending to be faultless, nor admitting fault. Never does Kevin express remorse for his actions directly, aside from lamenting the stress he brought to his family. However, neither does he shy away from mistakes, or make excuses for his actions. He straightforwardly explains what he did and how he did it, occasionally pausing in an attempt to explain, as best he can, why. 
<img alt="" src="http://codehenge.net/blog/wp-content/uploads/2011/08/freekevin.jpg" title="Free Kevin" class="alignright" width="404" height="92" />
Mitnick writes his story deliberately, taking great pains to make both his life and his hacking exploits accessible and understandable to a non-technical reader. For computer professionals and enthusiasts, he occasionally allows himself a diversion into technical descriptions of some of his most clever intrusions, though security professionals may long for more intricate details. If I felt the lack of anything, it was a deeper insight into Mitnick’s inner monologues as his life progressed. As I read, I found myself constantly wondering what his reasoning must be, how fear weighed against obsession as he continued to hack - even as he hid behind false identities to evade the law. In some ways the nagging questions add to the experience, forcing the reader to engage in constant speculation, and even self-reflection. 

Mitnick’s story serves as a much-needed reminder, in the modern resurgence of hacker paranoia, that most successful hacking was, and continues to be, an empire built upon social engineering. The delicate art of quickly building trust and convincing a mark, knowingly or unknowingly, to divulge sensitive information remains the cornerstone of sophisticated hacking operations. The irrationally inflated charges levied against Mitnick upon his final arrest, and the questionable treatment of his constitutional rights during his incarceration and trial underscore the fear of hackers and the confusion and violation they represent in the public mind. We fear what we don’t understand, we fear what we cannot see, and on those charges the public greatly feared Kevin Mitnick. 

Those fascinated by the power of information, and the ease with which trust can be gained and exploited in our modern world will find this title an engaging read. Security professionals will enjoy the book on a distinctly different level, as a literal open book on their opponents’ mindset and tactics. Whether remembering the media circus surrounding Kevin Mitnick’s hacker years and trial, or hearing the saga for the first time, technical and non-technical readers alike will be intrigued by a window into the life and mind of the most notorious hacker of our time. 

<em>Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker will be officially released on August 15, 2011</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[Here is my early review of "Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker", the autobiography of Kevin Mitnick, one of the most notorious hackers in history.]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date><![CDATA[2011-08-08 19:03:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-08 23:03:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[book-review-ghost-in-the-wires-my-adventures-as-the-worlds-most-wanted-hacker-by-kevin-mitnick]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="post_tag" nicename="hacking"><![CDATA[hacking]]></category>
		<category domain="post_tag" nicename="review"><![CDATA[review]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/ghost-in-the-wires.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/ghost-in-the-wires.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[An early review of "Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker", the autobiography of Kevin Mitnick, one of the most notorious hackers in history.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[hacker, review, book, autobiography, kevin, mitnick, hacking]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Book Review: Ghost in the Wires: My Adventures as the World's Most Wanted Hacker by Kevin Mitnick]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[hacker, review, book, autobiography, kevin, mitnick, hacking]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[An early review of "Ghost in the Wires: My Adventures as the World’s Most Wanted Hacker", the autobiography of Kevin Mitnick, one of the most notorious hackers in history.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[380717535]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/12/ghost-in-the-wires-150x150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>261</wp:comment_id>
			<wp:comment_author><![CDATA[@Emad]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/Atarzadeh</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-08-09 06:41:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-08-09 06:41:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It has been wonderful. So well written that the audience will think it is made​​.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[281012952]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Installing and Using ADB in OSX</title>
		<link>http://codehenge.net/blog/2011/08/installing-and-using-adb-in-osx/</link>
		<pubDate>Mon, 29 Aug 2011 03:34:40 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150.jpg"><img src="http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150-150x150.jpg" alt="" title="android_vector_200_150" width="150" height="150" class="alignleft size-thumbnail wp-image-104" /></a><a href="http://developer.android.com/guide/developing/tools/adb.html">Android Debug Bridge (ADB)</a> is, according to the Android developer documentation, "a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device". In short, ADB allows you to effectively and easily communicate with an Android device or emulator from your computer. You can use ADB to transfer files, install apps, access bug reports, or access the shell of your Android device remotely, and that's just the beginning!  ADB is a fundamental tool in the Android developer's toolkit, and learning to use it will save you a ton of time and trouble.

In this guide, I'm going to show you how to install and use ADB.

Step 1: If you haven't already, download the <a href="http://developer.android.com/sdk/index.html">Android SDK for OSX</a>. The most recent one should be fine.  Unzip the file, and move the unzipped folder to wherever you like. Where you put it doesn't much matter, but you have to remember where it is so you can reference the libraries whenever you need to.

/Developer/SDKs/ seems like a cozy spot.

Step 2: Navigate into the unzipped /android-sdk-mac_x86/tools directory and launch the Android SDK Manager application by double-clicking on the executable file entitled "android" or typing 

<code lang="bash">
./android 
</code>

in the terminal. You should get an application window similar to this:

<center>
<a href="http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager1.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/08/android_manager1.png" alt="" title="android_manager" width="500" height="303" class="alignnone size-full wp-image-106" /></a>
</center>
Once the application has launched, select <em>Installed Packages</em> on the left-hand side menu, and check the box beside <em>Android SDK Platform-tools, revision <#></em>. This is the package that includes ADB, along with some other useful tools.

Click the <em>Install Selected</em> button, and wait while everything is installed. 

Step 3: Now ADB is installed, and you are ready to use it to interface with your Android device! Let's test it. Close your terminal window and open a brand new one, just to be safe. Now type

<code lang="bash">
adb devices
</code>

You should see the output:

<code lang="bash">
List of devices attached
</code>

Of course, ADB sees no devices because none are connected to your computer! Lets fix that. Grab your Android device, and bring up the Settings menu. Go to Settings->Development and make sure the 'USB Debugging' option is checked. Now plug your Android device into a USB port on your computer. Now try 

<code lang="bash">
adb devices
</code>

again. You should see:

<code lang="bash">
List of devices attached
XXXXXXXXXXXXX device
</code>

Congratulations, ADB is installed and working! That number is the unique ID of your device. You can just type

<code lang="bash">
adb shell
</code>

to get an ADB shell terminal into your device, and run some commands. 

One of my personal favorite features of ADB is the ability to easily push files from your computer onto your device, without even having to open up an ADB shell. From your computer terminal use the command

<code lang="bash">
adb push <source filepath> <destination filepath on device>
</code>

It's that easy!

Other useful commands include

<code lang="bash">
adb install <path_to_apk>
</code>

to install an app, and

<code lang="bash">
adb forward tcp:<port_num> tcp:<port_num>
</code>

to set up arbitrary port forwarding.

See the <a href="http://developer.android.com/guide/developing/tools/adb.html">developer documentation</a> for a full list of the ADB commands. 
]]></content:encoded>
		<excerpt:encoded><![CDATA[Android Debug Bridge (ADB) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device. You can use ADB to transfer files, install apps, access bug reports, or access the shell of your Android device remotely, and that's just the beginning! In this guide, I'm going to show you how to install and use ADB.]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date><![CDATA[2011-08-28 23:34:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-29 03:34:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[installing-and-using-adb-in-osx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adb"><![CDATA[adb]]></category>
		<category domain="post_tag" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android_vector_200_150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Installing and Using ADB in OSX]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Android Debug Bridge (ADB) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device. You can use ADB to transfer files, install apps, access bug reports, or access the shell of your Android device remotely, and that's just the beginning! In this guide, I'm going to show you how to install and use ADB.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, debug, adb, development, tools, guide]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Android Debug Bridge (ADB) is a versatile command line tool that lets you communicate with an emulator instance or connected Android-powered device. You can use ADB to transfer files, install apps, access bug reports, or access the shell of your Android device remotely, and that's just the beginning! In this guide, I'm going to show you how to install and use ADB.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, debug, adb, development, tools, guide]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[398603736]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>310</wp:comment_id>
			<wp:comment_author><![CDATA[Rooting a Motorola Photon Without a Dock | Codehenge]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://codehenge.net/blog/2011/08/rooting-a-motorola-photon-without-a-dock/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.236.151.98]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-09-21 08:32:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-09-21 12:32:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Installing and Using ADB in OSX [...]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316608330.2811";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1316609714.372";s:7:"message";s:45:"cacois changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"cacois";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Rooting a Motorola Photon Without a Dock</title>
		<link>http://codehenge.net/blog/2011/08/rooting-a-motorola-photon-without-a-dock/</link>
		<pubDate>Tue, 30 Aug 2011 00:09:33 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif"><img src="http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif" alt="" title="android-root" width="250" height="250" class="alignleft size-full wp-image-110" /></a>

While the first methods to gain root access to the Android-powered Motorola Photon required an expensive webtop dock, we were soon provided an easy, dock-less <a href="http://forum.xda-developers.com/showthread.php?t=1216131">method</a> for rooting by the incomparable Edgan at xda-developers. For those not yet battle-hardened by Android rooting attempts, I'm providing a clear step-by-step guide to rooting a Motorola Photon, with detailed instructions for points of common confusion.

Note: I'm using OSX in this guide, but there aren't any significant differences when using other operating systems.

First, let's get some tools set up on your Photon. 

Install two apps from the Android Marketplace:

<ul>
<li><a href="https://market.android.com/details?id=com.noshufou.android.su&feature=search_result">Superuser</a></li>

<li><a href="https://market.android.com/details?id=jackpal.androidterm&feature=search_result">Android Terminal Emulator</a></li>
</ul>

Superuser won't be of much use until you have root access, but you can fire up the Android Terminal Emulator right now if you want to see what it does. It basically gives you a linux prompt on your Android device, allowing you to issue standard linux commands to the underlying operating system. We'll use this to test our root access when we are finished.

The first thing we need to do is get the file <a href="http://cdn.multidownld.com/files/get/C6BA2NeyY9/photon-torpedo.tar"> photon-torpedo.tar</a> onto your Photon's internal memory. In my opinion, the easiest way of doing this is using my old friend, and an essential Android development tool, ADB.  If you don't have ADB installed and working, check out my previous guide to <a href="">Installing and Using ADB in OSX</a> (or check Google for a guide for your OS, though its fairly similar) for help on using ADB to access your Android device.  

With ADB installed, download the photon-torpedo.tar file to your computer. I downloaded mine to:

<code lang="bash">
/Users/constantinecois/Downloads
</code>

but it doesn't really matter where you put it. 

Navigate to the location of photon-torpedo.tar in a Terminal window. Now we need to attach the phone. Make sure the ‘USB Debugging’ is enabled on your phone (Settings->Development), and plug your phone into a USB port on your computer. Motorola has been nice enough to provide a cable for this with the phone charger. 

Just to make sure we have ADB installed and working, type

<code lang="bash">
adb devices
</code>

You should see something like:

<code lang="bash">
List of devices attached
XXXXXXXXXXXXX device
</code>

If not, go back and make sure to <a href="http://codehenge.net/blog/2011/08/installing-and-using-adb-in-osx/">install ADB</a> correctly. 

When you are ready to go, we want to get photon-torpedo.tar into /data/tmp on your Photon. To do this, issue the following ADB command in your terminal:

<code lang="bash">
adb push <path-to-file>\photon-torpedo.tar /data/tmp
</code>

Now bring up an ADB shell: 

<code lang="bash">
adb shell
</code>

(or use the Android Terminal Emulator app, but its a bit more tedious to type this way). Currently, when we fire up the shell, we are issuing commands as a standard, non-root user. By the time we are done here, we will get a nice, empowering root prompt. Navigate to the directory you pushed photon-torpedo.tar to:

<code lang="bash">
cd /data/tmp
</code>

Unzip the file:

<code lang="bash">
/bin/tar xf /data/tmp/photon-torpedo.tar
</code>

Now run the exploit that will allow you to gain root access:

<code lang="bash">
/data/tmp/photon-torpedo.sh
</code>

At this point you may or may not see the following error

<code lang="bash">
$ ./photon-torpedo.sh
./photon-torpedo.sh
ERROR: ld.so: object 'libpcprofile.so' cannot be loaded as audit interface: unde
fined symbol: la_version; ignored.

Fatal server error:
Server is already active for display 0
If this server is no longer running, remove /tmp/.X0-lock
and start again.


Please consult the The X.Org Foundation support
at http://wiki.x.org
for help.

ddxSigGiveUp: Closing log
</code>

This doesn't matter, as long as the next prompt is a root prompt:

<code lang="bash">
root@localhost:/data/tmp#
</code>

If you have this root prompt, you are home free. Run one more command to secure permanent root access:

<code lang="bash">
/data/tmp/install-su.sh
</code>

That's it!  If you want to verify root access, the Superuser app will now pop up any time an app requests root access, allowing you to allow or deny. Go ahead and launch Android Terminal Emulator (you can use any other root-enabled app you want for this test, if you like) and type:

<code lang="bash">
su -
</code>

at the command prompt. This just asks to simulate the root user, a very direct way of testing root access. You should see the Superuser app pop up a window looking something like this:

<center>
<a href="http://codehenge.net/blog/wp-content/uploads/2011/08/Terminal-Emulator-SuperUser-Access.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/08/Terminal-Emulator-SuperUser-Access.png" alt="Terminal Emulator SuperUser Access Image" title="Terminal Emulator SuperUser Access" width="320" height="480" class="alignnone size-full wp-image-109" /></a>
</center>
I'd recommend denying this access, just to make sure you don't issue any unintentional commands as root. But the fact that you were able to request root access successfully demonstrates that you now have root access. 

I'll leave you with a great <a href="http://lifehacker.com/5806135/the-10-best-android-apps-that-make-rooting-your-phone-worth-the-hassle">Lifehacker post</a> listing some of the best apps you can only take advantage of with a rooted phone. Enjoy!]]></content:encoded>
		<excerpt:encoded><![CDATA[A clear step-by-step guide to rooting a Motorola Photon using a method that does not require a web dock, or any other accessories. Includes detailed instructions for points of common confusion.]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date><![CDATA[2011-08-29 20:09:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-30 00:09:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rooting-a-motorola-photon-without-a-dock]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2011/08/android-root.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Rooting a Motorola Photon Without a Dock]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A clear step-by-step guide to rooting a Motorola Photon using a method that does not require a web dock, or any other accessories. Includes detailed instructions for points of common confusion.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A clear step-by-step guide to rooting a Motorola Photon using a method that does not require a web dock, or any other accessories. Includes detailed instructions for points of common confusion.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, motorola, photon, root]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[android, motorola, photon, root]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[399475475]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[Guest1033]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[matcheydj@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.28.156.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-05 18:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-05 23:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What if you don't have a root prompt after the error?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[457288161]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>423</wp:comment_id>
			<wp:comment_author><![CDATA[Guest1033]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[matcheydj@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.28.156.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-05 19:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-06 00:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nevermind, it worked! I ran ./install-su.sh from the the Android Terminal Emulator on my phone, since the root prompt showed up there. I still got the error "rm: cannot remove '/lib/libphoton-torpedo.so': No such file or directory") but I checked with the su command at prompt, and the Superuser Request popped up. Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[457297947]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>424</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-06 08:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-06 13:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to hear it!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>423</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[457297947]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[457770176]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[kurt]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kurt4949@msn.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.28.89.153]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-27 12:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-27 16:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[photon-torpedo.tar link doesn't work]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[539813724]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>466</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-28 10:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-28 14:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the heads up. I switched out the link for a mirror, let me know if you have any issues.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>463</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[539813724]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540322226]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>469</wp:comment_id>
			<wp:comment_author><![CDATA[kurt]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kurt4949@msn.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[23.28.89.153]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-31 00:14:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-31 04:14:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for updating the link.  I ended up using superoneclick which did the trick as I couldn't find the file anywhere at the time.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>466</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540322226]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[542796555]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Getting Started With node.js and socket.io (v0.7+) - Part 2</title>
		<link>http://codehenge.net/blog/2011/12/getting-started-with-node-js-and-socket-io-v0-7-part-2/</link>
		<pubDate>Mon, 05 Dec 2011 05:12:56 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float:left;margin:0 10px 5px 0;">
  <img alt="" src="http://www.webresourcesdepot.com/wp-content/uploads/socket-io-nodejs.jpg" title="node.js" class="alignleft" width="300" height="250" />
</div>

<p>In my <a href="http://codehenge.net/blog/2011/04/getting-started-with-node-js-and-socket-io-part-1/" title="Getting Started with node.js and socket.io - Part 1">last post</a> I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I'll be writing a simple http server and some client-side html/javascript to go with it. (Note: I'm assuming readers have a basic understanding of html and javascript) My goal here is to go step by step, to see each piece fit together. People more experienced with client/server programming concepts may want to skim a little. You can also download the test code created here as files at the bottom of the post.</p>

<p>As a sanity check, make sure node is installed and in your path by typing</p>

<pre><code>$ node -v
</code></pre>

<p>You should see something like</p>

<p><img class="alignleft size-full wp-image-34" title="Screen shot 2011-04-29 at 11.37.30 PM" src="http://codehenge.net/blog/wp-content/uploads/2011/04/Screen-shot-2011-04-29-at-11.37.30-PM.png" alt="" width="500" height="28" />  </p>

<p>Now we're ready to write some code. Let's start with the server. Navigate to the directory you want to test out of, and make a file called socketio-test.js for your test server:  </p>

<pre><code>$ touch socketio-test.js
</code></pre>

<p>Open this file in your favorite text editor. Start by defining some variables at the top:  </p>

<pre><code>var http = require('http')
, url = require('url')
, server;
</code></pre>

<p>We're only including the bare essentials here, enough to start our server and receive http requests. We won't even included the socket.io library yet, but we'll get to that soon. Now let's define the server:  </p>

<pre><code>server = http.createServer(function(req, res) {
  // server code
  var path = url.parse(req.url).pathname;
  switch (path) {
    case '/':
      res.writeHead(200, {'Content-Type': 'text/html'});
      res.write('Hello!\n');
      res.end();
      break;
    default: send404(res);
  }
}),

send404 = function(res) {
  res.writeHead(404); 
  res.write('404'); 
  res.end(); 
};

server.listen(8080);
</code></pre>

<p>Ok, check out the above block of code. We are creating an http server object by instantiating that server variable we defined above using the http library. We are then defining its behavior by parsing any urls it receives and throwing the path of the url into a switch/case statement. Notice that we could define this behavior based on anything we wanted, not necessarily the url path. Here we have just defined a case for path '/', so our server will only respond to requests to the root path. For these requests, it will send "Hello!" back to the client. For all requests to other paths, we have defined the send404 function, which will return 404 to the client. We will add more path handling as we go on.</p>

<p>Finally, we have told our server to listen on port 8080. Now, fire up the server!  </p>

<pre><code>$ node socketio-test.js
</code></pre>

<p>You won't see any output in the server terminal window, but the server is now running. Bring up a second terminal window to issue some requests to test the server. In a second command window, send a root request to the server with</p>

<pre><code>$ curl localhost:8080
</code></pre>

<p>You should get a response similar to:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.55.45-AM.png" alt="" title="Screen shot 2011-05-01 at 9.55.45 AM" width="500" height="29" class="alignleft size-full wp-image-44" /></a>  </p>

<p>I'm using this snazzy blue terminal window for client-side commands, and sticking with green-on-black window for server output. Now we know our server can respond. Huzzah! Celebrate as necessary, and then it's time to move on to bigger and better things. This server doesn't do much, and our client is just a command line.</p>

<p>Let's start by adding some functionality to our server, courtesy of socket.io.</p>

<pre><code>var http = require('http')
, url = require('url')
, fs = require('fs')
, server;

server = http.createServer(function(req, res) {
  // your normal server code
  var path = url.parse(req.url).pathname;
  switch (path) {
    case '/':
      res.writeHead(200, {'Content-Type': 'text/html'});
      res.write('&amp;lt;h1&gt;Hello! Try the &amp;lt;a href="/socketio-test.html"&gt;Socket.io Test&amp;lt;/a&gt;&amp;lt;/h1&gt;');
      res.end();
      break;
    case '/socketio-test.html':
      fs.readFile(__dirname + path, function(err, data){
        if (err) return send404(res);
        res.writeHead(200, {'Content-Type': path == 'json.js' ? 'text/javascript' : 'text/html'})
        res.write(data, 'utf8');
        res.end();
      });
      break;
    default: send404(res);
  }
}),

send404 = function(res) {
  res.writeHead(404);
  res.write('404');
  res.end();
};

server.listen(8080);

// socket.io, I choose you 
var io = require('/usr/local/lib/node/socket.io').listen(server);

// on a 'connection' event 

io.sockets.on('connection', function(socket) {

  console.log("Connection " + socket.id + " accepted.");

  // now that we have our connected 'socket' object, we can 
  // define its event handlers 
  socket.on('message', function(message) { 
    console.log("Received message: " + message + " - from client " + socket.id); 
  });

  socket.on('disconnect', function() { 
    console.log("Connection " + socket.id + " terminated."); 
  });

});
</code></pre>

<p>We've added quite a few things here, let's take stock. First, I've required the fs library, to access to some file I/O functions. I've changed the response values to html, since this is an http server, after all. I've also created a path for a socketio-test.html page, which I'll create next, and put a message with a link to that page in the response for the root path.</p>

<p>Most importantly, I've added some socket.io code, which you can see at the bottom of the page. First, we require the socket.io library and in the same line, tell the resulting socket.io object to listen to our server object. Now it has access to all traffic coming over that server, and can perform tasks based on it. Then we just tell socket.io what to do for the various events it will encounter: 'connection', 'message', and 'disconnect'. Notice that the 'message' and 'disconnect' events are defined inside the definition for the 'connect' event. We define all other events inside the 'connection' event definition, since they don't really matter until a connection has occurred. Also, we could potentially define different types of custom connections, each with different event behaviors associated. In our example case, we're just going to have our server send some output to the console logs that we can watch. Clean and simple, right? That's the beauty of socket.io.</p>

<p>Now we have to write that client socketio-test.html page I've lead everyone to believe exists. Ok, I can man up. Here goes:</p>

<pre><code>&lt;!doctype html&gt;
&lt;html&gt;
  &lt;script src="/socket.io/socket.io.js"&gt;&lt;/script&gt;
  &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"&gt;&lt;/script&gt;
  &lt;body&gt;
    &lt;script type="text/javascript"&gt;
      var socket;

      function connect() {
        socket = io.connect(null);

        // Callbacks for standard socket.io server events
        socket.on('connect', function(){ status_update('Connected to Server'); });
        socket.on('disconnect', function(){ status_update('Disconnected from Server'); });
        socket.on('reconnecting', function( nextRetry ){ status_update('Reconnecting in ' + nextRetry + ' milliseconds'); });
        socket.on('reconnect_failed', function(){ status_update('Reconnect Failed'); });    
      }

      function status_update(status) {
        $('#status').html(status);
      }

      function disconnect() {
        socket.disconnect();
      }

      function send() {
        socket.send('Hello, Server!');    
      };  
    &lt;/script&gt;

    &lt;h1&gt;Socket.io Test&lt;/h1&gt;
    &lt;div&gt;&lt;p id="status"&gt;Waiting for input&lt;/p&gt;&lt;/div&gt;
    &lt;button id="connect" onClick='connect()'&gt;Connect&lt;/button&gt;
    &lt;button id="disconnect" onClick='disconnect()'&gt;Disconnect&lt;/button&gt;
    &lt;button id="send" onClick='send()'&gt;Send Message&lt;/button&gt;

  &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Take a look at the html/javascript above. First, on the html side, we just have three buttons and a div. These will perform standard actions from client to server. The div is for displaying status from our socket.io object. In javascript, we've defined a client-side socket.io object, which looks like:</p>

<pre><code>socket = io.connect(host, [options]);
</code></pre>

<p>Since we are using localhost, we pass in null for the host parameter. We could also pass in 'localhost' to achieve the same effect. We then define behaviors of the socket object using</p>

<pre><code>socket.on(action, function() )
</code></pre>

<p>For example,</p>

<pre><code>socket.on('connect', function(){ 
  status_update("Connected to Server"); 
});
</code></pre>

<p>which calls our status_update javascript function when the socket connects.</p>

<p>Notice the fancy footwork surrounding the connect() function and our firstconnect variable. The reason for this is a small bug (or at least, an unintuitive behavior) of this version of socket.io. Once you call connect() and then disconnect() on a socket, calling connect() again does not reestablish the connection. To do this, you have to call socket.socket.reconnect(). So, to allow our client to use the same 'Connect' button to connect the first time, and all subsequent times, we need to keep track of whether we are connecting for the first time, so we can call reconnect on all connections attempts after the first. Remember this quirk, it has the potential to make very annoying bugs.</p>

<p>Ok, time for a test. Start your node server again, to get all of the changes we made (shut it down if it was still running, then restart). Check the server command line - since we now have socket.io running on the server, startup output should look something like</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png"><img title="Screen shot 2011-05-01 at 9.18.51 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.43.32-PM.png" alt="" width="582" height="43" /></a></p>

<p>Open up a browser and go to <a href="http://localhost:8080">http://localhost:8080</a>.  You will see:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png"><img src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.50.23-AM.png" alt="" title="Screen shot 2011-05-01 at 9.50.23 AM" width="412" height="57" /></a></p>

<p>Theres the link we added to the root path server response of the server - click it to go to te socket.io test page we just finished. You should see:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png"><img title="Screen shot 2011-05-01 at 9.25.59 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/05/Screen-shot-2011-05-01-at-9.25.59-AM.png" alt="" width="289" height="161" /></a></p>

<p>Now click the Connect button. You will see "Waiting for input" change to "Connected to Server", meaning our socket.on('connect') function was invoked. Go back to the server terminal window:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png"><img title="Screen shot 2011-05-01 at 9.28.40 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-04-at-11.44.58-PM.png" alt="" width="575" height="129" /></a></p>

<p>We can see that the connection was initiated via websocket, and the server has assigned me a client session id. Since its socket.io, the connection could have been initiated via any number of technologies, depending on my browser and network situation. If you watch the server output for a while, you will also see it set and clear heartbeat timeouts for our client, and report receiving heartbeat packets. This is socket.io making sure our client has maintained a persistent connection. It will terminate the connection if the client stops responding for too long. Go ahead and try out the Disconnect and Send Message buttons as well, which will also show output on the server  </p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png"><img title="Screen shot 2011-05-01 at 9.31.22 AM" src="http://codehenge.net/blog/wp-content/uploads/2011/12/Screen-shot-2011-12-05-at-12.09.33-AM.png" alt="" width="583" height="175" /></a></p>

<p>The above output is the result of disconnecting our initial session, connecting again (note the new client session id), and sending a message of "Hello Server!".</p>

<p>That's it! Now you have a working socket.io server and a client page to interact with it. We've gone through the basics of client/server communication, and you should be able to expand this example code into something much more functional with a little javascript.  </p>

<p><strong>Get 50% off my Node.js course <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/aaroncois" class="twitter-follow-button" data-show-count="false" data-size="large">Follow @aaroncois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[In my last post I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I’ll be writing a simple http server and some client-side html/javascript to go with it. ]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date><![CDATA[2011-12-05 00:12:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 05:12:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-started-with-node-js-and-socket-io-v0-7-part-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="html"><![CDATA[html]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[493638331]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[ html, javascript, node.js, Programming, socket.io, web, node]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Getting Started With node.js and socket.io (v0.7+) - Part 2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[In my last post I went through installation and setup of some great new tools: node.js and socket.io. Now that we have node and socket.io installed, its time to play around a bit to understand how to use these new toys. In this post I’ll be writing a simple http server and some client-side html/javascript to go with it. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[ html, javascript, node.js, Programming, socket.io, web, node]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[ html, javascript, node.js, Programming, socket.io, web, node]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url_full]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/04/socket-io-nodejs.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2013/04/socket-io-nodejs-150x150.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>369</wp:comment_id>
			<wp:comment_author><![CDATA[Reinoud]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[reinoud@reinoud-jules.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 09:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 14:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very helpful tutorial, thanks a lot! :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387215337]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>370</wp:comment_id>
			<wp:comment_author><![CDATA[Reinoud]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[reinoud@reinoud-jules.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 10:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-15 15:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One thing I don't get though - the 'message' paragraph in the HTML doesn't seem to do anything? Or am I doing something wrong? How do I make the server talk to the client?

Thanks in advance]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387219632]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>374</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 19:59:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-16 00:59:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are correct, it doesn't do anything in this code. Its a placeholder for a future version of the tutorial. 

If you want to talk to the client, start by looking at the broadcast method.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>370</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387219632]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387675868]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>375</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-15 19:59:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-16 00:59:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to help!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>369</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387215337]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387675982]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>377</wp:comment_id>
			<wp:comment_author><![CDATA[Reinoud]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[reinoud@reinoud-jules.nl]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-12-16 03:11:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-12-16 08:11:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah good. I eventually made a chat box out of it using an array with all the sockets in it and iterating over all sockets when the server receives a message, calling the send()-method to send it to everyone connected. 

I assume the broadcast()-method does that thing for me ;-). Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>374</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387675868]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[387860562]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>399</wp:comment_id>
			<wp:comment_author><![CDATA[John Miller Crawford]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[johnmillercrawford@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-09 19:54:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-10 00:54:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Marvellous stuff! This is the most helpful socket.io post that I've come across! Even though it's written for the Mac OSX, I found it all worked on my Win7 machine. Many many thanks for posting.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[434556071]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>405</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-17 09:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-17 14:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your welcome!  Feel free to share it. I'm also working on a full online introductory course for node.js, so stay tuned!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>399</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[434556071]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[441918766]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>410</wp:comment_id>
			<wp:comment_author><![CDATA[peboer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pete@lividinstruments.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[99.29.57.101]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-22 11:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-22 16:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for posting this. I've been trying to get all this stuff up and running, and this is the tutorial that did it for me. One thing that can be a gotcha for newbies like me (who are used to old school ways of 'global everything') is the include line:
   var io = require('/usr/local/lib/node/socket.io').listen(server);
I found the installation notes for all this stuff a bit lacking in their attempt to be comprehensive! The crux of it is that when you use npm to install socket.io (or any other package), you'll probably want to navigate to the directory of this practice project (where you keep the socketio-test.js file) and then do the "npm install socket.io" to put a local copy of socket.io in with this project. Based on doing that, the include line becomes:
   var io = require('./node_modules/socket.io').listen(server);
This may seem obvious, but it is worth commenting, at least that this is the part that may not work if you cut and paste the example!
Thanks again,
Peter.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[446005521]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>413</wp:comment_id>
			<wp:comment_author><![CDATA[Itai Roded]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[itai@icare.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.162.124.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-29 12:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-29 17:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I Think it's the first time i'm posting... You deserve a HUGEEEE thank you!! Finally i found a basic tutorial, sooooo hard to find.. Any more like these? someone? 
Also i found a bug, In the server,  Will bring up: GET http://localhost:8080/json.js 404 (Not Found)
Doesn't effect the socketIO functionality, but why is it there from the first place? ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[452514423]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>414</wp:comment_id>
			<wp:comment_author><![CDATA[Itai Roded]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[itai@icare.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.162.124.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-02-29 13:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-02-29 18:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And for me (as for the comment below me) i had to make the line like that:
// socket.io, I choose you
var io = require('socket.io').listen(server);
instead of 
var io = require('/usr/local/lib/node/socket.io').listen(server);]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>413</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[452514423]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[452517132]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>416</wp:comment_id>
			<wp:comment_author><![CDATA[Arnaud]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[arnaud.v.hebert@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.109.99.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-01 13:52:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-01 18:52:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
i launched the server, then tryed to push connect button and i get that :

io is not defined
[Break On This Error] 	

socket = io.connect(null);

that's correct, i wonder where the io object is defined...
my link to script is :

what's wrong ?
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[453599708]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>417</wp:comment_id>
			<wp:comment_author><![CDATA[Arnaud]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[arnaud.v.hebert@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.109.99.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-01 14:08:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-01 19:08:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sorry, that is because i have node v0.6.11....]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>416</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[453599708]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[453611696]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>418</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-01 16:00:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-01 21:00:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Its only there to make IE behave nice. I haven't tried it in IE lately, it may no longer be necessary. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>413</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[452514423]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[453726373]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>428</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Hopkins]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[signorehopkins@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.27.40.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-14 02:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-14 06:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,

Awesome work. Easy to follow.

I'm running into an issue, and here is what it spits out when I try to start the test server.

Mac-Unibodys-MacBook:chat_test macunibody$ node socketio-test.js

node.js:134
        throw e; // process.nextTick error, or 'error' event on first tick
        ^
Error: Cannot find module '/usr/local/lib/node/socket.io'
    at Function._resolveFilename (module.js:317:11)
    at Function._load (module.js:262:25)
    at require (module.js:346:19)
    at Object. (/Applications/MAMP/chat_test/socketio-test.js:37:10)
    at Module._compile (module.js:402:26)
    at Object..js (module.js:408:10)
    at Module.load (module.js:334:31)
    at Function._load (module.js:293:12)
    at Array. (module.js:421:10)
    at EventEmitter._tickCallback (node.js:126:26)

From what I've found (http://stackoverflow.com/questions/7873517/heroku-says-cannot-find-module-socket-io), I might need to "add socket.io in dependencies in package.json," but within npm, there are 15-20 package.json files. Any idea which one? or if that is even going to be the solution?

Thanks for the good work.

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[464902265]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>429</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-03-14 08:27:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-03-14 12:27:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Joel. Is "/usr/local/lib/node/socket.io" the correct path for the socket.io library on your system? 

Also, this shorthand notation may work, if your paths are set up properly:


io = require('socket.io')]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>428</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[464902265]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[465036868]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>443</wp:comment_id>
			<wp:comment_author><![CDATA[exomic]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[exomic@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.80.69.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-03 09:42:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-03 13:42:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Excellent tutorial! Good job! 

The problem is when I start using Socket.IO I always get this error when I go on http://localhost:8080 to test the page.

 /usr/local/lib/node_modules/socket.io/lib/manager.js:0
(function (exports, require, module, __filename, __dirname) { /*!
^
RangeError: Maximum call stack size exceeded

Any ideas?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484559176]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>444</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-03 10:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-03 14:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That error is common when the server is overloaded - have you made any changes to the code?  Adding, for example, a recursive call or something would do it.

Can you tell me when exact version of node.js and socket.io you are using? ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>443</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484559176]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484592585]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>445</wp:comment_id>
			<wp:comment_author><![CDATA[exomic]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[exomic@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[70.80.69.193]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-03 10:30:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-03 14:30:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[node -v:
v0.7.8-pre
socket.io 0.9.4
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>444</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484592585]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484599005]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>446</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.88.209.165]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-03 14:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-03 18:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a potentially volatile pre-release version of node - i'd give it a shot on an active release first, to see if it behaves the same way]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>445</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484599005]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[484801705]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>523</wp:comment_id>
			<wp:comment_author><![CDATA[Taylerdurden]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[taylerdurden123@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.247.149.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-15 00:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-15 04:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you also please provide the information and code snippets on how to revert the messages received by the server to some other client ?
I mean how to modify the above code , so that the message received by the server can be sent to some other client , just like a chat application?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[682374157]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>453</wp:comment_id>
			<wp:comment_author><![CDATA[DS kanth]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dskanth.99@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[202.65.132.34]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-04-18 09:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-04-18 13:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic tutorial... could see the power and possibilities of node.js and socket.io]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[500765926]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>465</wp:comment_id>
			<wp:comment_author><![CDATA[Chandan Dey]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chandan.0@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-28 07:05:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-28 11:05:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I am using Node version 0.7.8 install in (C:/Program Files (x86)/nodejs) with modules path for socket.io version 0.9.5 (C:/Program Files (x86)/nodejs/node_modules/socket.io/lib/socket.io.js). I have changed the path for socket.io with that in C:Program Files (x86)nodejssocketio-test.js file. And use script file in C:Program Files (x86)nodejssocketio-test.html like  <!-- for ie --> [this file was downled from JSON site and kept into root directory] and 
I just run the "socketio-test.js" file it will running properly and shows a message (info  - socket.io started). When I hit the "Connect" button in socketio-test.html file it will gave an error ('io' is undefined) in IE, Mozila Firefox &amp; Google Chrome. Please help me to short out this error.
Thanks
Chandan
(email id : chandan.0@gmail.com)
Note:
*** My folder structure id :
C:/Program Files (x86)/nodejs  [nodejs installed directory]
C:Program Files (x86)nodejsnode_modulessocket.iolib  [socket.io isntalled directory]
*** Change in "socketio-test.js" file
var io = require('C:/Program Files (x86)/nodejs/node_modules/socket.io/lib/socket.io').listen(server);
*** Change in "socketio-test.html" file 
 <!-- for ie -->
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540216649]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>467</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-28 17:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-28 21:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Chanden. 

Looks like your server code is fine, and the problem is on your client side. This means that this line:



is unable to include the file socket.io.js. Are you seeing an error in your dev tools indicating that this file isn't loaded?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>465</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540216649]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[540551136]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>470</wp:comment_id>
			<wp:comment_author><![CDATA[Chandan Dey]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cdey2k@rediffmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-31 08:31:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-31 12:31:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,
Thanks for your quick reply.
I solved the problem using the socket.io.js after hosted in IIS and use like :
http://localhost:8124/socket.io/socket.io.js

Now I want to do send request from HTML5 client to Node.js server to calculate two number addition.
My requirement like this:
I have a HTML5 page with 2 text boxes 1 lable and a Button called "Add". User input 2 numbers into 2 text box and press the "Add" button. In my logic HTML5 client send 2 numbers to Node.js server as parameter/argument after that Node.js server add 2 numbers and returned the result to HTML5 client and the result will display in the lable.

Is it possible? If yes please guide me to solve this problem.
Thanks in advance.
Chandan Dey]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543616623]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>471</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-31 09:14:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-31 13:14:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you can do this in a few different ways. You could have the server emit another event to the client with the answer, or you could pass in a function (remember, functions are first class citizens in Javascript) to the server as a parameter in your 'add' event, which the server can then call, passing your client the result as an input parameter. 

If that doesn't make sense, let me know, I can try to provide some examples.

I actually have a course entitled "Learn Node.js by Example" that will be released on udemy.com in less than a week which shows some examples of this behavior. Check it out if you are interested in more structured learning.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>470</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543616623]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543685628]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>472</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-31 09:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-31 13:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,
Thanks for your quick reply. Actually I am unable to reply through this site most of the time message was posted but after refresh the page my reply was not shown. Don't know why. Hopefully this message properly send to you.
I am already tried with the "emit" method but not success.
I want to do send userid/password from HTML5 client to Node.js server and validate with MySQL database and return the result to client.
My code:
server_test.js :
var io = require('C:/Program Files (x86)/nodejs/node_modules/socket.io/lib/socket.io');
var socket = io.listen(8124);
socket.sockets.on('connection',function(socket){
	socket.on('login', function(data, usr, pass){
		var mysql = require('mysql');
		var TEST_DATABASE = 'employee';
		var TEST_TABLE = 'tblusers';
		var client = mysql.createClient({
		  user: 'root',
		  password: 'secret10',
		});

		client.query('USE '+TEST_DATABASE);

		client.query(
		  'SELECT name FROM '+TEST_TABLE+' WHERE user = '+usr+' AND password = '+pass,
		  function selectCb(err, results) {
			if (err) {
			  throw err;
			}
			socket.emit('retuLogIn',{username: results[0]['name']});
			client.end();
		  }
		);
	});
        socket.on('disconnect', function(){
            console.log('Server has disconnected');
        });
});

client_test.html


    WebSocket Client Demo [socket.io]
     <!-- for ie -->
    
    
	function connect() {
		try
		{
			var socket = io.connect('http://localhost:8124/');
			socket.on("connect",function(){
				document.getElementById('status').innerHTML ="Browser has connected to the app server";
			});
			socket.on('login', function (data, document.getElementById('txtUser').value, document.getElementById('txtPass').value) {
				document.getElementById('status').innerHTML = 'Welcome '+data.username;
			});
		}
		catch(err)
		{
			document.getElementById('status').innerHTML = err.message;
		}
	}
    
	
		WebSocket Client Demo
		Enter user and password to Log-In
		User :
		
		Password :
		
		Log-In
	


Please help me to sort out this problem.
Thanks in advance
Chandan Dey
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>471</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543685628]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543732366]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>473</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-31 09:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-31 13:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,
Thanks for quick reply.
Can you please try a small example for me about passing 2 parameter from HTML5 client and receive the parameter value in Node.js server and calculate the 2 numbers and return the result to HTML5 client and display in a lable. Actually I have already spend 3 days on it but no success.
Thanks in advance.
Chandan Dey]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>471</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543685628]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543738930]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-04 10:17:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-04 14:17:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,
Thanks for your previous help.
Can you have any small test application to solve my previous mention problem.
1) Send 2 integer value from HTML5 text box after Click "Add" button and calculate the sum of 2 param value in Node.js server and return the result and show in HTML5 page.

OR

2) Another one is verify userid/password send from HTML5 validate in Node.js (socket.io) and return the result in HTML5 page.
I am sending my test application but did not work :
I want to do send userid/password from HTML5 client to Node.js server and validate with MySQL database and return the result to client.
My code:
server_test.js :
var io = require('C:/Program Files (x86)/nodejs/node_modules/socket.io/lib/socket.io');
var socket = io.listen(8124);
socket.sockets.on('connection',function(socket){
socket.on('login', function(data, usr, pass){
var mysql = require('mysql');
var TEST_DATABASE = 'employee';
var TEST_TABLE = 'tblusers';
var client = mysql.createClient({
user: 'root',
password: 'secret10',
});

client.query('USE '+TEST_DATABASE);

client.query(
'SELECT name FROM '+TEST_TABLE+' WHERE user = '+usr+' AND password = '+pass,
function selectCb(err, results) {
if (err) {
throw err;
}
socket.emit('retuLogIn',{username: results[0]['name']});
client.end();
}
);
});
socket.on('disconnect', function(){
console.log('Server has disconnected');
});
});

client_test.html

WebSocket Client Demo [socket.io]



function connect() {
try
{
var socket = io.connect('http://localhost:8124/');
socket.on("connect",function(){
document.getElementById('status').innerHTML ="Browser has connected to the app server";
});
socket.on('login', function (data, document.getElementById('txtUser').value, document.getElementById('txtPass').value) {
document.getElementById('status').innerHTML = 'Welcome '+data.username;
});
}
catch(err)
{
document.getElementById('status').innerHTML = err.message;
}
}


WebSocket Client Demo


Enter user and password to Log-In

User :

Password :

Log-In

Please help me to sort out this problem.
Thanks in advance
Chandan Dey
  ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>471</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543685628]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[546926851]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-07 06:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-07 10:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Constantine,
Can I get any help from you about my last 2 posts.

Thanks
Chandan]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>471</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[543685628]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[549712437]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-07 09:23:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-07 13:23:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To #1: 

The easiest way is to add an onclick function to the Add button, let's call it "add":

function add() {
    socket.emit('add', val1, val2, function(result) {//display result});
}

So here I'm emitting an event from the client called 'add'. The server can then receive this event by having something like:

socket.on('add', val1, val2, function(fn) { 
  //do addition, call fn(result) to send result back to client 
});

I'm passing in the two values, and also a callback function from the client. The server can use this callback function to give the result data back to the client.

Make sense?  

I'll be working on some more blog posts this summer to get into these techniques in detail. In the meantime, you can check out my <a href="http://www.udemy.com/learn-nodejs-by-example/" rel="nofollow">Learn Node.js by Example</a> course for thorough examples and walkthroughs.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>475</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[546926851]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[549818416]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.79.36.6]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-09 16:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-09 20:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Cois,
Thanks for your reply.
I have tried with your guide but not yet success.
This is my code as per your instruction.

html_Server.js
--------------------
var io = require('socket.io');
var socket = io.listen(8124);
socket.sockets.on('connection',function(socket){ 
        socket.on('add', val1, val2, function(fn) {
			val1+val2, function(result){}
		});
        socket.on('disconnect', function(){
            console.log('Server has disconnected');
        });
});

html_Client.html
-----------------------


    WebSocket Client Demo
    
    
	var socket = io.connect('http://localhost:8124/');
	socket.on("connect",function(){
		alert("Client has connected to the server");
	});

	function add() {
		val1=document.getElementById('txtUser').value;
		val2=document.getElementById('txtPass').value;
		socket.emit('add', val1, val2, function(result) {document.getElementById('status').value=result});
	}
    
	
		Add Test
		Enter two number to Add
		Number 1 :
		
		Number 2 :
		
		Add
	


If you have some time, please rectify my code. I had a plan to subscribe your Learn Node.js by Example course shortly.

Thanks in advance.
Chandan Dey]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>477</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[549818416]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[553394041]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>479</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-13 02:25:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-13 06:25:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Cois,

Could you please rectify my code to working properly. Then I can move further with node.js with HTML5.

Thanks
Chandan]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>477</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[549818416]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[555917531]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-13 09:46:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-13 13:46:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chandan - there are a few problems with the code you posted, let me take a look and i'll post some fixes soon.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>479</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[555917531]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[556203032]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>481</wp:comment_id>
			<wp:comment_author><![CDATA[Dey Chandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-14 02:44:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-14 06:44:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Cois,

Thanks for your reply. Let me try with your suggestion and get back to you.

And definitely I will post my next question if any into StackOverflow site. Infact I was already post this issue in StackOverflow on 1st June. The URL is :

http://stackoverflow.com/questions/10818636/html5-page-logging-with-mysql-database-in-node-js-with-socket-io

Thanks
Chandan Dey  ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>480</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[556203032]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[556927273]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>486</wp:comment_id>
			<wp:comment_author><![CDATA[Deychandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-06-29 09:12:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-06-29 13:12:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Cois,
I have tried with some change code as per your references but did not success. I am sending you code please go through my code try to find my mistake.
server.js
======
var app = require('http').createServer(handler)
      , io = require('socket.io').listen(app)
      , fs = require('fs')
      , mysql = require('mysql')

    var client = mysql.createConnection({
              host: 'localhost',
              user: 'root',
              password: 'abcd1234',
    });

    client.connect();

    app.listen(3232);

    function handler (req, res) {
      fs.readFile(__dirname + '/index.html',
      function (err, data) {
        if (err) {
          res.writeHead(500);
          return res.end('Error loading index.html');
        }

        res.writeHead(200);
        res.end(data);
      });
    }

    io.sockets.on('connection', function (socket) {
        socket.on('login', function(usr, pass){
            var TEST_DATABASE = 'nodejs_mysql_test';
            var TEST_TABLE = 'test';

            client.query('USE '+TEST_DATABASE);

            client.query('SELECT title FROM '+TEST_TABLE+' WHERE user = "'+usr+'" AND password = "'+pass+'"', function(err, results) {
              if (err) throw err;
              console.log(results[0]); // [{1: 1}]
              socket.emit('retuLogIn',results[0]['title']);
            });

        });
        socket.on('disconnect', function(){
            console.log('Server has disconnected');
        });
    });

client.html
========

    WebSocket Client Demo [socket.io]
    
    
    function connect() {

        try
        {
            var socket = io.connect('http://localhost:3232/');
            socket.on("connect",function(){
                document.getElementById('status').innerHTML ="Browser has connected to the app server";
                socket.emit('login', document.getElementById('txtUser').value, document.getElementById('txtPass').value);

            });
            socket.on('retuLogIn', function (data) {
                document.getElementById('status').innerHTML = 'Welcome '+data;
            });
        }
        catch(err)
        {
            document.getElementById('status').innerHTML = err.message;
        }
    }
    
    
        WebSocket Client Demo
        Enter user and password to Log-In
        User :
        
        Password :
        
        Log-In
    


Thanks in advance
Chandan
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>480</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[556203032]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[571743445]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>492</wp:comment_id>
			<wp:comment_author><![CDATA[Deychandan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[deychandan@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.197.120.150]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-09 09:35:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-09 13:35:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[

Hi Cois,

Could you please see and rectify my code which I was posted last week to working properly. I can not understand the problem.

the error is :
=========
C:Program Files (x86)nodejs&gt;node "C:Program Files (x86)nodejsapp.js"    info  - socket.io started

C:Program Files (x86)nodejsapp.js:6
    var client = mysql.createConnection({
                       ^ TypeError: Object # has no method 'createConnection'
    at Object. (C:Program Files (x86)nodejsapp.js:6:24)
    at Module._compile (module.js:449:26)
    at Object..js (module.js:467:10)
    at Module.load (module.js:356:32)
    at Function._load (module.js:312:12)
    at module.js:487:10
    at EventEmitter._tickCallback (node.js:238:9)

C:Program Files (x86)nodejs&gt;


Thanks
Chandan
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>480</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[556203032]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[582138705]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>493</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-09 12:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-09 16:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chandan, 
    Look at the error message. It is throwing an error on the createConnection method of the mysql module - which is well outside the scope of this tutorial. However, I'd guess one of two things is wrong. 

1) have you installed the mysql module? (npm install mysql)

2) You are using the createConnection method incorrectly. From the node-mysql docs:

<code>var mysql      = require('mysql');
var connection = mysql.createConnection({
  host     : 'example.org',
  user     : 'bob',
  password : 'secret',
});
</code>

Maybe you need to pass something in in the 'host' parameter?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>492</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[582138705]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[582251576]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>508</wp:comment_id>
			<wp:comment_author><![CDATA[Aron Duby]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/duby1</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[108.239.48.149]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-29 01:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-29 05:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Finally a good tutorial that explains things more than just throwing code at you! Thank you so much!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[632757256]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>510</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.226.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-29 08:24:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-29 12:24:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're welcome!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>508</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[632757256]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[633032234]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>522</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.229.231]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-10 08:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-10 12:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad you enjoyed it!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>521</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[678129903]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[678194643]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>521</wp:comment_id>
			<wp:comment_author><![CDATA[Nachiketha]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nachikethashu@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.247.149.152]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-10 05:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-10 09:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AWESOME!! :)
Really a great tutorial.. keep posting abt related topics..
Finally im able to write some meaningfully working code..!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[678129903]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>524</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.234.89]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-15 15:12:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-15 19:12:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good idea - I'll write up a post on a simple chat server.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>523</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[682374157]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[683025089]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>526</wp:comment_id>
			<wp:comment_author><![CDATA[roballcon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[codehenge@roballcon.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.177.149.123]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-29 18:16:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-29 22:16:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It works when I change the server code to:

socket.on('add',function(val1,val2,fn) { 
    fn(val1+val2);
});]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>478</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[695746088]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[553394041]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>527</wp:comment_id>
			<wp:comment_author><![CDATA[roballcon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[codehenge@roballconc.om]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.177.149.123]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-29 18:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-29 22:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My thanks as well for an absolutely useful and professional tutorial.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[695748509]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>572</wp:comment_id>
			<wp:comment_author><![CDATA[cue2]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ss_as_ss@yahoo.co.uk]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[2.27.77.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-11 14:13:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-11 18:13:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Aaron you've updated this guide for v0.7 however it appears that your client javascript code is missing and there is no link to download the tutorial files. for anybody who has seen the v0.6 tutorial this should be obvious but for those who see this page on its own it could be rather confusing.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[859906837]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>587</wp:comment_id>
			<wp:comment_author><![CDATA[Cameron]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cameronmsim@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[65.124.168.54]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-13 12:55:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-13 16:55:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why did you leave all of the client side javascript out?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[929411577]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>588</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-14 00:01:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-14 04:01:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oops! I did some site updates that changed the code parsing, and somehow it must have been cut out. I have updated the post to put the client side JS back in. Thanks for the heads up!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>587</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[929411577]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[930122544]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JamIt - A Python Framework for Google Code Jam Problems</title>
		<link>http://codehenge.net/blog/2012/04/jamit-a-python-framework-for-google-code-jam-problems/</link>
		<pubDate>Fri, 13 Apr 2012 12:43:47 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://codehenge.net/blog/wp-content/uploads/2012/04/radarjam-e1334326364529.jpg"><img src="http://codehenge.net/blog/wp-content/uploads/2012/04/radarjam-e1334326364529.jpg" alt="" title="radarjam" width="235" height="232" class="alignleft size-full wp-image-121" /></a><a href="http://code.google.com/codejam">Google Code Jam</a> 2012 starts today! (April 13, 2012)

If you are reading this, you're no doubt as enamored with puzzles and problem-solving as I am, which makes sitting down to attack some Google Code Jam (GCJ) problems an exciting prospect. However, something I noticed in my first competition was that I found myself spending way too much time on setting up the problem space (file I/O, classes and their associations -- general glue code), when I would have been better served by focusing directly on the problem. 

This year, i've taken a step towards solving that problem, and am releasing my tools to offer a bit of help to everyone else. Introducing <a href="http://cacois.github.com/JamIt/">JamIt!</a>, a framework and scaffold generator for GCJ problems. 

You can download or fork <a href="https://github.com/cacois/JamIt">JamIt on Github</a>, and use it to generate base code for your GCJ problems. Just to be clear, this is 100% ok with the GCJ terms and conditions (I even contacted the guys at Google who make GCJ happen every year to be sure), as long as you submit the code generated by JamIt along with your own. 

Once you download the code, you can use it to generate scaffolding for your GCJ problems. 

To use, simply:

<pre>
$ cd JamIt
$ python jamit-generator.py &lt;problem-name&gt;
</pre>

JamIt will create a new named directory for your problem. In that directory, it will place a file named &lt;problem-name&gt;.py, with autogenerated scaffold code specific to your problem. 

Check out the <a href="http://cacois.github.com/JamIt/">Github Pages site</a> for more detailed usage information.

Happy Jamming!]]></content:encoded>
		<excerpt:encoded><![CDATA[JamIt is a framework to automatically generate Python skeleton code for a Google Code Jam problem, allowing you to focus on the solution, not the fluff.]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date><![CDATA[2012-04-13 08:43:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-13 12:43:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jamit-a-python-framework-for-google-code-jam-problems]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[JamIt - A Python Framework for Google Code Jam Problems]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[647850058]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[python, open source, programming, google code jam]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[JamIt is a framework to automatically generate Python skeleton code for a Google Code Jam problem, allowing you to focus on the solution, not the fluff.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[python, open source, programming, google code jam]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[JamIt is a framework to automatically generate Python skeleton code for a Google Code Jam problem, allowing you to focus on the solution, not the fluff.]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Book Review: Are You Smart Enough to Work for Google?</title>
		<link>http://codehenge.net/blog/2012/04/book-review-are-you-smart-enough-to-work-for-google/</link>
		<pubDate>Sat, 21 Apr 2012 17:41:52 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[
Are you smart enough to work at Google? A question many software engineers probably don’t want an answer to. However, as William Poundstone elaborates in his <a href="http://www.amazon.com/Are-Smart-Enough-Work-Google/dp/031609997X" title="Are You Smart Enough to Work at Google?">like-named book</a>, this is exactly the wrong question to ask. While there are many, many “smart” engineers, this is not the only quality being tested for interviews by leading software companies such as Google. 

Poundstone provides detailed insights about the HR practices, hiring philosophies, and interview techniques at Google, and also illustrates the contrasts between those of competing tech firms, such as Microsoft. In some cases, the information caused me to rethink how I’d approach an interview with the target company, which signifies probably value to the potential interviewee.

The book contains an impressive number of tricky interview questions, along with potential answers and their relative merits to interviewers. This analysis portion was what I found most valuable – rather than expecting the reader to memorize answers, as many candidates attempt to do before interviews, Poundstone tries to guide his reader into better though processes. We all prepare for interviews in different ways, and while this book may not help a candidate who is technically unprepared, reading it made mind shift into the analytical, problem-solving state I attempt to achieve when preparing for interviews.

As interview preparation, Poundstone’s text provides value through copious analyses of technical interview questions, to allow readers to get comfortable with the format and hear a number of examples of different types of questions. Along the way, techniques for dealing with various interview scenarios (whiteboarding, estimation, etc) are presented, as well as points candidates may not consider when preparing for an interview, such as what information about their prospective employer they should research before an interview, or how to respond when they don’t know an answer.

As an interviewer myself, I also found unexpected value in the book. Some of this value was in the form of new types of potential questions to ask, but more came in seeing more pieces of information I could deduce from questions I was already asking. Overall, I found this book informative and entertaining, appealing directly to the problem-solving nerd in me. If you enjoy brainteasers and Silicon Valley, chances are you will too.]]></content:encoded>
		<excerpt:encoded><![CDATA[Are you smart enough to work at Google? A question many software engineers probably don’t want an answer to. However, as William Poundstone elaborates in his <a href="http://www.amazon.com/Are-Smart-Enough-Work-Google/dp/031609997X" title="Are You Smart Enough to Work at Google?">like-named book</a>, this is exactly the wrong question to ask.]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date><![CDATA[2012-04-21 13:41:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-21 17:41:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[book-review-are-you-smart-enough-to-work-for-google]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="book"><![CDATA[book]]></category>
		<category domain="post_tag" nicename="book-review"><![CDATA[book review]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="review"><![CDATA[review]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[125]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Are you smart enough to work at Google? A question many software engineers probably don’t want an answer to. However, as William Poundstone elaborates in his <a href="http://www.amazon.com/Are-Smart-Enough-Work-Google/dp/031609997X" title="Are You Smart Enough to Work at Google?">like-named book</a>, this is exactly the wrong question to ask.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Book Review: Are You Smart Enough to Work for Google?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/04/cover-image-are-you-smart-enough-to-work-at-google-01-24-12.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Are you smart enough to work at Google? A question many software engineers probably don’t want an answer to. However, as William Poundstone elaborates in his <a href="http://www.amazon.com/Are-Smart-Enough-Work-Google/dp/031609997X" title="Are You Smart Enough to Work at Google?">like-named book</a>, this is exactly the wrong question to ask.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[book, book review, google]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[book, book review, google]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[658841188]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Node.js Talk at Pittsburgh TechFest 2012</title>
		<link>http://codehenge.net/blog/2012/06/node-js-talk-at-pittsburgh-techfest-2012/</link>
		<pubDate>Sun, 03 Jun 2012 20:08:10 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=127</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="" align="alignright" width="350" caption="Pittsburgh TechFest 2012"]<img title="Pittsburgh TechFest 2012" src="http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg" alt="Pittsburgh TechFest 2012" width="350" height="200" />[/caption]

I'm very excited to announce that I'll be speaking at <a href="http://pghtechfest.com">Pittsburgh Tech Fest 2012</a>! The event will be held on June 9, at <a href="http://www.laroche.edu">La Roche College</a>. 

<p></p>Pittsburgh TechFest is a one-day event for software developers in the western PA area, organized by some <a href="http://erickepes.com/">awesome guys</a> from local dev user groups.

<p></p>My talk will be entitled "Node.js: A Guided Tour", and is intended as a primer to one of my favorite development platforms. There are also a bunch of other speakers presenting some very interesting looking <a href="http://pghtechfest.com/Sessions.html">sessions</a>, on topics such as:
<ul>
	<li>3D scanning with Kinect</li>
	<li>Decaf Introduction to CoffeeScript</li>
	<li>Creating Your Own Software Company</li>
	<li>Exploring UX techniques and practices</li>
	<li>Intro to Functional Programming using Scala</li>
	<li>And many more!</li>
</ul>
<a href="http://pghtechfest2012.eventbrite.com/">Registration </a>is only $10, so if you are in the area, come on by!

<div class="note" style="background-color:#f2f2e6;margin-top:50px;margin-bottom:50px">
<div style="padding:5px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-style:oblique;font-size:30px;">Learn Node.js by Example</div>
<p style="padding:10px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-size:18px;"> Take my online course featuring screencasts and sample projects!</p>
<div class="signup_button">
<a href="http://www.udemy.com/learn-nodejs-by-example/">
<h3 style="color:#ffffff">Sign up now</h3>
<p>30-day money back guarantee!</p>
</a>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[I'm very excited to announce that I'll be speaking at <a href="http://pghtechfest.com">Pittsburgh Tech Fest 2012</a>! The event will be held on June 9, at <a href="http://www.laroche.edu">La Roche College</a>. Pittsburgh TechFest is a one-day event for software developers in the western PA area, organized by some <a href="http://erickepes.com/">awesome guys</a> from local dev user groups.]]></excerpt:encoded>
		<wp:post_id>127</wp:post_id>
		<wp:post_date><![CDATA[2012-06-03 16:08:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-03 20:08:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[node-js-talk-at-pittsburgh-techfest-2012]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="announcement"><![CDATA[announcement]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="presentation"><![CDATA[presentation]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[pittsburgh, techfest, software, programming, node.js, node, talk, lecture, speaker, presentation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[I'll be speaking at Pittsburgh Tech Fest 2012, a one-day event for software developers in the western PA area held at La Roche College on June 9, 2012.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Node.js Talk at Pittsburgh TechFest 2012]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[I'll be speaking at Pittsburgh Tech Fest 2012, a one-day event for software developers in the western PA area held at La Roche College on June 9, 2012.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[pittsburgh, techfest, software, programming, node.js, node, talk, lecture, speaker, presentation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[712799924]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/pittsburghtechfest-vector.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[I'll be speaking at Pittsburgh Tech Fest 2012, a one-day event for software developers in the western PA area held at La Roche College on June 9, 2012.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[pittsburgh, techfest, software, programming, node.js, node, talk, lecture, speaker, presentation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript Engine Benchmarks, 2012 Edition</title>
		<link>http://codehenge.net/blog/2012/06/javascript-engine-benchmarks-2012-edition/</link>
		<pubDate>Wed, 06 Jun 2012 03:20:23 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=130</guid>
		<description></description>
		<content:encoded><![CDATA[In preparation for my talk on <a href="http://www.nodejs.org">Node.js</a> at <a href="http://pghtechfest.com/">Pittsburgh TechFest 2012</a>, I went searching for some up-to-date JavaScript engine benchmarks.

After being unable to find any recent (this year) data, I decided to perform the tests myself. The graph below shows average results of the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test for (what I assume to be) the 5 most popular desktop browsers: Chrome, Firefox, Internet Explorer, Safari, and Opera.

[caption id="attachment_131" align="aligncenter" width="960" caption="SunSpider JavaScript Benchmark Test (2012)"]<a class="alignnone" title="SunSpider JavaScript Benchmarks 2012" href="&lt;img alt="><img class="size-full wp-image-131" title="SunSpider JavaScript Benchmark Test (2012)" src="http://codehenge.net/blog/wp-content/uploads/2012/06/sunspider-javascript-benchmark-black.png" alt="" width="960" height="720" /></a>[/caption]

Values reported are the mean of 10 consecutive runs with each browser. Tests were performed on a Intel Core i7 Macbook Pro with 8GB RAM, running Windows 7 Ultimate SP1.

Not-so-long story short, Google’s V8 engine (Chrome) still leads the pack, though not by much. Microsoft’s Chakra (IE9) performs admirably, with SpiderMonkey (Firefox 9), Carakan (Opera), and SquirrelFish (Safari) trailing in that order.

<div class="note" style="background-color:#f2f2e6;margin-top:50px;margin-bottom:50px">
<div style="padding:5px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-style:oblique;font-size:30px;">Learn Node.js by Example</div>
<p style="padding:10px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-size:18px;"> Take my online course featuring screencasts and sample projects!</p>
<div class="signup_button">
<a href="http://www.udemy.com/learn-nodejs-by-example/">
<h3 style="color:#ffffff">Sign up now</h3>
<p>30-day money back guarantee!</p>
</a>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[The graph below shows average results of the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test for (what I assume to be) the 5 most popular desktop browsers: Chrome, Firefox, Internet Explorer, Safari, and Opera.]]></excerpt:encoded>
		<wp:post_id>130</wp:post_id>
		<wp:post_date><![CDATA[2012-06-05 23:20:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-06 03:20:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-engine-benchmarks-2012-edition]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, javascript, sunspider, benchmark]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[JavaScript Engine Benchmarks, 2012 Edition]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The graph below shows average results of the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test for (what I assume to be) the 5 most popular desktop browsers: Chrome, Firefox, Internet Explorer, Safari, and Opera.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The graph below shows average results of the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test for (what I assume to be) the 5 most popular desktop browsers: Chrome, Firefox, Internet Explorer, Safari, and Opera.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, javascript, sunspider, benchmark]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[715345937]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[The graph below shows average results of the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test for (what I assume to be) the 5 most popular desktop browsers: Chrome, Firefox, Internet Explorer, Safari, and Opera.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, javascript, sunspider, benchmark]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>487</wp:comment_id>
			<wp:comment_author><![CDATA[Vyacheslav Egorov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me@mrale.ph]]></wp:comment_author_email>
			<wp:comment_author_url>http://mrale.ph/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.52.98.46]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-02 02:26:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-02 06:26:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SunSpider is not representative of real world work load, especially if we are talking about complex apps running in node. It's a collection of micro-benchmarks. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[574015523]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>488</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.9]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-02 08:19:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-02 12:19:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's fair, but the same is true for most benchmarks. They are estimative assessments derived from (usually) heavily-constrained scenarios. 

Do you have any preferred benchmarks for JavaScript engine performance? I'd be interested in doing some more analysis.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>487</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[574015523]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[574191405]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>489</wp:comment_id>
			<wp:comment_author><![CDATA[Vyacheslav Egorov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me@mrale.ph]]></wp:comment_author_email>
			<wp:comment_author_url>http://mrale.ph/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[86.52.98.46]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-02 16:41:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-02 20:41:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Benchmark suites like V8 Benchmark Suite and Kraken from Mozilla are being built in attempt to capture more or less realistic workloads or exercise particular parts of JavaScript engines. 

For example if we are talking about V8 Suite then here is a good explanation for every benchmark that is included in it: http://blog.chromium.org/2010/10/v8-benchmark-suite-updated.html   ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>488</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[574191405]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[574635494]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Node.js: A Guided Tour</title>
		<link>http://codehenge.net/blog/2012/06/node-js-a-guided-tour/</link>
		<pubDate>Sun, 10 Jun 2012 00:04:13 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=133</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignleft" title="Node.js Logo" src="http://nodejs.org/images/logos/nodejs-dark.png" alt="" width="212" height="114" /><p></p><p>Today I was pleased to give a talk at the very successful <a href="http://pghtechfest.com/">Pittsburgh TechFest 2012</a>, entitled: "Node.js: A Guided Tour".</p>

&nbsp;
<br>
<p></p>
<p>Here is the session description:</p>

<p><blockquote>This session is intended as an introduction to Node.js, a hot open-source technology increasingly gaining popularity within the developer community. Node.js is a platform built on Chrome's V8 JavaScript engine that enables fast, scalable, real-time network applications written in JavaScript. We'll talk about what node.js is, how it works, and its best use cases. As well as talking about node.js itself, we'll also discuss the community surrounding it, and some of the powerful modules created to enhance or simplify its capabilities, such as Express and Socket.io. Finally, we'll go through some brief code examples to show just how easy it is to leverage node.js in your projects.</blockquote></p>

I've posted my slides on Slideshare. They can be accessed here:

<a href="http://www.slideshare.net/cacois/nodejs-a-guided-tour">Node.js: A Guided Tour - Slides</a>

<div class="note" style="background-color:#f2f2e6;margin-top:50px;margin-bottom:50px">
<div style="padding:5px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-style:oblique;font-size:30px;">Learn Node.js by Example</div>
<p style="padding:10px;font-family: 'Times New Roman', Times, serif;text-align:center;margin: 0px auto;font-size:18px;"> Take my online course featuring screencasts and sample projects!</p>
<div class="signup_button">
<a href="http://www.udemy.com/learn-nodejs-by-example/">
<h3 style="color:#ffffff">Sign up now</h3>
<p>30-day money back guarantee!</p>
</a>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[Description and lecture slides from my Pittsburgh TechFest 2012 talk entitled: ""Node.js: A Guided Tour".]]></excerpt:encoded>
		<wp:post_id>133</wp:post_id>
		<wp:post_date><![CDATA[2012-06-09 20:04:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-10 00:04:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[node-js-a-guided-tour]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Description and lecture slides from my Pittsburgh TechFest 2012 talk entitled: ""Node.js: A Guided Tour".]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Node.js: A Guided Tour]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://nodejs.org/images/logos/nodejs-dark.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://nodejs.org/images/logos/nodejs-dark.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Description and lecture slides from my Pittsburgh TechFest 2012 talk entitled: ""Node.js: A Guided Tour".]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[719581617]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://nodejs.org/images/logos/nodejs-dark.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://nodejs.org/images/logos/nodejs-dark.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Description and lecture slides from my Pittsburgh TechFest 2012 talk entitled: ""Node.js: A Guided Tour".]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, programming]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Learn Node.js by Example: An Online Course in Node.js</title>
		<link>http://codehenge.net/blog/2012/06/learn-node-js-by-example-an-online-course-in-node-js/</link>
		<pubDate>Sat, 30 Jun 2012 18:13:02 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png"><img class="size-full wp-image-137 alignleft" title="learnnodejsbyexample-250px" src="http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png" alt="" width="250" height="134" /></a>

Getting started with Node.js? Looking to learn more? Wondering why I haven't been posting as much lately? The answer to all these questions and more:

&nbsp;&nbsp;
&nbsp;

I'm proud to introduce "<a title="Learn Node.js by Example" href="http://www.udemy.com/learn-nodejs-by-example/">Learn Node.js by Example</a>", a full-featured course hosted on <a title="Udemy" href="http://www.udemy.com">Udemy.com</a>.

From the course description:
<blockquote>In this course, you will learn to develop applications using Node.js, a cutting-edge technology designed to deliver fast, scalable network applications. Beginners will start by learning how to install Node.js, and how to work with the framework and its modules. In additon to informative slides, students will learn by doing, developing node.js application through a series of screencasts developing increasingly advanced applications.</blockquote>
I decided to create this course to provide the directed, in-depth learning experience that is difficult to achieve with isolated tutorials and blog posts. I've designed the course to be centered around example projects, allowing students to see real code, follow along, and learn by doing. The course features detailed screencasts, guiding students through the design and development of node.js projects. In addition, I've also included lecture slides on basic concepts and additional development exercises for each project, giving students an opportunity to flex their design and coding muscles by adding new features to the course projects.

The first version of the course is available <a title="Learn Node.js by Example" href="http://www.udemy.com/learn-nodejs-by-example/">here</a>, right now. I will also be continually enhancing and adding content to the course to improve it. Subscribers to <a title="Udemy.com" href="http://www.udemy.com">Udemy.com</a> courses have access to all future content and improvements, indefinitely, so you will have immediate access to updates and added material. Udemy.com also offers Live Sessions, a feature allowing instructors to schedule sessions to interact in real-time with students to teach, demonstrate or answer questions. This is an exciting feature that I plan to take advantage of in the future.

This by no means indicates that I will be posting on this blog less - in fact, now that I've finished the initial push to get the course ready, I'll be able to post more. The course is, however, a way to offer a more formal, in-depth learning experience for aspiring Node.js developers. Feedback is very welcome, and greatly appreciated!]]></content:encoded>
		<excerpt:encoded><![CDATA[Getting started with Node.js? Looking to learn more? Wondering why I haven't been posting as much lately? The answer to all these questions and more:

I'm proud to introduce "Learn Node.js by Example", a full-featured course hosted on Udemy.com. I decided to create this course to provide the directed, in-depth learning experience that is difficult to achieve with isolated tutorials and blog posts. ]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date><![CDATA[2012-06-30 14:13:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-06-30 18:13:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learn-node-js-by-example-an-online-course-in-node-js]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javacript"><![CDATA[javacript]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Learn Node.js by Example: An Online Course in Node.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[I'm proud to introduce "Learn Node.js by Example", a full-featured course hosted on Udemy.com. I decided to create this course to provide the directed, in-depth learning experience that is difficult to achieve with isolated tutorials and blog posts. I've designed the course to be centered around example projects, allowing students to see real code, follow along, and learn by doing.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, nodejs, learn, learning, tutorial, course, example, program, programming, code, coding]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_excerpt]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[I'm proud to introduce "Learn Node.js by Example", a full-featured course hosted on Udemy.com. I decided to create this course to provide the directed, in-depth learning experience that is difficult to achieve with isolated tutorials and blog posts. I've designed the course to be centered around example projects, allowing students to see real code, follow along, and learn by doing.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, nodejs, learn, learning, tutorial, course, example, program, programming, code, coding]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/06/learnnodejsbyexample-250px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[746256980]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Installing Redis on Mac OSX</title>
		<link>http://codehenge.net/blog/2012/07/installing-redis-on-mac-osx/</link>
		<pubDate>Sun, 08 Jul 2012 03:12:32 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png" alt="Redis" title="redis-300px" width="300" height="115" class="alignleft size-full wp-image-145" /></a>
<p></p>
<br>
<p></p>
<br>
<p>In this post, I'll show you how to install <a href="http://redis.io/" title="Redis.io">Redis</a>, a popular NoSQL database, on your OSX machine. For those unaware, Redis is described on its project site as:</p>


<blockquote>an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.</blockquote>


<p>The great thing about Redis is that it uses an in-memory data set, making it incredibly fast at I/O. This can be handy in a lot of situations, but I'll go into more detail on its uses in another post.</p>

<p>To install Redis on your machine, we first have to get the latest source. This is easily done using wget:</p>

<code>
$ wget http://redis.googlecode.com/files/redis-2.4.15.tar.gz
</code>

<p>I put this file in /usr/local/src, which is a directory I have created to hold source distributions. I'm getting version 2.4.15 here, because its the latest stable version at the time of writing. You should change the above wget command to get to most recent version. </p>

<p>Unpack the tarball you downloaded:</p>

<code>
$ tar xzf redis-2.4.15.tar.gz
</code>

<p>Then go into the newly created directory and build the source:</p>

<code>
$ cd redis-2.4.15
$ make
</code>

<p>You shouldn't need sudo for this, if you put the code in a directory you have permissions on. But, if you get an error, try sudo.</p>

<p>Now install the binaries:</p>

<code>
$ make install
</code>

<p>This will put the redis executables in /usr/local/bin, which is also in the system path, so you can launch redis from a terminal without an absolute path. Now redis is installed, and we can briefly test it out. Issue the following command to start the redis server:</p>

<code>
$ redis-server
</code>

<p>You will see some output similar to:</p>

<code>
[13193] 07 Jul 21:34:25 # Warning: no config file specified, using the default config. In 
order to specify a config file use 'redis-server /path/to/redis.conf'
[13193] 07 Jul 21:34:25 * Server started, Redis version 2.4.15
[13193] 07 Jul 21:34:25 * The server is now ready to accept connections on port 6379
[13193] 07 Jul 21:34:25 - 0 clients connected (0 slaves), 922304 bytes in use
</code>

<p>Good, the server is running. You see in the above messages that redis is operating in a default configuration. This is usually find for development, but for production needs, you will want to specify a config file. You can do this by including the path to the config file as an input parameter, such as:</p>

<code>
$ redis-server /path/to/redis.conf
</code>

<p>The suggested standard placement of the config file is in a directory called ~/.redis. To create this and put a copy of the default redis config file there, you can use:</p>

<code>
$ mkdir ~/.redis
$ cp /usr/local/src/redis-2.4.15/redis.conf
</code>

<p>Congratulations, you are now ready to start using Redis. Have fun!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[In this post, I'll show you how to install Redis, a popular NoSQL database, on your OSX machine. For those unaware, Redis is described on its project site as: "an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets."]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date><![CDATA[2012-07-07 23:12:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-08 03:12:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[installing-redis-on-mac-osx]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="redis"><![CDATA[redis]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software-development"><![CDATA[software-development]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_magazine_headline]]></wp:meta_key>
			<wp:meta_value><![CDATA[on]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[755757593]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[In this post, I'll show you how to install Redis, a popular NoSQL database, on your OSX machine. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Installing Redis on Mac OSX]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[In this post, I'll show you how to install Redis, a popular NoSQL database, on your OSX machine. For those unaware, Redis is described on its project site as: "an open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets."]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[redis, nosql, software, programming, opensource, open source]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[redis, nosql, software, programming, opensource, open source]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/07/redis-300px.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>545</wp:comment_id>
			<wp:comment_author><![CDATA[NoMan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noman@mailinator.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[67.185.161.246]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-17 15:45:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-17 20:45:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA["NoSQL database"

It's also a NoXQuery database, and a NoOQL database, and ...]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[771206423]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Heading to OSCON 2012</title>
		<link>http://codehenge.net/blog/2012/07/heading-to-oscon-2012/</link>
		<pubDate>Mon, 16 Jul 2012 19:20:59 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[I'm excited to be heading out to OSCON 2012 in Portland, Oregon this week for a few days of open source fun!  If anyone is at the conference, feel free to look me up. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date><![CDATA[2012-07-16 15:20:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-16 19:20:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[heading-to-oscon-2012]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[python]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[767970280]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_rp_extracted_image_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Best Resources to Learn Node.js</title>
		<link>http://codehenge.net/blog/2012/08/best-resources-to-learn-node-js/</link>
		<pubDate>Fri, 03 Aug 2012 02:59:23 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png" alt="Node.js" title="nodejs" width="290" height="290" class="alignleft size-full wp-image-153" /></a> <br>
Node.js, a powerful JavaScript platform for building real-time, scalable applications, is gaining momentum among software developers. Node's event-driven, non-blocking approach to I/O fits perfectly with JavaScripts excellent event model, allowing complex applications to be developed intuitively, with less code. Node is also built on Google's V8 JavaScript engine, the superior runtime that gives the Chrome browser its blazing fast performance. Node is an up and coming technology, currently in use by powerhouses such as</p>

<p><a href="http://www.windowsazure.com/en-us/develop/nodejs/">Microsoft</a>, <a href="http://www.ebaytechblog.com/2011/11/30/announcing-ql-io/">Ebay</a>, <a href="http://blog.cloudfoundry.com/2012/05/24/cloud-foundry-supports-node-js-modules-with-npm/">VMWare</a>, and <a href="http://www.twitter.com">Twitter</a>. 
So, are you convinced? If you want to give Node.js a try, here's a list of my favorite Node tutorials, examples, and guides designed to help developers get up to speed on Node.js.</p>

<p><br></p>

<p><br></p>

<ol>
<li><p><strong><a href="http://www.nodebeginner.org" title="NodeBeginner.org" target="_blank">NodeBeginner.org</a></strong> NodeBeginner is an online book by Manuel Kiessling that aims to "get you started with developing applications with Node.js, teaching you everything you need to know about "advanced" JavaScript along the way". Filled with great explanations and a lot of Node examples, this book is a key resource to take a developer from Node.js beginner to programming useful applications. If you are anything like me, you'll also learn a few new things about JavaScript programming while you are at it! This is one of my favorites for those just getting started.</p></li>
<li><p><strong><a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example" target="_blank">Learn Node.js by Example</a></strong> This is a course I developed for Node.js beginners, hosted at at Udemy.com. The course is project-based, guiding students to learn by developing example applications. Instruction is given mainly through screencasts, with a lot of time spent in code. I'm actively developing new content for it, and subscribers get access to all new content for no extra cost, even if the course goes up in price. <strong><a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">Click here to get 50% off now!</a></strong></p></li>
<li><p><strong><a href="http://visionmedia.github.com/masteringnode/" title="Mastering Node" target="_blank">Mastering Node</a></strong> T.J. Holowaychuk, creater of pivotal Node.js tools such as Express and Jade, has an open source ebook called "Mastering Node" hosted at Github. The book, available in multiple formats, including html, mobl, epub, and pdf, is an excellent resource from one of the most knowledgeable Node.js programmers in the world. This is a Node guide you should definitely take a look at.</p></li>
<li><p><strong><a href="http://nodetuts.com" title="NodeTuts" target="_blank">NodeTuts.com</a></strong> Rails has Railscasts, and Node.js has NodeTuts http://nodetuts.com/. Pedro Teixeira has a large collection (30 and counting at the time of this writing!) of screencasts explaining various aspects of Node.js programming. His examples and explanations are practical, and extremely instructive. Highly recommended!</p></li>
<li><p><strong><a href="http://howtonode.org" title="HowToNode.org" target="_blank">HowToNode.org</a></strong> HowToNode is a community-supported blog created by Tim Caswell, the Node.js community manager at Cloud9 and core contributor to the Node.js open source project. The site contains a number of Node tutorials contributed by the Node.js community, on a variety of specific Node programming topics. This isn't where I'd start to learn Node.js as a beginner, but it is an excellent resource to be exposed to interesting techniques and topics once you have a basic understanding of Node.</p></li>
</ol>

<p>Now get out there and learn to Node!</p>

<p><strong>Get 50% off my Node.js course <a href="http://www.windowsazure.com/en-us/develop/nodejs/">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[If you want to give Node.js a try, here's a list of my favorite Node tutorials, examples, and guides designed to help developers get up to speed on Node.js.]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date><![CDATA[2012-08-02 22:59:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-03 02:59:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[best-resources-to-learn-node-js]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="example"><![CDATA[example]]></category>
		<category domain="post_tag" nicename="guide"><![CDATA[guide]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="tutorial"><![CDATA[tutorial]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[new]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_publish]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_networkpub_meta_content]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Best Resources to Learn Node.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A list of my favorite Node tutorials, examples, and guides designed to help developers get up to speed on Node.js.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, example, examples, tutorial, tutorials, learn, learning, guide, programming, sample, samples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A list of my favorite Node tutorials, examples, and guides designed to help developers get up to speed on Node.js.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, example, examples, tutorial, tutorials, learn, learning, guide, programming, sample, samples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[790479062]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>590</wp:comment_id>
			<wp:comment_author><![CDATA[Tara]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wilson.tara.r@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[207.5.168.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-20 12:02:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-20 16:02:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the helpful information.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[936606298]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>591</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.200.124]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-20 13:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-20 17:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No problem!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>590</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[936606298]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[936712915]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>592</wp:comment_id>
			<wp:comment_author><![CDATA[Acharya Vaddey]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aacharya.vaddey@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[49.206.143.226]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-22 08:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-22 12:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good research.

Here's a free tutorial for beginners.
http://www.tutorialindustry.com/node.js-tutorial-for-beginners]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[938480144]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>551</wp:comment_id>
			<wp:comment_author><![CDATA[Rashid Omar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[afrocomplexion@googlemail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.4.148.3]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-01 10:04:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-01 15:04:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[785812977]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JavaScript Performance Rundown, 2012</title>
		<link>http://codehenge.net/blog/2012/08/javascript-performance-rundown-2012/</link>
		<pubDate>Sun, 05 Aug 2012 01:23:27 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Before giving a conference talk on Node.js earlier this summer, I ran some limited JavaScript benchmark tests, since I couldn't find any recent (this year) data posted. Inspired by <a href="http://ejohn.org/blog/javascript-performance-rundown/">John Resig's performance analysis</a> a few years ago, I decided to expand on that study by updating browsers and adding more benchmark suites to get a more comprehensive view of performance. I'll be presenting results for the 5 top desktop browsers:</p>

<ul>
<li>Google Chrome v20.0.1132.47 (V8 Engine) </li>
<li>Microsoft Internet Explorer v9.0.8112.16421 (Chakra Engine) </li>
<li>Firefox v14.0.1 (SpiderMonkey Engine) </li>
<li>Opera v12.00 (Carakan Engine) </li>
<li>Safari v5.1.7 (SquirrelFish Engine)</li>
</ul>

<p>Browser/engine versions are up to date at time of writing. Values reported are the mean of 10 consecutive runs with each browser. Tests were performed on a Intel Core i7 Macbook Pro with 8GB RAM, running Windows 7 Ultimate SP1.</p>

<p>First, let's check out the <a href="http://www.webkit.org/perf/sunspider/sunspider.html">SunSpider 0.9.1</a> JavaScript benchmark test:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2012/08/sunspider-2012-08-04.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/08/sunspider-2012-08-04.png" alt="" title="sunspider-2012-08-04" width="960" height="720" class="alignleft size-full wp-image-176" /></a></p>

<p>Interestingly, the latest version of Microsoft's Chakra engine slightly edged out Chrome and its V8 engine in my test. Fear not, the result is not statistically significant. However, I do have to give credit to MS. For the capabilities tested by SunSpider, Chakra currently performs as well as V8. The remaining browsers went Opera, Firefox, Safari, from best to worst. These differences, though they appear small on the graph, were statistically significant (p &lt; 0.01).</p>

<p>Moving on, I went to the <a href="http://v8.googlecode.com/svn/trunk/benchmarks/run.html">V8 JavaScript Benchmark Suite</a>. This is the suite used by Google internally to optimize and test the V8 engine, so expect V8 to perform well on this. Results:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2012/08/v8-benchmark-2012-08-04.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/08/v8-benchmark-2012-08-04.png" alt="" title="v8-benchmark-2012-08-04" width="960" height="720" class="alignleft size-full wp-image-177" /></a></p>

<p>Chrome/V8 takes a solid lead here, with Firefox/SpiderMonkey a distant second, and everyone else trailing.</p>

<p>Finally, <a href="http://krakenbenchmark.mozilla.org/">Mozilla's Kraken benchmark suite</a>:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2012/08/kraken-benchmark-2012-08-04.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/08/kraken-benchmark-2012-08-04.png" alt="" title="kraken-benchmark-2012-08-04" width="960" height="720" class="alignleft size-full wp-image-175" /></a></p>

<p>Again, Chrome/V8 and Firefox/SpiderMonkey in a league of their own, with Chrome slightly ahead. Results here were statistically significant (p &lt; 0.01) as well.</p>

<p>So, for now, the V8 engine remains the champ (nothing to worry about here, Node.js users), though its nice to see an unexpected second wind from contenders like IE9 in some benchmarks. If I get time, I'll try to add a few more benchmark suites to round this out, though I did find some reported results for <a href="http://www.flickr.com/photos/26983785@N02/7158672499/">Chrome vs Firefox on Peacekeeper</a> that maintain V8's superiority.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Before giving a conference talk on Node.js earlier this summer, I ran some limited JavaScript benchmark tests, since I couldn't find any recent (this year) data posted. Inspired by <a href="http://ejohn.org/blog/javascript-performance-rundown/">John Resig's performance analysis</a> a few years ago, I decided to expand on that study by updating browsers and adding more benchmark suites to get a more comprehensive view of performance. I'll be presenting results for the 5 top desktop browsers...]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date><![CDATA[2012-08-04 21:23:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-05 01:23:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-performance-rundown-2012]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="research"><![CDATA[Research]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A study of JavaScript engine performance results on multiple benchmark suites for the top 5 desktop browsers: Chrome, Firefox, IE9, Opera, and Safari.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[JavaScript Performance Rundown, 2012]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[A study of JavaScript engine performance results on multiple benchmark suites for the top 5 desktop browsers: Chrome, Firefox, IE9, Opera, and Safari.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[792837367]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript, benchmark, node, node.js, chrome, v8, firefox]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[javascript, benchmark, node, node.js, chrome, v8, firefox]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://webtunings.com/photos/logos/javascript_logo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://webtunings.com/photos/logos/javascript_logo.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>496</wp:comment_id>
			<wp:comment_author><![CDATA[Hoopz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hoopz@hhhh.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.19.180.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 16:06:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 20:06:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why test Safari on Windows rather than on Mac OS X? 5.1.7 isn't even the latest version.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610530095]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>497</wp:comment_id>
			<wp:comment_author><![CDATA[Hoopz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hoopz@ooooo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.19.180.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 16:29:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 20:29:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not trying to be a Mac fanboy, but the vast majority of Safari users are on Mac, not Windows. So I just re-ran the tests on OS X Mountain Lion with Safari 6. If I compare my results to yours using Chrome V8 as the reference level, the results are different enough for all three tests. And I'm using Chrome 21, which one would assume would slightly outperform 20.

Sunspider: Chrome 21 249ms, Safari 6 248ms
Your Safari takes 1.2x longer, mine is equal.

V8 bench: Chrome 21 10599, Safari 6 5209Y
Your Safari gets 1/3 of the score, mine gets 1/2.

Kraken: Chrome 21 2723ms, Safari 6 4007ms
Your Safari takes 4.3x longer, mine 1.47x.

Chrome is still the undisputed champion, but Safari does not seem as bad as this makes it out to be.

]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>496</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610530095]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610542559]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>498</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 16:54:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 20:54:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a good question! 

In a comparative study, you have to limit the uncontrolled variables as much as possible. In this case, changing the OS (or even the computer I ran the tests on) could cause unaccounted for variations in results. So, to make the comparisons as valid as possible, I had to run all of the tests in the exact same environment. Since IE is not available for OSX, the only environment that could support all browsers was Windows. Unfortunately, Safari 6 has not yet been released for Windows. 

I may do some tests of Safari 6 on OSX as an addendum, but it would not be directly comparable to the others, as the OS environment could cause unknown differences in outcomes. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>497</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610542559]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610557701]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>499</wp:comment_id>
			<wp:comment_author><![CDATA[Hoopz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hoopz@ooooo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.19.180.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 19:41:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 23:41:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I completely understand, however, as a developer I'm interested in the browsers people have and use every day. Given that you're testing on a Macbook, it would be interesting for future benchmarks to cover both platforms to get a more representative picture. Also as a side note, I had to measure your graphs to compare results, it would be convenient to get the raw numbers at the end too.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>498</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610557701]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610633200]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>500</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-08-05 19:51:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-08-05 23:51:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a good call - I'll try to post the actual data today or tomorrow.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>499</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610633200]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[610637608]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Using Socket.io With Express 3.x</title>
		<link>http://codehenge.net/blog/2012/08/using-socket-io-with-express-3-x/</link>
		<pubDate>Sat, 25 Aug 2012 19:39:58 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://codehenge.net/blog/wp-content/uploads/2012/08/socketio9-e1345921380351.png"><img src="http://codehenge.net/blog/wp-content/uploads/2012/08/socketio9-e1345921380351.png" alt="" title="socketio9" width="300" height="102" class="alignleft size-full wp-image-180" /></a>Excited about version 3.x of Express, the Node.js web framework? It has some great <a href="https://github.com/visionmedia/express/wiki/New-features-in-3.x" title="Express 3.x Features">new features</a>, and is certainly worth migrating to. Many of my apps make use of <a href="http://socket.io">Socket.io</a>, one of my favorite Node modules, and in this case, and as of now (Socket.io v9.1) the migration isn't as smooth as it could be. Until socket.io catches up with the changes to Express, here's how you can use it with Express 3.x. 
Back in Express 2.x, you would create an express object:</p>

<pre><code>var express = require('express');
var app = express.createServer();
</code></pre>

<p>and then configure your socket.io object to listen along with the express app:</p>

<pre><code>var io = require('socket.io').listen(app);
</code></pre>

<p>then tell the express app to listen on a port:</p>

<pre><code>app.listen(8080);
</code></pre>

<p>One of the first changes in Express 3.x is that express.createServer() has been deprecated. If you try to use it, you will receive the following message when you start your app:</p>

<blockquote>
  <p>Warning: express.createServer() is deprecated, express applications no longer inherit from http.Server, please use: 
   var express = require("express");</p>
  
  <p>var app = express();</p>
</blockquote>

<p>Ok, no big deal, let's just do exactly what it says:</p>

<pre><code>var express = require('express');
var app = express();
</code></pre>

<p><strong>Want to master Node.js?</strong> Try my highly-rated online course <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>. <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">Click here</a> to get 50% off on screencasts, interactive projects, and more!</p>

<p>However, you now have a very different object stored as 'app' then you did in Express 2.x. Before, app was derived from the HTTP server object type, which is what socket.io expects to be passed in its listen() method:</p>

<pre><code>var io = require('socket.io').listen(app);
</code></pre>

<p>If you pass this new app object in, while no error will be thrown, the socket.io connections will not succeed. On launching your app, you will even get a helpful message:</p>

<blockquote>
  <p>Socket.IO's &#96;listen()&#96; method expects an &#96;http.Server&#96; instance as its first parameter. Are you migrating from Express 2.x to 3.x?
  Which is a pretty good clue that you need to make some minor adjustments. Here's how to fix things.</p>
</blockquote>

<p>First, create an HTTP server object from your new Express 3.x app object:</p>

<pre><code>server = http.createServer(app);
</code></pre>

<p>Now, pass this server object to socket.io instead:</p>

<pre><code>var io = require('socket.io').listen(server);
</code></pre>

<p>Finally, you will need to invoke the server object to start listening on a port, rather than the app object, since the server object is what socket.io is linked with. This will work fine, but is against the standard Express 3.x convention:</p>

<pre><code>server.listen(8080);
</code></pre>

<p>Keep an eye out, as you this is a change you will have to make for the time being, especially when adding socket.io into existing Express 3.x apps.</p>

<p>Happy Noding!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Excited about version 3.x of Express, the Node.js web framework? It has some great <a href="https://github.com/visionmedia/express/wiki/New-features-in-3.x" title="Express 3.x Features">new features</a>, and is certainly worth migrating to. Many of my apps make use of <a href="http://socket.io">Socket.io</a>, one of my favorite Node modules, and in this case, and as of now (Socket.io v9.1) the migration isn't as smooth as it could be. Until socket.io catches up with the changes to Express, here's how you can use it with Express 3.x.]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date><![CDATA[2012-08-25 15:39:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-25 19:39:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[using-socket-io-with-express-3-x]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="nodejs"><![CDATA[nodejs]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="socket-io"><![CDATA[socket.io]]></category>
		<category domain="post_tag" nicename="socketio"><![CDATA[socketio]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Using Socket.io With Express 3.x]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, nodejs, node.js, socket.io, socketio, javascript, programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[818362897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Excited about version 3.x of Express, the Node.js web framework? It has some great <a href="https://github.com/visionmedia/express/wiki/New-features-in-3.x" title="Express 3.x Features">new features</a>, and is certainly worth migrating to. Many of my apps make use of <a href="http://socket.io">Socket.io</a>, one of my favorite Node modules, and in this case, and as of now (Socket.io v9.1) the migration isn't as smooth as it could be. Until socket.io catches up with the changes to Express, here's how you can use it with Express 3.x.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, nodejs, node.js, socket.io, socketio, javascript, programming]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Excited about version 3.x of Express, the Node.js web framework? It has some great <a href="https://github.com/visionmedia/express/wiki/New-features-in-3.x" title="Express 3.x Features">new features</a>, and is certainly worth migrating to. Many of my apps make use of <a href="http://socket.io">Socket.io</a>, one of my favorite Node modules, and in this case, and as of now (Socket.io v9.1) the migration isn't as smooth as it could be. Until socket.io catches up with the changes to Express, here's how you can use it with Express 3.x.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/socketio9-e1345923900483.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>519</wp:comment_id>
			<wp:comment_author><![CDATA[Benjamin D42]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[benjamin.d42@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[88.178.148.108]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-03 13:12:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-03 17:12:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[server = http.createServer(app);
         ^
ReferenceError: http is not defined]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[669724907]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>520</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.228.30]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-10-03 13:30:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-10-03 17:30:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You have to require the http module:

http = require('http')]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>519</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[669724907]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[669738527]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>537</wp:comment_id>
			<wp:comment_author><![CDATA[Willian12345]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[willian12345@126.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[115.195.40.30]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-12-26 10:32:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-12-26 15:32:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[helpful ,thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[747766840]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[Gut6]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[r.jagoda@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.189.47.75]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-01-31 06:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-01-31 11:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uf, You helped me a lot! Thanks for this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[784334355]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>586</wp:comment_id>
			<wp:comment_author><![CDATA[Sapardi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sapardee@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[222.124.146.226]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-10 02:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-10 06:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're right Aaron, Benjamin has forgotten to include 'http' module in his code.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>519</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[669724907]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[924857480]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>600</wp:comment_id>
			<wp:comment_author><![CDATA[StuffAndyMakes.com]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andy@stuffandymakes.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.99.229.104]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-09-15 01:07:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-09-15 05:07:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[An hour of searching for why I was getting a silly 404 on the client side when trying to bring in the /socket.io/socket.io.js file and you described the answer right here. Sooooo glad I stumbled onto this! THANK YOU!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1045212744]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-09-15 10:38:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-09-15 14:38:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to be of help!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>600</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1045212744]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1045544503]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>651</wp:comment_id>
			<wp:comment_author><![CDATA[Atom Marvel Raiff]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[atom.raiff@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.145.48.134]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-23 12:15:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-23 17:15:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff. Thanks for the help.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[2374840904]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Screencast: Node.js and MongoDB Using MongoJS</title>
		<link>http://codehenge.net/blog/2012/10/screencast-node-js-and-mongodb-using-mongojs/</link>
		<pubDate>Tue, 09 Oct 2012 01:55:22 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here is a free screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of using the MongoJS module to add MongoDB to your Node.js applications. Enjoy!</p>

<p>[embed]http://www.youtube.com/watch?v=j0mUoe8eghc&amp;feature=plcp[/embed]</p>

<p><strong>Get 50% off my Node.js course <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Here is a free screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of using the MongoJS module to add MongoDB to your Node.js applications. Enjoy!]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date><![CDATA[2012-10-08 21:55:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-10-09 01:55:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[screencast-node-js-and-mongodb-using-mongojs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="mongodb"><![CDATA[mongodb]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="nosql"><![CDATA[nosql]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/10/mongo-db-logo-300x100.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Here is a free screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of using the MongoJS module to add MongoDB to your Node.js applications. Enjoy!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Screencast: Node.js and MongoDB Using MongoJS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/10/mongo-db-logo-300x100.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Here is a free screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of using the MongoJS module to add MongoDB to your Node.js applications. Enjoy!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, javascript, mongodb, mongo, programming, web development, software development, nosql]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[877328540]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_22e6ee8092018e289102a2123bbb72d9]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="391" src="http://www.youtube.com/embed/j0mUoe8eghc?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node.js, node, javascript, mongodb, mongo, programming, web development, software development, nosql]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>599</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Seldon]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[arcseldon@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.149.54.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-09-12 17:10:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-09-12 21:10:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wish I'd known about the node.js by example course discount before I bought it! Nevermind, still definitely worth the full purchase price. Thanks for sharing this article.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1041000914]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>593</wp:comment_id>
			<wp:comment_author><![CDATA[Acharya Vaddey]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[aacharya.vaddey@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[49.206.143.226]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-22 08:18:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-22 12:18:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why didn't you try mongoose module?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[938481445]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>594</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-06-22 08:25:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-06-22 12:25:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I use mongoose as well, when it fits my project. Mongoose is heavier, and generally goes better with full Express MVC web applications. MongoJS is good for lightweight services, and smaller applications. 


Both are useful tools. Pick the one that works best for your current needs.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>593</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[938481445]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[938484145]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Node.js Tutorial: Hello, World!</title>
		<link>http://codehenge.net/blog/2012/10/node-js-tutorial-hello-world/</link>
		<pubDate>Sat, 13 Oct 2012 02:48:58 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is the introductory screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of Node.js, and develop a small "Hello, World!" app. Enjoy!</p>

<p>[embed]http://www.youtube.com/watch?v=H3aZ8h1gEf4&amp;feature=plcp[/embed]</p>

<p><strong>Get 50% off my Node.js course <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">here</a></strong></p>

<p>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/aaroncois" class="twitter-follow-button" data-show-count="false">Follow @aaroncois</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[This is the introductory screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of Node.js, and develop a small "Hello, World!" app. Enjoy!]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date><![CDATA[2012-10-12 22:48:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-10-13 02:48:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[node-js-tutorial-hello-world]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Node.js Tutorial: Hello, World!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This is the introductory screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of Node.js, and develop a small "Hello, World!" app. Enjoy!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, example, examples, tutorial, tutorials, learn, learning, guide, programming, sample, samples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_thumbnail]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_featured_image]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://codehenge.net/blog/wp-content/uploads/2012/08/nodejs.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[This is the introductory screencast from my online course, <a href="http://www.udemy.com/learn-nodejs-by-example/" title="Learn Node.js by Example">Learn Node.js by Example</a>! In this screencast, I present the basics of Node.js, and develop a small "Hello, World!" app. Enjoy!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[suf_meta_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[node, node.js, javascript, example, examples, tutorial, tutorials, learn, learning, guide, programming, sample, samples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[sponge]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[882957808]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_d816573f9e9d664959a5603a752669cc]]></wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="391" src="http://www.youtube.com/embed/H3aZ8h1gEf4?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Automate Your Development Environment With Vagrant</title>
		<link>http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/</link>
		<pubDate>Sun, 10 Feb 2013 17:12:19 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[<p>[caption id="attachment_203" align="alignleft" width="200"]<img class="size-full wp-image-203" alt="100% Certified!" src="http://codehenge.net/blog/wp-content/uploads/2013/02/works-on-my-machine-starburst1-e1359931607861.png" width="200" height="193" /> 100% Certified![/caption]</p>

<h2>Works on My Machine!</h2>

<p>I'd like to talk about my favorite software development meme: The 100%, certified, "Works on my machine!" build. We've all seen it, and it's funny every time. Take a second and consider how many times, in fact, you have seen this situation. You write and test your code thoroughly, and it all goes to hell when you commit to your build environment. Or worse, everything's working fine in your staging environment, and something breaks unexpectedly when you push to production. How much frustration can be chalked up such scenarios? How much time have you lost?</p>

<p>Let's explore how this phenomenon occurs. The root cause is a lack of parity between environments throughout your software development process. Your development environment is not the same as your test environment. Your staging environment differs from your production environment. This happens naturally, especially with development machines. Developers work on many projects, simultaneously or over the course of time. They pile up applications, libraries, and different versions of tools, much in the same way a basement workshop becomes cluttered after years of home repair projects. Consider your average developer. Maybe they get a new machine and start working on a Java project. They install Java6, Tomcat6, Spring, etc. Then a few more project come along, and Java7, Tomcat7, Python 2.7.2, Django, and C++ are installed. Of course, our developer wants to keep up on the latest in the field, so they also install Node.js, Clojure, MongoDB, Python3, and C++11 to tinker with. And that's not to mention other, ahem, <a href="https://minecraft.net/">exercises</a> <a href="http://store.steampowered.com/">in</a> <a href="http://fallout.bethsoft.com/">mental</a> <a href="http://www.worldofwarcraft.com">acuity</a>. Unfortunately, this leads to a fairly cluttered system, with plenty of potential for unanticipated software interactions:</p>

<div>
  [caption id="attachment_206" align="aligncenter" width="520"]<a href="http://codehenge.net/blog/wp-content/uploads/2013/02/cluttered-system-e1360372808569.png"><img src="http://codehenge.net/blog/wp-content/uploads/2013/02/cluttered-system-e1360372808569.png" alt="Cluttered system" width="520" height="390" class="size-full wp-image-206" /></a> What could go wrong?[/caption]
</div>

<p>On top of this, developers prefer different development environments. Some prefer OSX, some windows, some a particular flavor of linux. Just try to get an Ubuntu fan to code in Windows. Go ahead, I'll wait. And, of course, different IDEs, tools, debuggers, network configurations... Each installed application, each change in configuration, causes divergence from the clean operating environment you desire for development and testing. The environment that matches your pristine staging and production servers. So what to do? The ideal solution would create unique, reproducible environments for each project. Each developer's environment would be identical, as would the staging and production servers.</p>

<h2>Enter Vagrant...</h2>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-e1360203410345.png"><img class="alignright size-full wp-image-204" alt="vagrant" src="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-e1360203410345.png" width="200" height="200" /></a></p>

<p>Vagrant leverages virtualization and automated system configuration to make this dream a reality. With VirtualBox and its comprehensive API under the hood, Vagrant creates and manages custom virtual environments to your exact specification. But wait, we've been able to create virtual machines for years. What's new here? The problem is configuration of a brand new virtual macine for each project is a massive chore, reinstalling all of your dev tools each time sounds like torture, and developers will still each want VMs of different operating systems...what are we solving? Vagrant does it differently. By giving you the option to leverage powerful, proven automated configuration technologies such as <a href="http://www.opscode.com/chef/">Chef</a> or <a href="https://puppetlabs.com/">Puppet</a> (as well as your own custom shell scripts, if you like), Vagrant takes the time and tedium out of configuring a virtual environment. Need a Ruby on Rails development environment? Use <a href="http://community.opscode.com/cookbooks/rails_rvm">this open source Chef cookbook</a> already designed by someone else. Python and Django? <a href="http://community.opscode.com/cookbooks/django">Yo</a>. How about Node.js? Here, <a href="https://github.com/cacois/vagrant-node-mongo">I'll give you mine</a>. Don't you love FOSS? But your development tools, such as IDEs, browsers, etc, and the preferred operating systems...this is the best part. By clever use of shared directories and port mapping, Vagrant allows you to keep your code on your host machine, with all of your current tools and apps. You can even run and debug your web application in your own host browser. The VM running in the background, serving up your app, is transparent to you, doing nothing but running your app in a custom, controlled environment.</p>

<p>Let's try a quick demo, to make this workflow completely clear. First, download and install <a href="https://www.virtualbox.org/">VirtualBox</a> (if you don't have it already) and <a href="http://www.vagrantup.com/">Vagrant</a>. Vagrant will be creating a custom virtual machine for you, based on a configuration i'll give you. To do this, Vagrant will need a template, or base VM, to copy and customize. The vagrant dev team is nice enough to provide a number of base linux VMs for our use. To install one, run the following command:</p>

<p><code>$ vagrant box add precise32 http://files.vagrantup.com/precise32.box</code></p>

<p>This will download a base VM of Ubuntu 12.04 32-bit, about 250MB in size, and refer to it by the name "precise32". Next, you'll need a project to work on, and a development environment configuration. Here's a Node.js demo I have prepared for you. Clone this repository, and move into the project directory:</p>

<p><code>$ git clone https://github.com/cacois/vagrant-node-mongo.git
$ cd vagrant-node-mongo</code></p>

<p>By the way, are you interested in <strong>mastering Node.js</strong>? Check out my online course <a href="http://www.udemy.com/learn-nodejs-by-example/">Learn Node.js by Example</a> for detailed screencasts and example applications. Sign up today from <a href="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">this link and receive 50% off</a>!</p>

<p>Take a look inside this directory.</p>

<pre><code>vagrant-node-mongo / 
   README.md 
   Vagrantfile 
   /app 
   /cookbooks
</code></pre>

<p>Inside the 'app' subdirectory, I have have a small node.js app that returns some text output to an HTTP request. In 'cookbooks' are some Chef cookbooks, or collections of recipes that define automated configuration commands to install Node.js, MongoDB, apt-get, and other essential tools. Let's take a closer look at the file named 'Vagrantfile'. This is the Vagrant configuration file, defining how to set up your custom project VM. It should look like this:</p>

<pre><code>Vagrant::Config.run do |config|
  config.vm.box = "precise32"

  config.vm.forward_port 3000, 3000

  config.vm.share_folder "app", "/home/vagrant/app", "app"

  # allow for symlinks in the app folder
  config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/app", "1"]
  config.vm.customize ["modifyvm", :id, "--memory", 512]

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "cookbooks"
    chef.add_recipe "apt"
    chef.add_recipe "mongodb"
    chef.add_recipe "build-essential"
    chef.add_recipe "nodejs::install_from_package"
    chef.json = {
      "nodejs" =&gt; {
        "version" =&gt; "0.8.0"
        # uncomment the following line to force
        # recent versions (&gt; 0.8.4) to be built from
        # the source code
        # , "from_source" =&gt; true
      }
    }
  end
end
</code></pre>

<p>Let's go through the config file to understand what its doing. First, we are telling Vagrant to use the base box named 'precise32' you downloaded a few moments ago. Then we configure port forwarding between the Vagrant VM and our host over port 3000, and a shared folder in which we will put our application code. Then some VM hardware settings, such as RAM configuration. Finally, we configure the automation system (chef_solo, in this case), and add the recipes from our '/cookbooks' directory defining the applications and services we want to install in the Vagrant VM. Note that I can also pass in specific configurations in JSON format - I'm using this to specify the exact version of Node.js (0.8.0) I want to install.</p>

<p>To power on your custom VM, from inside your application directory issue the following command:</p>

<p><code>$ vagrant up</code></p>

<p>If this is the first time you have issued this command for a new project, Vagrant will actually create the VM from scratch, which may take a few moments. The next time you enter the command, it will just power the VM on, which is substantially faster. When the 'vagrant up' command is issued, Vagrant works in the background to stand up the VM required for that environment (as defined in the Vagrantfile). If you open up the VirtualBox UI you can actually watch the VM appear, but there's no real reason to do so - you won't need the UI to interact with your VM. Instead, once the VM is up, type:</p>

<p><code>$ vagrant ssh</code></p>

<p>This will automatically give you an ssh session into your Vagrant VM, without the need to enter a hostname or credentials. You should see console output similar to the following:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-up.png"><img src="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-up.png" alt="vagrant-ssh" width="577" height="157" class="aligncenter size-full wp-image-207" /></a></p>

<p>As you can see, Vagrant has created and ssh session for me into my Vagrant VM. This is the running environment for your application. It's a clean VM, with only a base operating system and the exact applications you configured installed. Issue the following commands to verify the installation of Node.js, NPM, and MongoDB:</p>

<p><code>$ node-v
$ npm -v
$ mongo -version</code></p>

<p>if you do an 'ls', you will also notice a directory '/app', located in your vagrant home directory. Inside is your application code - these files are actually located on your host system, but are visible on your vagrant VM as a VirtualBox shared directory. This is where you will run your code. The shared directory means I can pull up Sublime Text 2 in my host OS (OSX), and edit the files that will be run in the Vagrant VM. I could start the test application now to see it running, but to get an optimal workflow, I want something that will restart my application when changes are made to the code. To get this functionality in Node.js, go ahead and install supervisor on your Vagrant VM from the ssh command line:</p>

<p><code>$ sudo npm install supervisor -g</code></p>

<p>(Note: I could eventually roll this installation into my chef recipes that set up this environment, to save myself a step)</p>

<p>Now launch the application:</p>

<p><code>$ supervisor app/app.js</code></p>

<p>Open up a text editor or IDE in your host system, and open the vagrant-node-mongo/app/app.js file for editing. Now here's a really cool part. Open a browser in your host system, and navigate to http://localhost:3000. Since your Node.js app is running in your Vagrant VM, you will see the following:</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-hello-world.png"><img src="http://codehenge.net/blog/wp-content/uploads/2013/02/vagrant-hello-world-e1360514201913.png" alt="vagrant-hello-world" width="500" height="253" class="browser-window-image aligncenter size-full wp-image-208" /></a></p>

<p>The application is running in your Vagrant VM, but you can test it on your host browser, just as if it were running locally! Now go into your text editor and change the app.js code from</p>

<pre><code>var http = require('http');

server = http.createServer(function(req, res) {
  res.writeHead(200, {"Content-Type": "text/html"});
  res.write("&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello, World!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;");
  res.end();
}).listen(3000);
</code></pre>

<p>to</p>

<pre><code>var http = require('http');

server = http.createServer(function(req, res) {
  res.writeHead(200, {"Content-Type": "text/html"});
  res.write("&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello, from Vagrant!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;");
  res.end();
}).listen(3000);
</code></pre>

<p>Then refresh your browser window. You will see your changes reflected in the running application.</p>

<p><a href="http://codehenge.net/blog/wp-content/uploads/2013/02/hello-from-vagrant.png"><img src="http://codehenge.net/blog/wp-content/uploads/2013/02/hello-from-vagrant-e1360514820793.png" alt="hello-from-vagrant" width="500" height="315" class="browser-window-image aligncenter size-full wp-image-209" /></a></p>

<p>This is the real power of Vagrant - I can code on my local machine, using my tools, applications, IDE, etc. I can run the application on my custom, controller Vagrant VM with a few short commands, and test the app using my favorite local browsers and testing tools. I"m working in a VM, but really don't even have to know about it. Vagrant handles all the management of the VM for me. When I'm done working, I just exit out of the Vagant ssh session:</p>

<p><code>$ exit</code></p>

<p>and tell Vagrant to power down the VM:</p>

<p><code>$ vagrant halt</code></p>

<p>Then I can move on to another project. I can have a Vagrant VM for each project I'm working on. Moreover, this is a <em>revolution</em> for team workflows. I can check my Vagrantfile and cookbooks into source control, just as I did with the github application we've been working on, and I can be assured that each member of my team will be developing his code against exactly the same runtime environment. What's more, since we are using Chef to do the VM configuration, I can even use the same Chef cookbooks to configure my centralized test servers, my staging environment, or even production. If we change something in the runtime environment for the application, each developer issues a vagrant destroy command:</p>

<p><code>$ vagrant destroy</code></p>

<p>and then creates a new VM with the updated configurations. This process rarely takes more than 2 minutes, and results in a completely fresh, 100% matching environment for the entire team, across the entire project workflow.</p>

<p>I can be absolutely certain that I'll never again hear "it works on my machine", because I'll know that every machine running my code is exactly the same.</p>

<p><strong>If you liked this article, help me out by sharing a 50% discount to my Node.js course here: <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge" data-text="Sign up for Learn Node.js by Example now and get 50% off!" data-via="AaronCois" data-size="large" data-hashtags="nodejs">Tweet</a> Thanks!</strong></p>

<p>You should follow me on Twitter here: <a href="https://twitter.com/AaronCois" class="twitter-follow-button" data-show-count="false" data-show-screen-name="false">Follow @AaronCois</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Vagrant leverages virtualization and automated system configuration to deliver you customized virtual environments for your development projects. With VirtualBox and its comprehensive API under the hood, Vagrant creates and manages custom virtual environments to your exact specification. But wait, we've been able to create virtual machines for years. What's new here? The problem is configuration of a brand new virtual macine for each project is a massive chore, reinstalling all of your dev tools each time sounds like torture, and developers will still each want VMs of different operating systems...what are we solving? Vagrant does it differently. By giving you the option to leverage powerful, proven automated configuration technologies such as Chef or Puppet (as well as your own custom shell scripts, if you like), Vagrant takes the time and tedium out of configuring a virtual environment]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date><![CDATA[2013-02-10 12:12:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-10 17:12:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[automate-your-development-environment-with-vagrant]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="automate"><![CDATA[automate]]></category>
		<category domain="post_tag" nicename="automated"><![CDATA[automated]]></category>
		<category domain="post_tag" nicename="automation"><![CDATA[automation]]></category>
		<category domain="post_tag" nicename="configuration"><![CDATA[configuration]]></category>
		<category domain="post_tag" nicename="devops"><![CDATA[devops]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="technology"><![CDATA[Technology]]></category>
		<category domain="post_tag" nicename="vagrant"><![CDATA[vagrant]]></category>
		<category domain="post_tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>
		<category domain="category" nicename="virtualization"><![CDATA[Virtualization]]></category>
		<category domain="post_tag" nicename="virtualization-2"><![CDATA[virtualization]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1075588897]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
			<wp:meta_value><![CDATA[Automate Your Development Environment With Vagrant]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
			<wp:meta_value><![CDATA[automate, automated, automation, node, node.js, vagrant, virtualization, virtualbox, configuration, devops]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
			<wp:meta_value><![CDATA[Introducing Vagrant, a powerful tool which leverages virtualization and automated system configuration technologies to deliver you customized virtual environments for your development projects. ]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>553</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Borg]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/profile.php?id=505378596</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[216.121.138.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-10 13:36:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-10 18:36:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is exactly the sort of thing I've been looking for. Excellent post.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[794802422]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>554</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-10 13:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-10 18:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mike, glad you found it useful!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>553</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[794802422]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[794815130]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>556</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[brianm@cubicleninjas.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://cubicleninjas.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.196.217.206]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-11 10:50:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-11 15:50:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is an excellent tutorial. I hope we will be adopting this very soon it will really help automate our processes! Thanks for this!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795508096]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>557</wp:comment_id>
			<wp:comment_author><![CDATA[Ron]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ron@webrant.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[63.249.110.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-11 16:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-11 21:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Launching VM, I'm getting error: "The guest additions on this VM do not match the install version of
VirtualBox" Which version of VirtualBox did you use? I've got 4.2.6 for OSX.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795830360]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>558</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-11 16:54:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-11 21:54:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That error shouldn't cause you any problems. I'm not sure what version of VB the Vagrant base boxes on vagrantup.com were built for, chances are you just have a slightly newer version of VirtualBox. ]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>557</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795830360]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795841162]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>559</wp:comment_id>
			<wp:comment_author><![CDATA[Ron]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ron@webrant.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[63.249.110.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-11 19:17:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-12 00:17:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for they reply Constantine. Looking in VirtualBox GUI it looks like specific error is "Failed to load VMMR0.r0 (VERR_SUPLIB_WORLD_WRITABLE)." Wondering which folder it's referring to as vagrant-node-mongo and VirtualBox VMs are writable only by me.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>558</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795841162]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795964575]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>560</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-12 09:12:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-12 14:12:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take a look at this post:

http://whatan00b.com/virtualbox-and-subsequently-vagrant-machines-fail-to-boot

Let me know if this helps.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>559</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[795964575]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[796544944]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>561</wp:comment_id>
			<wp:comment_author><![CDATA[Ron]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ron@webrant.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[63.249.110.210]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-12 14:26:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-12 19:26:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That did it! Thanks!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>560</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[796544944]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[796826107]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>562</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.237.243.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-02-12 16:30:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-02-12 21:30:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>561</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[796826107]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[796976170]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>577</wp:comment_id>
			<wp:comment_author><![CDATA[Josh Habdas]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jhabdas@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.habdas.org/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[50.148.122.136]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-12 00:58:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-12 04:58:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take it a step further and start <a href="www.habdas.org/developing-modern-web-apps-on-windows-vagrant/" rel="nofollow">Developing Modern Web Applications on Windows with Vagrant.</a>]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[893889077]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>608</wp:comment_id>
			<wp:comment_author><![CDATA[nick]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[paintings@nickcritser.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[74.73.105.132]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-12-27 10:37:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-12-27 15:37:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Update Vagrant error messages aside&gt;&gt;&gt; Holy Shit!  &gt;&gt;&gt; You did a great job in getting all this pieces together in a simple intro.  This kind of workflow will definitely change how we write code.  Good Job.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1178273791]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>643</wp:comment_id>
			<wp:comment_author><![CDATA[Massive Startup Resource List - Michael Ko - Michael Ko]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.michaelko.me/2015/03/20/massive-startup-resource-list/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[96.47.32.233]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-20 04:30:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-20 08:30:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] Automate Your Development Environment With Vagrant http://codehenge.net/blog/2013/02/automate-your-development-environment-with-vagrant/ [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[0]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426840239.8699861;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>644</wp:comment_id>
			<wp:comment_author><![CDATA[Francois Marot]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[francois.marot@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://fraaargh.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.235.207.46]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-04-28 17:29:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-04-28 21:29:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for this tutorial. I'm starting to understand Vagrant ! :)
One thing is still unclear to me though: the updates to the Vagrantfile.
You say "If we change something in the runtime environment for the application, each developer issues a vagrant destroy command: $ vagrant destroy"

Problem is most of the time if you have modified something in the base box used by devs, you would like them to download a new box (i imagine the name of the box has changed in the Vagrantfile isn't it ? otherwise how do you update the box ?). Otherwise the next vagrant up will fail with an unknown box. I imagine "Vagrant destroy" is followed by vagrant box add . Am I right ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1992613782]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>648</wp:comment_id>
			<wp:comment_author><![CDATA[Constantine Aaron Cois]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cacois@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.codehenge.net</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[98.219.174.183]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-13 12:43:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-13 16:43:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Francois! 

Two things: 1) In general, I try to keep my base boxes very simple, to avoid having them be modified. Most changes I make to dev boxes are made through changes to the Vagrantfile, so the devs can each just re-provision to get updates. 2) if you do change the base box, you are right, devs would have to download it again. Vagrant provides a "vagrant box outdated" command which checks box metadata to see if a box is out of date. So, you can change the version of the box on the central server, and vagrant can notify devs that it is out of date. They would then have to destroy and recreate their dev env. 

Hope this helps!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>644</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1992613782]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[2077374469]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>649</wp:comment_id>
			<wp:comment_author><![CDATA[DerekM]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[derekmiranda@mac.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[173.220.90.59]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-31 13:48:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-31 17:48:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been using Vagrant for a long time, but I am new to Node.  Typically you don't want to use "localhost" on the host machine. Usually, with Vagrant you have domains for the project set in your hosts file:, i.e., "192.168.56.101 app-one.dev" and "192.168.56.102 app-two.dev". This allows you to have multiple projects running at the same time and in a lot of cases, cross communicate. So, how would you get node to respond to "app-one.dev:3000" instead of "localhost:3000"? Right now, even though I have a host set in my hosts file, the app is unreachable using "192.168.56.101:3000" as well as "app-one.dev:3000"]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[2167592341]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Discount for Online JavaScript Conference 2013</title>
		<link>http://codehenge.net/blog/2013/09/discount-for-online-javascript-conference-2013/</link>
		<pubDate>Fri, 27 Sep 2013 13:44:25 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=228</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ll be speaking at the Environments for Humans JavaScript Summit on November 21st. The conference is a 3-day, all online conference, which means no travel hassle/cost, and you get to watch great talks from the comfort of home!</p>

<p>It's shaping up to be a great lineup (check out the <a href="http://environmentsforhumans.com/2013/javascript-summit/">list of talks!</a>), and your registration includes copies of slides and access to recordings of talks after the event.</p>

<p>The organizers have given me a discount code to share with you: Use 20COIS to get 20% off individual or meeting room tickets. Enjoy!</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date><![CDATA[2013-09-27 09:44:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-09-27 13:44:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[discount-for-online-javascript-conference-2013]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="post_tag" nicename="nodejs"><![CDATA[nodejs]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="talk"><![CDATA[talk]]></category>
		<category domain="post_tag" nicename="talks"><![CDATA[talks]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[230]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[1802232928]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What is Node.js?</title>
		<link>http://codehenge.net/blog/2014/01/what-is-node-js/</link>
		<pubDate>Mon, 06 Jan 2014 03:58:31 +0000</pubDate>
		<dc:creator><![CDATA[cacois]]></dc:creator>
		<guid isPermaLink="false">http://codehenge.net/blog/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Node.js - It's new, its exciting...but what, exactly, is it?</p>

<p>You may have heard of Node.js, but know only that it has something to do with “real-time” or “highly scalable” apps. You may have heard that Node.js is JavaScript for the server-side (and you may be wondering why anyone would want that!). Or maybe you know exactly what Node.js is, but aren’t sure when or why to use it. Just sit back, and I’ll explain everything.</p>

<p>Let's start at the beginning...</p>

<h2>The Web is Changing</h2>

<p>The web used to be about consumption. Viewing web pages, watching videos, looking at pictures of cats. Of course, its still about pictures of cats…but the web has increasingly become about interaction. Users around the world want to interact with each other, and they want to do it in real time. Chat, gaming, constant social media updates, collaboration – each of these features requires real-time communication between users, clients, and servers across the web. What’s more, this real-time communication needs to happen at massive scale, supporting hundreds, thousands, even millions of users.</p>

<p>So what do software developers need to make this happen? We need real-time communication between clients and servers – which means we need fast, persistent I/O. Anyone with web development experience knows that HTTP wasn’t built with this use case in mind. Large numbers of clients continuously polling a server simultaneously is incredibly slow and inefficient. To enable scalable real-time communication, servers need to be able to push data to clients, instead of HTTP’s heavy request/response model. We also need to make sure that these lightweight push communications work in a way that is scalable, maintainable, and usable from a software development standpoint.</p>

<h2>Enter Node.js</h2>

<p>Node.js is an event-driven, server-side JavaScript environment. Node runs JavaScript using the V8 engine developed by Google for use in their Chrome web browser. Leveraging V8 allows Node to provide a server-side runtime environment that compiles and executes JavaScript Really FastTM. The major speed increase is due to the fact that V8 compiles JavaScript into native machine code, instead of interpreting it or executing it as bytecode. Node.js and the V8 engine are both open source and cross-platform, running on Mac OSX, Windows, and Linux.</p>

<p>But JavaScript? On the server-side? Why? Though JavaScript has traditionally been relegated to menial tasks in the web browser, it’s actually a fully-functional programming language, capable of anything that more traditional languages like C++. Ruby, or Java, are. Furthermore, JavaScript has the advantage of an excellent event model, ideal for asynchronous programming. JavaScript is also a ubiquitous language, well known by millions of developers. This lowers the learning curve of Node.js, since most devs won’t have to learn a new language to start building Node.js apps.</p>

<p><a href="https://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">For a limited time, subscribe to Learn Node.js by Example now and get 50% off!</a></p>

<h2>Asynchronous Programming The Easy Way</h2>

<p>In addition to lightning fast JavaScript execution, the real magic behind Node.js is something called the Event Loop. To scale to large volumes of clients, all I/O intensive operations in Node.js are performed asynchronously. The traditional threaded approach to asynchronous code is cumbersome and creates a non-trivial memory footprint for large numbers of clients (each client spawns a thread, each thread uses dedicated memory, the memory usage adds up). To avoid this inefficiency, as well as the known difficulty of programming threaded applications, Node.js maintains an event loop which manages all asynchronous operations for you. When a Node application needs to perform a blocking operation (I/O operations, heavy computation, etc) it sends an asynchronous task to the event loop, along with a callback function, and then continues to execute the rest of its program. The event loop keeps track of the asynchronous operation, and executes the given callback when it completes, returning it’s results to the application. This allows you to manage a large number of operations, such as client connections or computations, letting the event loop efficiently managing the thread pool and optimize task execution. Of course, leaving this responsibility to the event loop makes life particularly easy for Node.js developers, who can then focus on their application functionality.</p>

<p>[caption id="attachment_236" align="aligncenter" width="600"]<a href="http://codehenge.net/blog/wp-content/uploads/2014/01/node-event-loop.png"><img src="http://codehenge.net/blog/wp-content/uploads/2014/01/node-event-loop-e1388980560411.png" alt="The Node.js Event Loop Lifecycle" width="600" height="449" class="size-full wp-image-236" /></a> The Node.js Event Loop Lifecycle[/caption]</p>

<p>This capability to simplify asynchronous programming is what makes Node.js such a powerful tool for developers. With Node.js, you can build complex applications that can scale to millions of client connections because the application handling client requests is passing off all of the time-intensive work of managing I/O and computation to the event loop.</p>

<h2>The Node.js Community</h2>

<p>In addition to it’s innate capabilities, Node.js has a thriving open source community which has produced many excellent modules to add additional capabilities to Node.js applications. One of the most famous is Socket.io, a module to manage persistent connections between client and server, enabling the server to push real-time updates to clients. Socket.io abstracts the technology used to maintain these connections away from the developer, automatically using the best technology available for a particular client (websockets if the browser supports it, JSONP or Ajax longpolling if not). This amazing technology allows you to program real-time applications simply, with very little code. For example, take this highly-scalable, real-time chat server:</p>

<pre><code>server = require('http').createServer();
server.listen(8080);

var io = require('socket.io').listen(server);
io.sockets.on('connection', function(socket){

    // when message received, send it to all connected clients
    socket.on('message', function(message){
        console.log("Received message: " + message + 
                    " - from client " + socket.id);
        io.sockets.emit('chat', socket.id, message);
    });    
});
</code></pre>

<p>Just 10 lines of code! The accompanying client-side code is just as simple. Imagine the possibilities!</p>

<p>Get started writing Node.js applications now with Learn Node.js By Example. Through detailed screencasts, tutorials, and in-depth coding exercises, this highly-rated course will have you writing Node.js applications in no time.</p>

<p><a href="https://www.udemy.com/learn-nodejs-by-example/?couponCode=codehenge">For a limited time, subscribe to Learn Node.js by Example now and get 50% off!</a></p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Node.js - It's new, its exciting...but what, exactly, is it? Let's start at the beginning...]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date><![CDATA[2014-01-05 22:58:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-01-06 03:58:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[what-is-node-js]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asynchronous"><![CDATA[asynchronous]]></category>
		<category domain="post_tag" nicename="development"><![CDATA[development]]></category>
		<category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="post_tag" nicename="node"><![CDATA[node]]></category>
		<category domain="post_tag" nicename="node-js"><![CDATA[node.js]]></category>
		<category domain="category" nicename="node-js-programming"><![CDATA[Node.js]]></category>
		<category domain="post_tag" nicename="nodejs"><![CDATA[nodejs]]></category>
		<category domain="category" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software-development"><![CDATA[software-development]]></category>
		<category domain="post_tag" nicename="web"><![CDATA[web]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[235]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[dsq_thread_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[2094594002]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>611</wp:comment_id>
			<wp:comment_author><![CDATA[dfhsdhdhd]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thephpmagician@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[101.218.131.107]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-01-12 01:33:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-01-12 06:33:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[awsome]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_parent_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[dsq_post_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1196990046]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
